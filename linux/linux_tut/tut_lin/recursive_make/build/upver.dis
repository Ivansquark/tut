
build/src/upver.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	f3 0f 1e fa          	endbr64
   4:	55                   	push   rbp
   5:	48 89 e5             	mov    rbp,rsp
   8:	48 83 ec 10          	sub    rsp,0x10
   c:	bf 00 04 00 00       	mov    edi,0x400
  11:	e8 00 00 00 00       	call   16 <main+0x16>
  16:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  1a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  1f:	75 2d                	jne    4e <main+0x4e>
  21:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 28 <main+0x28>
  28:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2b:	48 89 c1             	mov    rcx,rax
  2e:	ba 17 00 00 00       	mov    edx,0x17
  33:	be 01 00 00 00       	mov    esi,0x1
  38:	48 8d 05 00 00 00 00 	lea    rax,[rip+0x0]        # 3f <main+0x3f>
  3f:	48 89 c7             	mov    rdi,rax
  42:	e8 00 00 00 00       	call   47 <main+0x47>
  47:	b8 01 00 00 00       	mov    eax,0x1
  4c:	eb 7e                	jmp    cc <main+0xcc>
  4e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  52:	48 89 c7             	mov    rdi,rax
  55:	e8 00 00 00 00       	call   5a <main+0x5a>
  5a:	85 c0                	test   eax,eax
  5c:	74 2d                	je     8b <main+0x8b>
  5e:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 65 <main+0x65>
  65:	48 8b 00             	mov    rax,QWORD PTR [rax]
  68:	48 89 c1             	mov    rcx,rax
  6b:	ba 07 00 00 00       	mov    edx,0x7
  70:	be 01 00 00 00       	mov    esi,0x1
  75:	48 8d 05 00 00 00 00 	lea    rax,[rip+0x0]        # 7c <main+0x7c>
  7c:	48 89 c7             	mov    rdi,rax
  7f:	e8 00 00 00 00       	call   84 <main+0x84>
  84:	b8 01 00 00 00       	mov    eax,0x1
  89:	eb 41                	jmp    cc <main+0xcc>
  8b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  8f:	48 89 c7             	mov    rdi,rax
  92:	e8 00 00 00 00       	call   97 <main+0x97>
  97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  9b:	48 89 c7             	mov    rdi,rax
  9e:	e8 00 00 00 00       	call   a3 <main+0xa3>
  a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  a7:	48 89 c7             	mov    rdi,rax
  aa:	e8 00 00 00 00       	call   af <main+0xaf>
  af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  b3:	48 89 c7             	mov    rdi,rax
  b6:	e8 00 00 00 00       	call   bb <main+0xbb>
  bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  bf:	48 89 c7             	mov    rdi,rax
  c2:	e8 00 00 00 00       	call   c7 <main+0xc7>
  c7:	b8 00 00 00 00       	mov    eax,0x0
  cc:	c9                   	leave
  cd:	c3                   	ret

Disassembly of section .rodata:

0000000000000000 <.rodata>:
   0:	43 61                	rex.XB (bad)
   2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   5:	74 20                	je     27 <main+0x27>
   7:	61                   	(bad)
   8:	6c                   	ins    BYTE PTR es:[rdi],dx
   9:	6c                   	ins    BYTE PTR es:[rdi],dx
   a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   b:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   e:	65 20 6d 65          	and    BYTE PTR gs:[rbp+0x65],ch
  12:	6d                   	ins    DWORD PTR es:[rdi],dx
  13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  14:	72 79                	jb     8f <main+0x8f>
  16:	0a 00                	or     al,BYTE PTR [rax]
  18:	46 61                	rex.RX (bad)
  1a:	69                   	.byte 0x69
  1b:	6c                   	ins    BYTE PTR es:[rdi],dx
  1c:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	08 03                	or     BYTE PTR [rbx],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 01 08 00       	add    eax,0x80100
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 0a                	add    BYTE PTR [rdx],cl
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 00                	add    BYTE PTR [rax],al
  11:	1d 00 00 00 00       	sbb    eax,0x0
	...
  22:	ce                   	(bad)
	...
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 33 <.debug_info+0x33>
  33:	02 d6                	add    dl,dh
  35:	17                   	(bad)
  36:	3a 00                	cmp    al,BYTE PTR [rax]
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	02 08                	add    cl,BYTE PTR [rax]
  3c:	07                   	(bad)
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	0b 08                	or     ecx,DWORD PTR [rax]
  4a:	02 01                	add    al,BYTE PTR [rcx]
  4c:	08 00                	or     BYTE PTR [rax],al
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	00 02                	add    BYTE PTR [rdx],al
  52:	02 07                	add    al,BYTE PTR [rdi]
  54:	00 00                	add    BYTE PTR [rax],al
  56:	00 00                	add    BYTE PTR [rax],al
  58:	02 01                	add    al,BYTE PTR [rcx]
  5a:	06                   	(bad)
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	02 02                	add    al,BYTE PTR [rdx]
  61:	05 00 00 00 00       	add    eax,0x0
  66:	0c 04                	or     al,0x4
  68:	05 69 6e 74 00       	add    eax,0x746e69
  6d:	02 08                	add    cl,BYTE PTR [rax]
  6f:	05 00 00 00 00       	add    eax,0x0
  74:	05 00 00 00 00       	add    eax,0x0
  79:	03 98 19 6d 00 00    	add    ebx,DWORD PTR [rax+0x6d19]
  7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 85 <.debug_info+0x85>
  85:	03 99 1b 6d 00 00    	add    ebx,DWORD PTR [rcx+0x6d1b]
  8b:	00 03                	add    BYTE PTR [rbx],al
  8d:	91                   	xchg   ecx,eax
  8e:	00 00                	add    BYTE PTR [rax],al
  90:	00 02                	add    BYTE PTR [rdx],al
  92:	01 06                	add    DWORD PTR [rsi],eax
  94:	00 00                	add    BYTE PTR [rax],al
  96:	00 00                	add    BYTE PTR [rax],al
  98:	0d 00 00 00 00       	or     eax,0x0
  9d:	d8 04 31             	fadd   DWORD PTR [rcx+rsi*1]
  a0:	08 02                	or     BYTE PTR [rdx],al
  a2:	02 00                	add    al,BYTE PTR [rax]
  a4:	00 01                	add    BYTE PTR [rcx],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	00 00                	add    BYTE PTR [rax],al
  aa:	33 07                	xor    eax,DWORD PTR [rdi]
  ac:	66 00 00             	data16 add BYTE PTR [rax],al
  af:	00 00                	add    BYTE PTR [rax],al
  b1:	01 00                	add    DWORD PTR [rax],eax
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	00 36                	add    BYTE PTR [rsi],dh
  b7:	09 8c 00 00 00 08 01 	or     DWORD PTR [rax+rax*1+0x1080000],ecx
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	00 00                	add    BYTE PTR [rax],al
  c2:	37                   	(bad)
  c3:	09 8c 00 00 00 10 01 	or     DWORD PTR [rax+rax*1+0x1100000],ecx
  ca:	00 00                	add    BYTE PTR [rax],al
  cc:	00 00                	add    BYTE PTR [rax],al
  ce:	38 09                	cmp    BYTE PTR [rcx],cl
  d0:	8c 00                	mov    WORD PTR [rax],es
  d2:	00 00                	add    BYTE PTR [rax],al
  d4:	18 01                	sbb    BYTE PTR [rcx],al
  d6:	00 00                	add    BYTE PTR [rax],al
  d8:	00 00                	add    BYTE PTR [rax],al
  da:	39 09                	cmp    DWORD PTR [rcx],ecx
  dc:	8c 00                	mov    WORD PTR [rax],es
  de:	00 00                	add    BYTE PTR [rax],al
  e0:	20 01                	and    BYTE PTR [rcx],al
  e2:	00 00                	add    BYTE PTR [rax],al
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	3a 09                	cmp    cl,BYTE PTR [rcx]
  e8:	8c 00                	mov    WORD PTR [rax],es
  ea:	00 00                	add    BYTE PTR [rax],al
  ec:	28 01                	sub    BYTE PTR [rcx],al
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	00 00                	add    BYTE PTR [rax],al
  f2:	3b 09                	cmp    ecx,DWORD PTR [rcx]
  f4:	8c 00                	mov    WORD PTR [rax],es
  f6:	00 00                	add    BYTE PTR [rax],al
  f8:	30 01                	xor    BYTE PTR [rcx],al
  fa:	00 00                	add    BYTE PTR [rax],al
  fc:	00 00                	add    BYTE PTR [rax],al
  fe:	3c 09                	cmp    al,0x9
 100:	8c 00                	mov    WORD PTR [rax],es
 102:	00 00                	add    BYTE PTR [rax],al
 104:	38 01                	cmp    BYTE PTR [rcx],al
 106:	00 00                	add    BYTE PTR [rax],al
 108:	00 00                	add    BYTE PTR [rax],al
 10a:	3d 09 8c 00 00       	cmp    eax,0x8c09
 10f:	00 40 01             	add    BYTE PTR [rax+0x1],al
 112:	00 00                	add    BYTE PTR [rax],al
 114:	00 00                	add    BYTE PTR [rax],al
 116:	40 09 8c 00 00 00 48 	rex or DWORD PTR [rax+rax*1+0x1480000],ecx
 11d:	01 
 11e:	00 00                	add    BYTE PTR [rax],al
 120:	00 00                	add    BYTE PTR [rax],al
 122:	41 09 8c 00 00 00 50 	or     DWORD PTR [r8+rax*1+0x1500000],ecx
 129:	01 
 12a:	00 00                	add    BYTE PTR [rax],al
 12c:	00 00                	add    BYTE PTR [rax],al
 12e:	42 09 8c 00 00 00 58 	or     DWORD PTR [rax+r8*1+0x1580000],ecx
 135:	01 
 136:	00 00                	add    BYTE PTR [rax],al
 138:	00 00                	add    BYTE PTR [rax],al
 13a:	44 16                	rex.R (bad)
 13c:	1b 02                	sbb    eax,DWORD PTR [rdx]
 13e:	00 00                	add    BYTE PTR [rax],al
 140:	60                   	(bad)
 141:	01 00                	add    DWORD PTR [rax],eax
 143:	00 00                	add    BYTE PTR [rax],al
 145:	00 46 14             	add    BYTE PTR [rsi+0x14],al
 148:	20 02                	and    BYTE PTR [rdx],al
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	68 01 00 00 00       	push   0x1
 151:	00 48 07             	add    BYTE PTR [rax+0x7],cl
 154:	66 00 00             	data16 add BYTE PTR [rax],al
 157:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 15a:	00 00                	add    BYTE PTR [rax],al
 15c:	00 00                	add    BYTE PTR [rax],al
 15e:	49 07                	rex.WB (bad)
 160:	66 00 00             	data16 add BYTE PTR [rax],al
 163:	00 74 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dh
 167:	00 00                	add    BYTE PTR [rax],al
 169:	00 4a 0b             	add    BYTE PTR [rdx+0xb],cl
 16c:	74 00                	je     16e <.debug_info+0x16e>
 16e:	00 00                	add    BYTE PTR [rax],al
 170:	78 01                	js     173 <.debug_info+0x173>
 172:	00 00                	add    BYTE PTR [rax],al
 174:	00 00                	add    BYTE PTR [rax],al
 176:	4d 12 51 00          	rex.WRB adc r10b,BYTE PTR [r9+0x0]
 17a:	00 00                	add    BYTE PTR [rax],al
 17c:	80 01 00             	add    BYTE PTR [rcx],0x0
 17f:	00 00                	add    BYTE PTR [rax],al
 181:	00 4e 0f             	add    BYTE PTR [rsi+0xf],cl
 184:	58                   	pop    rax
 185:	00 00                	add    BYTE PTR [rax],al
 187:	00 82 01 00 00 00    	add    BYTE PTR [rdx+0x1],al
 18d:	00 4f 08             	add    BYTE PTR [rdi+0x8],cl
 190:	25 02 00 00 83       	and    eax,0x83000002
 195:	01 00                	add    DWORD PTR [rax],eax
 197:	00 00                	add    BYTE PTR [rax],al
 199:	00 51 0f             	add    BYTE PTR [rcx+0xf],dl
 19c:	35 02 00 00 88       	xor    eax,0x88000002
 1a1:	01 00                	add    DWORD PTR [rax],eax
 1a3:	00 00                	add    BYTE PTR [rax],al
 1a5:	00 59 0d             	add    BYTE PTR [rcx+0xd],bl
 1a8:	80 00 00             	add    BYTE PTR [rax],0x0
 1ab:	00 90 01 00 00 00    	add    BYTE PTR [rax+0x1],dl
 1b1:	00 5b 17             	add    BYTE PTR [rbx+0x17],bl
 1b4:	3f                   	(bad)
 1b5:	02 00                	add    al,BYTE PTR [rax]
 1b7:	00 98 01 00 00 00    	add    BYTE PTR [rax+0x1],bl
 1bd:	00 5c 19 49          	add    BYTE PTR [rcx+rbx*1+0x49],bl
 1c1:	02 00                	add    al,BYTE PTR [rax]
 1c3:	00 a0 01 00 00 00    	add    BYTE PTR [rax+0x1],ah
 1c9:	00 5d 14             	add    BYTE PTR [rbp+0x14],bl
 1cc:	20 02                	and    BYTE PTR [rdx],al
 1ce:	00 00                	add    BYTE PTR [rax],al
 1d0:	a8 01                	test   al,0x1
 1d2:	00 00                	add    BYTE PTR [rax],al
 1d4:	00 00                	add    BYTE PTR [rax],al
 1d6:	5e                   	pop    rsi
 1d7:	09 48 00             	or     DWORD PTR [rax+0x0],ecx
 1da:	00 00                	add    BYTE PTR [rax],al
 1dc:	b0 01                	mov    al,0x1
 1de:	00 00                	add    BYTE PTR [rax],al
 1e0:	00 00                	add    BYTE PTR [rax],al
 1e2:	5f                   	pop    rdi
 1e3:	0a 2e                	or     ch,BYTE PTR [rsi]
 1e5:	00 00                	add    BYTE PTR [rax],al
 1e7:	00 b8 01 00 00 00    	add    BYTE PTR [rax+0x1],bh
 1ed:	00 60 07             	add    BYTE PTR [rax+0x7],ah
 1f0:	66 00 00             	data16 add BYTE PTR [rax],al
 1f3:	00 c0                	add    al,al
 1f5:	01 00                	add    DWORD PTR [rax],eax
 1f7:	00 00                	add    BYTE PTR [rax],al
 1f9:	00 62 08             	add    BYTE PTR [rdx+0x8],ah
 1fc:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
 1ff:	00 c4                	add    ah,al
 201:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 207 <.debug_info+0x207>
 207:	05 07 19 98 00       	add    eax,0x981907
 20c:	00 00                	add    BYTE PTR [rax],al
 20e:	0e                   	(bad)
 20f:	00 00                	add    BYTE PTR [rax],al
 211:	00 00                	add    BYTE PTR [rax],al
 213:	04 2b                	add    al,0x2b
 215:	0e                   	(bad)
 216:	06                   	(bad)
 217:	00 00                	add    BYTE PTR [rax],al
 219:	00 00                	add    BYTE PTR [rax],al
 21b:	03 16                	add    edx,DWORD PTR [rsi]
 21d:	02 00                	add    al,BYTE PTR [rax]
 21f:	00 03                	add    BYTE PTR [rbx],al
 221:	98                   	cwde
 222:	00 00                	add    BYTE PTR [rax],al
 224:	00 07                	add    BYTE PTR [rdi],al
 226:	91                   	xchg   ecx,eax
 227:	00 00                	add    BYTE PTR [rax],al
 229:	00 35 02 00 00 08    	add    BYTE PTR [rip+0x8000002],dh        # 8000231 <main+0x8000231>
 22f:	3a 00                	cmp    al,BYTE PTR [rax]
 231:	00 00                	add    BYTE PTR [rax],al
 233:	00 00                	add    BYTE PTR [rax],al
 235:	03 0e                	add    ecx,DWORD PTR [rsi]
 237:	02 00                	add    al,BYTE PTR [rax]
 239:	00 06                	add    BYTE PTR [rsi],al
 23b:	00 00                	add    BYTE PTR [rax],al
 23d:	00 00                	add    BYTE PTR [rax],al
 23f:	03 3a                	add    edi,DWORD PTR [rdx]
 241:	02 00                	add    al,BYTE PTR [rax]
 243:	00 06                	add    BYTE PTR [rsi],al
 245:	00 00                	add    BYTE PTR [rax],al
 247:	00 00                	add    BYTE PTR [rax],al
 249:	03 44 02 00          	add    eax,DWORD PTR [rdx+rax*1+0x0]
 24d:	00 07                	add    BYTE PTR [rdi],al
 24f:	91                   	xchg   ecx,eax
 250:	00 00                	add    BYTE PTR [rax],al
 252:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
 255:	00 00                	add    BYTE PTR [rax],al
 257:	08 3a                	or     BYTE PTR [rdx],bh
 259:	00 00                	add    BYTE PTR [rax],al
 25b:	00 13                	add    BYTE PTR [rbx],dl
 25d:	00 03                	add    BYTE PTR [rbx],al
 25f:	02 02                	add    al,BYTE PTR [rdx]
 261:	00 00                	add    BYTE PTR [rax],al
 263:	0f 00 00             	sldt   WORD PTR [rax]
 266:	00 00                	add    BYTE PTR [rax],al
 268:	0a 97 0e 5e 02 00    	or     dl,BYTE PTR [rdi+0x25e0e]
 26e:	00 02                	add    BYTE PTR [rdx],al
 270:	08 05 00 00 00 00    	or     BYTE PTR [rip+0x0],al        # 276 <.debug_info+0x276>
 276:	02 08                	add    cl,BYTE PTR [rax]
 278:	07                   	(bad)
 279:	00 00                	add    BYTE PTR [rax],al
 27b:	00 00                	add    BYTE PTR [rax],al
 27d:	10 00                	adc    BYTE PTR [rax],al
 27f:	00 00                	add    BYTE PTR [rax],al
 281:	00 06                	add    BYTE PTR [rsi],al
 283:	af                   	scas   eax,DWORD PTR es:[rdi]
 284:	02 0d 90 02 00 00    	add    cl,BYTE PTR [rip+0x290]        # 51a <main+0x51a>
 28a:	04 48                	add    al,0x48
 28c:	00 00                	add    BYTE PTR [rax],al
 28e:	00 00                	add    BYTE PTR [rax],al
 290:	09 00                	or     DWORD PTR [rax],eax
 292:	00 00                	add    BYTE PTR [rax],al
 294:	00 07                	add    BYTE PTR [rdi],al
 296:	a0 02 00 00 04 8c 00 	movabs al,ds:0x8c04000002
 29d:	00 00 
 29f:	00 09                	add    BYTE PTR [rcx],cl
 2a1:	00 00                	add    BYTE PTR [rax],al
 2a3:	00 00                	add    BYTE PTR [rax],al
 2a5:	08 b0 02 00 00 04    	or     BYTE PTR [rax+0x4000002],dh
 2ab:	8c 00                	mov    WORD PTR [rax],es
 2ad:	00 00                	add    BYTE PTR [rax],al
 2af:	00 11                	add    BYTE PTR [rcx],dl
 2b1:	00 00                	add    BYTE PTR [rax],al
 2b3:	00 00                	add    BYTE PTR [rax],al
 2b5:	09 06                	or     DWORD PTR [rsi],eax
 2b7:	05 66 00 00 00       	add    eax,0x66
 2bc:	c6 02 00             	mov    BYTE PTR [rdx],0x0
 2bf:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
 2c2:	00 00                	add    BYTE PTR [rax],al
 2c4:	00 00                	add    BYTE PTR [rax],al
 2c6:	12 00                	adc    al,BYTE PTR [rax]
 2c8:	00 00                	add    BYTE PTR [rax],al
 2ca:	00 06                	add    BYTE PTR [rsi],al
 2cc:	a0 02 0e 48 00 00 00 	movabs al,ds:0x2dd000000480e02
 2d3:	dd 02 
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	04 2e                	add    al,0x2e
 2d9:	00 00                	add    BYTE PTR [rax],al
 2db:	00 00                	add    BYTE PTR [rax],al
 2dd:	13 00                	adc    eax,DWORD PTR [rax]
 2df:	00 00                	add    BYTE PTR [rax],al
 2e1:	00 01                	add    BYTE PTR [rcx],al
 2e3:	06                   	(bad)
 2e4:	05 66 00 00 00       	add    eax,0x66
	...
 2f1:	ce                   	(bad)
 2f2:	00 00                	add    BYTE PTR [rax],al
 2f4:	00 00                	add    BYTE PTR [rax],al
 2f6:	00 00                	add    BYTE PTR [rax],al
 2f8:	00 01                	add    BYTE PTR [rcx],al
 2fa:	9c                   	pushf
 2fb:	14 73                	adc    al,0x73
 2fd:	74 72                	je     371 <main+0x371>
 2ff:	00 01                	add    BYTE PTR [rcx],al
 301:	07                   	(bad)
 302:	0b 8c 00 00 00 02 91 	or     ecx,DWORD PTR [rax+rax*1-0x6efe0000]
 309:	68                   	.byte 0x68
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 0d 00 03 0e 3a    	add    DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0306 <main+0x3a0e0306>
   6:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
   9:	0b 39                	or     edi,DWORD PTR [rcx]
   b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   e:	38 0b                	cmp    BYTE PTR [rbx],cl
  10:	00 00                	add    BYTE PTR [rax],al
  12:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  15:	0b 0b                	or     ecx,DWORD PTR [rbx]
  17:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
  1a:	0e                   	(bad)
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	03 0f                	add    ecx,DWORD PTR [rdi]
  1f:	00 0b                	add    BYTE PTR [rbx],cl
  21:	21 08                	and    DWORD PTR [rax],ecx
  23:	49 13 00             	adc    rax,QWORD PTR [r8]
  26:	00 04 05 00 49 13 00 	add    BYTE PTR [rax*1+0x134900],al
  2d:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e030049 <main+0xe030049>
  33:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  35:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  37:	39 0b                	cmp    DWORD PTR [rbx],ecx
  39:	49 13 00             	adc    rax,QWORD PTR [r8]
  3c:	00 06                	add    BYTE PTR [rsi],al
  3e:	13 00                	adc    eax,DWORD PTR [rax]
  40:	03 0e                	add    ecx,DWORD PTR [rsi]
  42:	3c 19                	cmp    al,0x19
  44:	00 00                	add    BYTE PTR [rax],al
  46:	07                   	(bad)
  47:	01 01                	add    DWORD PTR [rcx],eax
  49:	49 13 01             	adc    rax,QWORD PTR [r9]
  4c:	13 00                	adc    eax,DWORD PTR [rax]
  4e:	00 08                	add    BYTE PTR [rax],cl
  50:	21 00                	and    DWORD PTR [rax],eax
  52:	49 13 2f             	adc    rbp,QWORD PTR [r15]
  55:	0b 00                	or     eax,DWORD PTR [rax]
  57:	00 09                	add    BYTE PTR [rcx],cl
  59:	2e 01 3f             	cs add DWORD PTR [rdi],edi
  5c:	19 03                	sbb    DWORD PTR [rbx],eax
  5e:	0e                   	(bad)
  5f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  61:	3b 21                	cmp    esp,DWORD PTR [rcx]
  63:	04 39                	add    al,0x39
  65:	21 06                	and    DWORD PTR [rsi],eax
  67:	27                   	(bad)
  68:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  6b:	01 13                	add    DWORD PTR [rbx],edx
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	0a 11                	or     dl,BYTE PTR [rcx]
  71:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1385 <main+0x30b1385>
  77:	1f                   	(bad)
  78:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
  7a:	11 01                	adc    DWORD PTR [rcx],eax
  7c:	12 07                	adc    al,BYTE PTR [rdi]
  7e:	10 17                	adc    BYTE PTR [rdi],dl
  80:	00 00                	add    BYTE PTR [rax],al
  82:	0b 0f                	or     ecx,DWORD PTR [rdi]
  84:	00 0b                	add    BYTE PTR [rbx],cl
  86:	0b 00                	or     eax,DWORD PTR [rax]
  88:	00 0c 24             	add    BYTE PTR [rsp],cl
  8b:	00 0b                	add    BYTE PTR [rbx],cl
  8d:	0b 3e                	or     edi,DWORD PTR [rsi]
  8f:	0b 03                	or     eax,DWORD PTR [rbx]
  91:	08 00                	or     BYTE PTR [rax],al
  93:	00 0d 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],cl        # e0301ac <main+0xe0301ac>
  99:	0b 0b                	or     ecx,DWORD PTR [rbx]
  9b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  9d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  9f:	39 0b                	cmp    DWORD PTR [rbx],ecx
  a1:	01 13                	add    DWORD PTR [rbx],edx
  a3:	00 00                	add    BYTE PTR [rax],al
  a5:	0e                   	(bad)
  a6:	16                   	(bad)
  a7:	00 03                	add    BYTE PTR [rbx],al
  a9:	0e                   	(bad)
  aa:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  ae:	39 0b                	cmp    DWORD PTR [rbx],ecx
  b0:	00 00                	add    BYTE PTR [rax],al
  b2:	0f 34                	sysenter
  b4:	00 03                	add    BYTE PTR [rbx],al
  b6:	0e                   	(bad)
  b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  b9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  bb:	39 0b                	cmp    DWORD PTR [rbx],ecx
  bd:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  c0:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	10 2e                	adc    BYTE PTR [rsi],ch
  c7:	01 3f                	add    DWORD PTR [rdi],edi
  c9:	19 03                	sbb    DWORD PTR [rbx],eax
  cb:	0e                   	(bad)
  cc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  ce:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270c0d <main+0x19270c0d>
  d4:	3c 19                	cmp    al,0x19
  d6:	01 13                	add    DWORD PTR [rbx],edx
  d8:	00 00                	add    BYTE PTR [rax],al
  da:	11 2e                	adc    DWORD PTR [rsi],ebp
  dc:	01 3f                	add    DWORD PTR [rdi],edi
  de:	19 03                	sbb    DWORD PTR [rbx],eax
  e0:	0e                   	(bad)
  e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  e3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  e5:	39 0b                	cmp    DWORD PTR [rbx],ecx
  e7:	27                   	(bad)
  e8:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  eb:	3c 19                	cmp    al,0x19
  ed:	01 13                	add    DWORD PTR [rbx],edx
  ef:	00 00                	add    BYTE PTR [rax],al
  f1:	12 2e                	adc    ch,BYTE PTR [rsi]
  f3:	01 3f                	add    DWORD PTR [rdi],edi
  f5:	19 03                	sbb    DWORD PTR [rbx],eax
  f7:	0e                   	(bad)
  f8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  fa:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270c39 <main+0x19270c39>
 100:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 104:	01 13                	add    DWORD PTR [rbx],edx
 106:	00 00                	add    BYTE PTR [rax],al
 108:	13 2e                	adc    ebp,DWORD PTR [rsi]
 10a:	01 3f                	add    DWORD PTR [rdi],edi
 10c:	19 03                	sbb    DWORD PTR [rbx],eax
 10e:	0e                   	(bad)
 10f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 111:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 113:	39 0b                	cmp    DWORD PTR [rbx],ecx
 115:	27                   	(bad)
 116:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 119:	11 01                	adc    DWORD PTR [rcx],eax
 11b:	12 07                	adc    al,BYTE PTR [rdi]
 11d:	40 18 7c 19 00       	sbb    BYTE PTR [rcx+rbx*1+0x0],dil
 122:	00 14 34             	add    BYTE PTR [rsp+rsi*1],dl
 125:	00 03                	add    BYTE PTR [rbx],al
 127:	08 3a                	or     BYTE PTR [rdx],bh
 129:	0b 3b                	or     edi,DWORD PTR [rbx]
 12b:	0b 39                	or     edi,DWORD PTR [rcx]
 12d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 130:	02 18                	add    bl,BYTE PTR [rax]
 132:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
  18:	ce                   	(bad)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	bf 00 00 00 05       	mov    edi,0x5000000
   5:	00 08                	add    BYTE PTR [rax],cl
   7:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
   a:	00 00                	add    BYTE PTR [rax],al
   c:	01 01                	add    DWORD PTR [rcx],eax
   e:	01 fb                	add    ebx,edi
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     eax,0x1010100
  16:	01 00                	add    DWORD PTR [rax],eax
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	01 00                	add    DWORD PTR [rax],eax
  1c:	00 01                	add    BYTE PTR [rcx],al
  1e:	01 01                	add    DWORD PTR [rcx],eax
  20:	1f                   	(bad)
  21:	09 00                	or     DWORD PTR [rax],eax
	...
  43:	00 00                	add    BYTE PTR [rax],al
  45:	00 02                	add    BYTE PTR [rdx],al
  47:	01 1f                	add    DWORD PTR [rdi],ebx
  49:	02 0f                	add    cl,BYTE PTR [rdi]
  4b:	0b 00                	or     eax,DWORD PTR [rax]
  4d:	00 00                	add    BYTE PTR [rax],al
  4f:	00 01                	add    BYTE PTR [rcx],al
  51:	00 00                	add    BYTE PTR [rax],al
  53:	00 00                	add    BYTE PTR [rax],al
  55:	01 00                	add    DWORD PTR [rax],eax
  57:	00 00                	add    BYTE PTR [rax],al
  59:	00 02                	add    BYTE PTR [rdx],al
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	03 00                	add    eax,DWORD PTR [rax]
  61:	00 00                	add    BYTE PTR [rax],al
  63:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  66:	00 00                	add    BYTE PTR [rax],al
  68:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 73 <.debug_line+0x73>
  73:	06                   	(bad)
  74:	00 00                	add    BYTE PTR [rax],al
  76:	00 00                	add    BYTE PTR [rax],al
  78:	07                   	(bad)
  79:	00 00                	add    BYTE PTR [rax],al
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	08 00                	or     BYTE PTR [rax],al
  7f:	00 00                	add    BYTE PTR [rax],al
  81:	00 05 05 10 00 09    	add    BYTE PTR [rip+0x9001005],al        # 900108c <main+0x900108c>
  87:	02 00                	add    al,BYTE PTR [rax]
  89:	00 00                	add    BYTE PTR [rax],al
  8b:	00 00                	add    BYTE PTR [rax],al
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 17                	add    BYTE PTR [rdi],dl
  91:	05 18 bb 05 08       	add    eax,0x805bb18
  96:	d7                   	xlat   BYTE PTR ds:[rbx]
  97:	05 09 75 05 10       	add    eax,0x10057509
  9c:	02 26                	add    ah,BYTE PTR [rsi]
  9e:	13 05 09 76 05 08    	adc    eax,DWORD PTR [rip+0x8057609]        # 80576ad <main+0x80576ad>
  a4:	00 02                	add    BYTE PTR [rdx],al
  a6:	04 01                	add    al,0x1
  a8:	ba 05 09 4b 05       	mov    edx,0x54b0905
  ad:	10 02                	adc    BYTE PTR [rdx],al
  af:	26 13 05 05 76 bb bb 	es adc eax,DWORD PTR [rip+0xffffffffbbbb7605]        # ffffffffbbbb76bb <main+0xffffffffbbbb76bb>
  b6:	bb bb 05 0c bc       	mov    ebx,0xbc0c05bb
  bb:	05 01 59 02 02       	add    eax,0x2025901
  c0:	00 01                	add    BYTE PTR [rcx],al
  c2:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	5f                   	pop    rdi
   1:	5f                   	pop    rdi
   2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   3:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
   8:	74 00                	je     a <.debug_str+0xa>
   a:	5f                   	pop    rdi
   b:	49                   	rex.WB
   c:	4f 5f                	rex.WRXB pop r15
   e:	72 65                	jb     75 <.debug_str+0x75>
  10:	61                   	(bad)
  11:	64 5f                	fs pop rdi
  13:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  15:	64 00 73 69          	add    BYTE PTR fs:[rbx+0x69],dh
  19:	7a 65                	jp     80 <.debug_str+0x80>
  1b:	5f                   	pop    rdi
  1c:	74 00                	je     1e <.debug_str+0x1e>
  1e:	74 6f                	je     8f <.debug_str+0x8f>
  20:	75 70                	jne    92 <.debug_str+0x92>
  22:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  25:	64 65 72 72          	fs gs jb 9b <.debug_str+0x9b>
  29:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
  2c:	4f 5f                	rex.WRXB pop r15
  2e:	77 72                	ja     a2 <.debug_str+0xa2>
  30:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
  37:	65 
  38:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
  3b:	4f 5f                	rex.WRXB pop r15
  3d:	62 75 66 5f 65       	(bad)
  42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  43:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
  47:	61                   	(bad)
  48:	64 76 65             	fs jbe b0 <.debug_str+0xb0>
  4b:	72 00                	jb     4d <.debug_str+0x4d>
  4d:	5f                   	pop    rdi
  4e:	49                   	rex.WB
  4f:	4f 5f                	rex.WRXB pop r15
  51:	72 65                	jb     b8 <.debug_str+0xb8>
  53:	61                   	(bad)
  54:	64 5f                	fs pop rdi
  56:	70 74                	jo     cc <.debug_str+0xcc>
  58:	72 00                	jb     5a <.debug_str+0x5a>
  5a:	5f                   	pop    rdi
  5b:	5f                   	pop    rdi
  5c:	70 61                	jo     bf <.debug_str+0xbf>
  5e:	64 35 00 75 6e 73    	fs xor eax,0x736e7500
  64:	69 67 6e 65 64 20 69 	imul   esp,DWORD PTR [rdi+0x6e],0x69206465
  6b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  6c:	74 00                	je     6e <.debug_str+0x6e>
  6e:	5f                   	pop    rdi
  6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  70:	66 66 73 65          	data16 data16 jae d9 <.debug_str+0xd9>
  74:	74 00                	je     76 <.debug_str+0x76>
  76:	5f                   	pop    rdi
  77:	6d                   	ins    DWORD PTR es:[rdi],dx
  78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  79:	64 65 00 5f 63       	fs add BYTE PTR gs:[rdi+0x63],bl
  7e:	68 61 69 6e 00       	push   0x6e6961
  83:	5f                   	pop    rdi
  84:	49                   	rex.WB
  85:	4f 5f                	rex.WRXB pop r15
  87:	46                   	rex.RX
  88:	49                   	rex.WB
  89:	4c                   	rex.WR
  8a:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
  8e:	4f 5f                	rex.WRXB pop r15
  90:	73 61                	jae    f3 <.debug_str+0xf3>
  92:	76 65                	jbe    f9 <.debug_str+0xf9>
  94:	5f                   	pop    rdi
  95:	62 61 73 65 00       	(bad)
  9a:	75 6e                	jne    10a <.debug_str+0x10a>
  9c:	73 69                	jae    107 <.debug_str+0x107>
  9e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  a0:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  a5:	61                   	(bad)
  a6:	72 00                	jb     a8 <.debug_str+0xa8>
  a8:	5f                   	pop    rdi
  a9:	66 72 65             	data16 jb 111 <.debug_str+0x111>
  ac:	65 72 65             	gs jb  114 <.debug_str+0x114>
  af:	73 5f                	jae    110 <.debug_str+0x110>
  b1:	62 75 66 00 6c       	(bad)
  b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  b8:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  bc:	73 69                	jae    127 <.debug_str+0x127>
  be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  c0:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  c5:	74 00                	je     c7 <.debug_str+0xc7>
  c7:	73 68                	jae    131 <.debug_str+0x131>
  c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  ca:	72 74                	jb     140 <.debug_str+0x140>
  cc:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  cf:	73 69                	jae    13a <.debug_str+0x13a>
  d1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  d3:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  d8:	74 00                	je     da <.debug_str+0xda>
  da:	5f                   	pop    rdi
  db:	49                   	rex.WB
  dc:	4f 5f                	rex.WRXB pop r15
  de:	73 61                	jae    141 <.debug_str+0x141>
  e0:	76 65                	jbe    147 <.debug_str+0x147>
  e2:	5f                   	pop    rdi
  e3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  e5:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
  e9:	4f 5f                	rex.WRXB pop r15
  eb:	6c                   	ins    BYTE PTR es:[rdi],dx
  ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  ed:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  f0:	74 00                	je     f2 <.debug_str+0xf2>
  f2:	5f                   	pop    rdi
  f3:	6d                   	ins    DWORD PTR es:[rdi],dx
  f4:	61                   	(bad)
  f5:	72 6b                	jb     162 <.debug_str+0x162>
  f7:	65 72 73             	gs jb  16d <.debug_str+0x16d>
  fa:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
  fd:	69 6e 00 46 49 4c 45 	imul   ebp,DWORD PTR [rsi+0x0],0x454c4946
 104:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
 107:	6c                   	ins    BYTE PTR es:[rdi],dx
 108:	61                   	(bad)
 109:	67 73 32             	addr32 jae 13e <.debug_str+0x13e>
 10c:	00 5f 6f             	add    BYTE PTR [rdi+0x6f],bl
 10f:	6c                   	ins    BYTE PTR es:[rdi],dx
 110:	64 5f                	fs pop rdi
 112:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 113:	66 66 73 65          	data16 data16 jae 17c <.debug_str+0x17c>
 117:	74 00                	je     119 <.debug_str+0x119>
 119:	5f                   	pop    rdi
 11a:	6c                   	ins    BYTE PTR es:[rdi],dx
 11b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 11c:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
 11f:	5f                   	pop    rdi
 120:	49                   	rex.WB
 121:	4f 5f                	rex.WRXB pop r15
 123:	6d                   	ins    DWORD PTR es:[rdi],dx
 124:	61                   	(bad)
 125:	72 6b                	jb     192 <.debug_str+0x192>
 127:	65 72 00             	gs jb  12a <.debug_str+0x12a>
 12a:	5f                   	pop    rdi
 12b:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
 12e:	5f                   	pop    rdi
 12f:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
 132:	75 6d                	jne    1a1 <.debug_str+0x1a1>
 134:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 135:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
 139:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
 13e:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
 142:	73 69                	jae    1ad <.debug_str+0x1ad>
 144:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 146:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 14b:	74 00                	je     14d <.debug_str+0x14d>
 14d:	5f                   	pop    rdi
 14e:	49                   	rex.WB
 14f:	4f 5f                	rex.WRXB pop r15
 151:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 154:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
 158:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
 15b:	69 6c 65 6e 6f 00 5f 	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x495f006f
 162:	49 
 163:	4f 5f                	rex.WRXB pop r15
 165:	62 75 66 5f 62       	(bad)
 16a:	61                   	(bad)
 16b:	73 65                	jae    1d2 <.debug_str+0x1d2>
 16d:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
 170:	74 61                	je     1d3 <.debug_str+0x1d3>
 172:	62                   	(bad)
 173:	6c                   	ins    BYTE PTR es:[rdi],dx
 174:	65 5f                	gs pop rdi
 176:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 177:	66 66 73 65          	data16 data16 jae 1e0 <.debug_str+0x1e0>
 17b:	74 00                	je     17d <.debug_str+0x17d>
 17d:	5f                   	pop    rdi
 17e:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 181:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
 185:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
 188:	72 65                	jb     1ef <.debug_str+0x1ef>
 18a:	65 72 65             	gs jb  1f2 <.debug_str+0x1f2>
 18d:	73 5f                	jae    1ee <.debug_str+0x1ee>
 18f:	6c                   	ins    BYTE PTR es:[rdi],dx
 190:	69 73 74 00 5f 5f 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f5f5f00
 197:	66 66 5f             	data16 pop di
 19a:	74 00                	je     19c <.debug_str+0x19c>
 19c:	5f                   	pop    rdi
 19d:	75 6e                	jne    20d <.debug_str+0x20d>
 19f:	75 73                	jne    214 <.debug_str+0x214>
 1a1:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
 1a5:	66 72 65             	data16 jb 20d <.debug_str+0x20d>
 1a8:	65 00 6c 6f 6e       	add    BYTE PTR gs:[rdi+rbp*2+0x6e],ch
 1ad:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
 1b2:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
 1b6:	74 00                	je     1b8 <.debug_str+0x1b8>
 1b8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
 1bb:	72 00                	jb     1bd <.debug_str+0x1bd>
 1bd:	70 72                	jo     231 <.debug_str+0x231>
 1bf:	69 6e 74 00 5f 49 4f 	imul   ebp,DWORD PTR [rsi+0x74],0x4f495f00
 1c6:	5f                   	pop    rdi
 1c7:	77 72                	ja     23b <.debug_str+0x23b>
 1c9:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
 1d0:	00 
 1d1:	73 68                	jae    23b <.debug_str+0x23b>
 1d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1d4:	72 74                	jb     24a <.debug_str+0x24a>
 1d6:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
 1d9:	74 00                	je     1db <.debug_str+0x1db>
 1db:	5f                   	pop    rdi
 1dc:	49                   	rex.WB
 1dd:	4f 5f                	rex.WRXB pop r15
 1df:	62 61 63 6b 75       	(bad)
 1e4:	70 5f                	jo     245 <.debug_str+0x245>
 1e6:	62 61 73 65 00       	(bad)
 1eb:	5f                   	pop    rdi
 1ec:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
 1ee:	61                   	(bad)
 1ef:	67 73 00             	addr32 jae 1f2 <.debug_str+0x1f2>
 1f2:	47                   	rex.RXB
 1f3:	4e 55                	rex.WRX push rbp
 1f5:	20 43 31             	and    BYTE PTR [rbx+0x31],al
 1f8:	37                   	(bad)
 1f9:	20 31                	and    BYTE PTR [rcx],dh
 1fb:	33 2e                	xor    ebp,DWORD PTR [rsi]
 1fd:	32 2e                	xor    ch,BYTE PTR [rsi]
 1ff:	30 20                	xor    BYTE PTR [rax],ah
 201:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
 206:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
 20c:	72 69                	jb     277 <.debug_str+0x277>
 20e:	63 20                	movsxd esp,DWORD PTR [rax]
 210:	2d 6d 61 72 63       	sub    eax,0x6372616d
 215:	68 3d 78 38 36       	push   0x3638783d
 21a:	2d 36 34 20 2d       	sub    eax,0x2d203436
 21f:	67 20 2d 4f 30 20 2d 	and    BYTE PTR [eip+0x2d20304f],ch        # 2d203275 <main+0x2d203275>
 226:	66 50                	push   ax
 228:	49                   	rex.WB
 229:	43 20 2d 66 61 73 79 	rex.XB and BYTE PTR [rip+0x79736166],bpl        # 79736396 <main+0x79736396>
 230:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 231:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 234:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 235:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 236:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 237:	75 73                	jne    2ac <.debug_str+0x2ac>
 239:	2d 75 6e 77 69       	sub    eax,0x69776e75
 23e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 23f:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
 245:	65 73 20             	gs jae 268 <.debug_str+0x268>
 248:	2d 66 73 74 61       	sub    eax,0x61747366
 24d:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
 250:	70 72                	jo     2c4 <.debug_str+0x2c4>
 252:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 253:	74 65                	je     2ba <.debug_str+0x2ba>
 255:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
 259:	2d 73 74 72 6f       	sub    eax,0x6f727473
 25e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 25f:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617475cc <main+0x617475cc>
 266:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
 269:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
 26d:	68 2d 70 72 6f       	push   0x6f72702d
 272:	74 65                	je     2d9 <.debug_str+0x2d9>
 274:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 278:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 279:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d6665e5 <main+0x2d6665e5>
 27f:	70 72                	jo     2f3 <main+0x2f3>
 281:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 282:	74 65                	je     2e9 <main+0x2e9>
 284:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 288:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 289:	00 5f 77             	add    BYTE PTR [rdi+0x77],bl
 28c:	69 64 65 5f 64 61 74 	imul   esp,DWORD PTR [rbp+riz*2+0x5f],0x61746164
 293:	61 
 294:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
 298:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
 29c:	74 00                	je     29e <.debug_str+0x29e>
 29e:	5f                   	pop    rdi
 29f:	49                   	rex.WB
 2a0:	4f 5f                	rex.WRXB pop r15
 2a2:	77 72                	ja     316 <main+0x316>
 2a4:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
 2ab:	00 
 2ac:	5f                   	pop    rdi
 2ad:	49                   	rex.WB
 2ae:	4f 5f                	rex.WRXB pop r15
 2b0:	77 69                	ja     31b <main+0x31b>
 2b2:	64 65 5f             	fs gs pop rdi
 2b5:	64 61                	fs (bad)
 2b7:	74 61                	je     31a <main+0x31a>
 2b9:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
 2bc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 2be:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
 2c3:	61                   	(bad)
 2c4:	72 00                	jb     2c6 <.debug_str+0x2c6>
 2c6:	5f                   	pop    rdi
 2c7:	49                   	rex.WB
 2c8:	4f 5f                	rex.WRXB pop r15
 2ca:	72 65                	jb     331 <main+0x331>
 2cc:	61                   	(bad)
 2cd:	64 5f                	fs pop rdi
 2cf:	62 61 73 65 00       	(bad)
 2d4:	6d                   	ins    DWORD PTR es:[rdi],dx
 2d5:	61                   	(bad)
 2d6:	6c                   	ins    BYTE PTR es:[rdi],dx
 2d7:	6c                   	ins    BYTE PTR es:[rdi],dx
 2d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2d9:	63 00                	movsxd eax,DWORD PTR [rax]
 2db:	5f                   	pop    rdi
 2dc:	73 68                	jae    346 <main+0x346>
 2de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2df:	72 74                	jb     355 <main+0x355>
 2e1:	62                   	.byte 0x62
 2e2:	75 66                	jne    34a <main+0x34a>
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	68 6f 6d 65 2f       	push   0x2f656d6f
   6:	6d                   	ins    DWORD PTR es:[rdi],dx
   7:	72 74                	jb     7d <.debug_line_str+0x7d>
   9:	2f                   	(bad)
   a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
   c:	62 65 64 64 65       	(bad)
  11:	64 2f                	fs (bad)
  13:	64 65 73 6b          	fs gs jae 82 <.debug_line_str+0x82>
  17:	74 6f                	je     88 <.debug_line_str+0x88>
  19:	70 2f                	jo     4a <.debug_line_str+0x4a>
  1b:	6c                   	ins    BYTE PTR es:[rdi],dx
  1c:	69 6e 75 78 2f 74 75 	imul   ebp,DWORD PTR [rsi+0x75],0x75742f78
  23:	74 2f                	je     54 <.debug_line_str+0x54>
  25:	6c                   	ins    BYTE PTR es:[rdi],dx
  26:	69 6e 75 78 2f 6c 69 	imul   ebp,DWORD PTR [rsi+0x75],0x696c2f78
  2d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  2e:	75 78                	jne    a8 <.debug_line_str+0xa8>
  30:	5f                   	pop    rdi
  31:	74 75                	je     a8 <.debug_line_str+0xa8>
  33:	74 2f                	je     64 <.debug_line_str+0x64>
  35:	74 75                	je     ac <.debug_line_str+0xac>
  37:	74 5f                	je     98 <.debug_line_str+0x98>
  39:	6c                   	ins    BYTE PTR es:[rdi],dx
  3a:	69 6e 2f 72 65 63 75 	imul   ebp,DWORD PTR [rsi+0x2f],0x75636572
  41:	72 73                	jb     b6 <.debug_line_str+0xb6>
  43:	69 76 65 5f 6d 61 6b 	imul   esi,DWORD PTR [rsi+0x65],0x6b616d5f
  4a:	65 00 73 72          	add    BYTE PTR gs:[rbx+0x72],dh
  4e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  50:	75 70                	jne    c2 <.debug_line_str+0xc2>
  52:	76 65                	jbe    b9 <.debug_line_str+0xb9>
  54:	72 2e                	jb     84 <.debug_line_str+0x84>
  56:	63 00                	movsxd eax,DWORD PTR [rax]
  58:	2f                   	(bad)
  59:	68 6f 6d 65 2f       	push   0x2f656d6f
  5e:	6d                   	ins    DWORD PTR es:[rdi],dx
  5f:	72 74                	jb     d5 <.debug_line_str+0xd5>
  61:	2f                   	(bad)
  62:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  64:	62 65 64 64 65       	(bad)
  69:	64 2f                	fs (bad)
  6b:	64 65 73 6b          	fs gs jae da <.debug_line_str+0xda>
  6f:	74 6f                	je     e0 <.debug_line_str+0xe0>
  71:	70 2f                	jo     a2 <.debug_line_str+0xa2>
  73:	6c                   	ins    BYTE PTR es:[rdi],dx
  74:	69 6e 75 78 2f 74 75 	imul   ebp,DWORD PTR [rsi+0x75],0x75742f78
  7b:	74 2f                	je     ac <.debug_line_str+0xac>
  7d:	6c                   	ins    BYTE PTR es:[rdi],dx
  7e:	69 6e 75 78 2f 6c 69 	imul   ebp,DWORD PTR [rsi+0x75],0x696c2f78
  85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  86:	75 78                	jne    100 <.debug_line_str+0x100>
  88:	5f                   	pop    rdi
  89:	74 75                	je     100 <.debug_line_str+0x100>
  8b:	74 2f                	je     bc <.debug_line_str+0xbc>
  8d:	74 75                	je     104 <.debug_line_str+0x104>
  8f:	74 5f                	je     f0 <.debug_line_str+0xf0>
  91:	6c                   	ins    BYTE PTR es:[rdi],dx
  92:	69 6e 2f 72 65 63 75 	imul   ebp,DWORD PTR [rsi+0x2f],0x75636572
  99:	72 73                	jb     10e <.debug_line_str+0x10e>
  9b:	69 76 65 5f 6d 61 6b 	imul   esi,DWORD PTR [rsi+0x65],0x6b616d5f
  a2:	65 00 73 72          	add    BYTE PTR gs:[rbx+0x72],dh
  a6:	63 00                	movsxd eax,DWORD PTR [rax]
  a8:	2f                   	(bad)
  a9:	75 73                	jne    11e <.debug_line_str+0x11e>
  ab:	72 2f                	jb     dc <.debug_line_str+0xdc>
  ad:	6c                   	ins    BYTE PTR es:[rdi],dx
  ae:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  b5:	78 38                	js     ef <.debug_line_str+0xef>
  b7:	36 5f                	ss pop rdi
  b9:	36 34 2d             	ss xor al,0x2d
  bc:	6c                   	ins    BYTE PTR es:[rdi],dx
  bd:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  c4:	75 2f                	jne    f5 <.debug_line_str+0xf5>
  c6:	31 33                	xor    DWORD PTR [rbx],esi
  c8:	2f                   	(bad)
  c9:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  d0:	00 2f                	add    BYTE PTR [rdi],ch
  d2:	75 73                	jne    147 <.debug_line_str+0x147>
  d4:	72 2f                	jb     105 <.debug_line_str+0x105>
  d6:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dd:	2f                   	(bad)
  de:	78 38                	js     118 <.debug_line_str+0x118>
  e0:	36 5f                	ss pop rdi
  e2:	36 34 2d             	ss xor al,0x2d
  e5:	6c                   	ins    BYTE PTR es:[rdi],dx
  e6:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  ed:	75 2f                	jne    11e <.debug_line_str+0x11e>
  ef:	62 69 74 73 00       	(bad)
  f4:	2f                   	(bad)
  f5:	75 73                	jne    16a <.debug_line_str+0x16a>
  f7:	72 2f                	jb     128 <.debug_line_str+0x128>
  f9:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 100:	2f                   	(bad)
 101:	78 38                	js     13b <.debug_line_str+0x13b>
 103:	36 5f                	ss pop rdi
 105:	36 34 2d             	ss xor al,0x2d
 108:	6c                   	ins    BYTE PTR es:[rdi],dx
 109:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 110:	75 2f                	jne    141 <.debug_line_str+0x141>
 112:	62 69 74 73 2f       	(bad)
 117:	74 79                	je     192 <.debug_line_str+0x192>
 119:	70 65                	jo     180 <.debug_line_str+0x180>
 11b:	73 00                	jae    11d <.debug_line_str+0x11d>
 11d:	2f                   	(bad)
 11e:	75 73                	jne    193 <.debug_line_str+0x193>
 120:	72 2f                	jb     151 <.debug_line_str+0x151>
 122:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 129:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
 12c:	61                   	(bad)
 12d:	72 65                	jb     194 <.debug_line_str+0x194>
 12f:	64 74 2f             	fs je  161 <.debug_line_str+0x161>
 132:	69 6e 63 00 74 6f 75 	imul   ebp,DWORD PTR [rsi+0x63],0x756f7400
 139:	70 2f                	jo     16a <.debug_line_str+0x16a>
 13b:	69 6e 63 00 72 65 61 	imul   ebp,DWORD PTR [rsi+0x63],0x61657200
 142:	64 76 65             	fs jbe 1aa <.debug_line_str+0x1aa>
 145:	72 2f                	jb     176 <.debug_line_str+0x176>
 147:	69 6e 63 00 75 70 76 	imul   ebp,DWORD PTR [rsi+0x63],0x76707500
 14e:	65 72 2e             	gs jb  17f <.debug_line_str+0x17f>
 151:	63 00                	movsxd eax,DWORD PTR [rax]
 153:	75 70                	jne    1c5 <main+0x1c5>
 155:	76 65                	jbe    1bc <main+0x1bc>
 157:	72 2e                	jb     187 <.debug_line_str+0x187>
 159:	63 00                	movsxd eax,DWORD PTR [rax]
 15b:	73 74                	jae    1d1 <main+0x1d1>
 15d:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7400
 164:	74 
 165:	79 70                	jns    1d7 <main+0x1d7>
 167:	65 73 2e             	gs jae 198 <.debug_line_str+0x198>
 16a:	68 00 73 74 72       	push   0x72747300
 16f:	75 63                	jne    1d4 <main+0x1d4>
 171:	74 5f                	je     1d2 <main+0x1d2>
 173:	46                   	rex.RX
 174:	49                   	rex.WB
 175:	4c                   	rex.WR
 176:	45                   	rex.RB
 177:	2e 68 00 46 49 4c    	cs push 0x4c494600
 17d:	45                   	rex.RB
 17e:	2e 68 00 73 74 64    	cs push 0x64747300
 184:	6c                   	ins    BYTE PTR es:[rdi],dx
 185:	69 62 2e 68 00 73 68 	imul   esp,DWORD PTR [rdx+0x2e],0x68730068
 18c:	61                   	(bad)
 18d:	72 65                	jb     1f4 <main+0x1f4>
 18f:	64 74 2e             	fs je  1c0 <main+0x1c0>
 192:	68 00 74 6f 75       	push   0x756f7400
 197:	70 2e                	jo     1c7 <main+0x1c7>
 199:	68 00 72 65 61       	push   0x61657200
 19e:	64 76 65             	fs jbe 206 <main+0x206>
 1a1:	72 2e                	jb     1d1 <main+0x1d1>
 1a3:	68 00 73 74 64       	push   0x64747300
 1a8:	69                   	.byte 0x69
 1a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1aa:	2e                   	cs
 1ab:	68                   	.byte 0x68
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <main+0x79>
   b:	74 75                	je     82 <main+0x82>
   d:	20 31                	and    BYTE PTR [rcx],dh
   f:	33 2e                	xor    ebp,DWORD PTR [rsi]
  11:	32 2e                	xor    ch,BYTE PTR [rsi]
  13:	30 2d 32 33 75 62    	xor    BYTE PTR [rip+0x62753332],ch        # 6275334b <main+0x6275334b>
  19:	75 6e                	jne    89 <main+0x89>
  1b:	74 75                	je     92 <main+0x92>
  1d:	34 29                	xor    al,0x29
  1f:	20 31                	and    BYTE PTR [rcx],dh
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	32 2e                	xor    ch,BYTE PTR [rsi]
  25:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	10 00                	adc    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	05 00 00 00 47       	add    eax,0x47000000
   d:	4e 55                	rex.WRX push rbp
   f:	00 02                	add    BYTE PTR [rdx],al
  11:	00 00                	add    BYTE PTR [rax],al
  13:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
  17:	00 03                	add    BYTE PTR [rbx],al
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	ce                   	(bad)
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 00                	add    BYTE PTR [rax],al
  29:	45 0e                	rex.RB (bad)
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	02 c5                	add    al,ch
  33:	0c 07                	or     al,0x7
  35:	08 00                	or     BYTE PTR [rax],al
	...
