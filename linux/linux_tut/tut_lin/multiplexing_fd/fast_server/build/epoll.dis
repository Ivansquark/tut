
build/epoll.elf:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	20 00                	and    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 34f:	00 03                	add    BYTE PTR [rbx],al
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 02                	add    BYTE PTR [rdx],al
 359:	80 00 c0             	add    BYTE PTR [rax],0xc0
 35c:	04 00                	add    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	01 00                	add    DWORD PTR [rax],eax
 362:	00 00                	add    BYTE PTR [rax],al
 364:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    al,0x0
 36a:	00 00                	add    BYTE PTR [rax],al
 36c:	14 00                	adc    al,0x0
 36e:	00 00                	add    BYTE PTR [rax],al
 370:	03 00                	add    eax,DWORD PTR [rax]
 372:	00 00                	add    BYTE PTR [rax],al
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push rbp
 377:	00 e7                	add    bh,ah
 379:	74 5a                	je     3d5 <__abi_tag+0x49>
 37b:	e9 38 e5 1d b8       	jmp    ffffffffb81de8b8 <_end+0xffffffffb81da8a0>
 380:	3e 2d f7 c2 8c 43    	ds sub eax,0x438cc2f7
 386:	68 fb 3c c6 e4       	push   0xffffffffe4c63cfb
 38b:	cc                   	int3

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    al,0x0
 38e:	00 00                	add    BYTE PTR [rax],al
 390:	10 00                	adc    BYTE PTR [rax],al
 392:	00 00                	add    BYTE PTR [rax],al
 394:	01 00                	add    DWORD PTR [rax],eax
 396:	00 00                	add    BYTE PTR [rax],al
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push rbp
 39b:	00 00                	add    BYTE PTR [rax],al
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 03                	add    BYTE PTR [rbx],al
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 02                	add    BYTE PTR [rdx],al
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 00                	add    BYTE PTR [rax],al
 3a9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    al,BYTE PTR [rax]
 3b2:	00 00                	add    BYTE PTR [rax],al
 3b4:	1b 00                	sbb    eax,DWORD PTR [rax]
 3b6:	00 00                	add    BYTE PTR [rax],al
 3b8:	01 00                	add    DWORD PTR [rax],eax
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	06                   	(bad)
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 00                	add    BYTE PTR [rax],al
 3c1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3c7:	00 1b                	add    BYTE PTR [rbx],bl
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 00                	add    BYTE PTR [rax],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 d1                	add    cl,dl
 3d1:	65 ce                	gs (bad)
 3d3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	28 00                	sub    BYTE PTR [rax],al
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 406:	00 00                	add    BYTE PTR [rax],al
 408:	63 00                	movsxd eax,DWORD PTR [rax]
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	12 00                	adc    al,BYTE PTR [rax]
	...
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	ae                   	scas   al,BYTE PTR es:[rdi]
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 12                	add    BYTE PTR [rdx],dl
	...
 435:	00 00                	add    BYTE PTR [rax],al
 437:	00 1b                	add    BYTE PTR [rbx],bl
 439:	01 00                	add    DWORD PTR [rax],eax
 43b:	00 20                	add    BYTE PTR [rax],ah
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 0b                	add    BYTE PTR [rbx],cl
 451:	00 00                	add    BYTE PTR [rax],al
 453:	00 12                	add    BYTE PTR [rdx],dl
	...
 465:	00 00                	add    BYTE PTR [rax],al
 467:	00 bf 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],bh
	...
 47d:	00 00                	add    BYTE PTR [rax],al
 47f:	00 17                	add    BYTE PTR [rdi],dl
 481:	00 00                	add    BYTE PTR [rax],al
 483:	00 12                	add    BYTE PTR [rdx],dl
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 2d 00 00 00 12    	add    BYTE PTR [rip+0x12000000],ch        # 1200049d <_end+0x11ffc485>
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 3a                	add    BYTE PTR [rdx],bh
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4c5:	00 00                	add    BYTE PTR [rax],al
 4c7:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	a8 00                	test   al,0x0
 4e2:	00 00                	add    BYTE PTR [rax],al
 4e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	01 00                	add    DWORD PTR [rax],eax
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 513:	00 12                	add    BYTE PTR [rdx],dl
	...
 525:	00 00                	add    BYTE PTR [rax],al
 527:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
 52b:	00 12                	add    BYTE PTR [rdx],dl
	...
 53d:	00 00                	add    BYTE PTR [rax],al
 53f:	00 37                	add    BYTE PTR [rdi],dh
 541:	01 00                	add    DWORD PTR [rax],eax
 543:	00 20                	add    BYTE PTR [rax],ah
	...
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 c5                	add    ch,al
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 12                	add    BYTE PTR [rdx],dl
	...
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
 573:	00 12                	add    BYTE PTR [rdx],dl
	...
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 84 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],al
	...
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 5a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5b5:	00 00                	add    BYTE PTR [rax],al
 5b7:	00 35 00 00 00 12    	add    BYTE PTR [rip+0x12000000],dh        # 120005bd <_end+0x11ffc5a5>
	...
 5cd:	00 00                	add    BYTE PTR [rax],al
 5cf:	00 10                	add    BYTE PTR [rax],dl
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5e5:	00 00                	add    BYTE PTR [rax],al
 5e7:	00 57 00             	add    BYTE PTR [rdi+0x0],dl
 5ea:	00 00                	add    BYTE PTR [rax],al
 5ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 5fe:	00 00                	add    BYTE PTR [rax],al
 600:	46 01 00             	rex.RX add DWORD PTR [rax],r8d
 603:	00 20                	add    BYTE PTR [rax],ah
	...
 615:	00 00                	add    BYTE PTR [rax],al
 617:	00 9a 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],bl
	...
 62d:	00 00                	add    BYTE PTR [rax],al
 62f:	00 75 00             	add    BYTE PTR [rbp+0x0],dh
 632:	00 00                	add    BYTE PTR [rax],al
 634:	11 00                	adc    DWORD PTR [rax],eax
	...
 646:	00 00                	add    BYTE PTR [rax],al
 648:	40 00 00             	rex add BYTE PTR [rax],al
 64b:	00 12                	add    BYTE PTR [rdx],dl
	...
 65d:	00 00                	add    BYTE PTR [rax],al
 65f:	00 8b 00 00 00 22    	add    BYTE PTR [rbx+0x22000000],cl
	...

Disassembly of section .dynstr:

0000000000000678 <.dynstr>:
 678:	00 65 70             	add    BYTE PTR [rbp+0x70],ah
 67b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 67c:	6c                   	ins    BYTE PTR es:[rdi],dx
 67d:	6c                   	ins    BYTE PTR es:[rdi],dx
 67e:	5f                   	pop    rdi
 67f:	63 74 6c 00          	movsxd esi,DWORD PTR [rsp+rbp*2+0x0]
 683:	70 75                	jo     6fa <__abi_tag+0x36e>
 685:	74 73                	je     6fa <__abi_tag+0x36e>
 687:	00 70 65             	add    BYTE PTR [rax+0x65],dh
 68a:	72 72                	jb     6fe <__abi_tag+0x372>
 68c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 68d:	72 00                	jb     68f <__abi_tag+0x303>
 68f:	5f                   	pop    rdi
 690:	5f                   	pop    rdi
 691:	73 74                	jae    707 <__abi_tag+0x37b>
 693:	61                   	(bad)
 694:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 697:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 69a:	5f                   	pop    rdi
 69b:	66 61                	data16 (bad)
 69d:	69 6c 00 66 72 65 65 	imul   ebp,DWORD PTR [rax+rax*1+0x66],0x656572
 6a4:	00 
 6a5:	61                   	(bad)
 6a6:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 6a9:	70 74                	jo     71f <__abi_tag+0x393>
 6ab:	34 00                	xor    al,0x0
 6ad:	62 69 6e 64 00       	(bad)
 6b2:	68 74 6f 6e 73       	push   0x736e6f74
 6b7:	00 73 6f             	add    BYTE PTR [rbx+0x6f],dh
 6ba:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 6bd:	74 00                	je     6bf <__abi_tag+0x333>
 6bf:	72 65                	jb     726 <__abi_tag+0x39a>
 6c1:	61                   	(bad)
 6c2:	64 00 65 70          	add    BYTE PTR fs:[rbp+0x70],ah
 6c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6c7:	6c                   	ins    BYTE PTR es:[rdi],dx
 6c8:	6c                   	ins    BYTE PTR es:[rdi],dx
 6c9:	5f                   	pop    rdi
 6ca:	77 61                	ja     72d <__abi_tag+0x3a1>
 6cc:	69 74 00 61 74 6f 69 	imul   esi,DWORD PTR [rax+rax*1+0x61],0x696f74
 6d3:	00 
 6d4:	6d                   	ins    DWORD PTR es:[rdi],dx
 6d5:	61                   	(bad)
 6d6:	6c                   	ins    BYTE PTR es:[rdi],dx
 6d7:	6c                   	ins    BYTE PTR es:[rdi],dx
 6d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6d9:	63 00                	movsxd eax,DWORD PTR [rax]
 6db:	5f                   	pop    rdi
 6dc:	5f                   	pop    rdi
 6dd:	6c                   	ins    BYTE PTR es:[rdi],dx
 6de:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 6e5:	72 74                	jb     75b <__abi_tag+0x3cf>
 6e7:	5f                   	pop    rdi
 6e8:	6d                   	ins    DWORD PTR es:[rdi],dx
 6e9:	61                   	(bad)
 6ea:	69 6e 00 73 74 64 65 	imul   ebp,DWORD PTR [rsi+0x0],0x65647473
 6f1:	72 72                	jb     765 <__abi_tag+0x3d9>
 6f3:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 6f6:	72 69                	jb     761 <__abi_tag+0x3d5>
 6f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6f9:	74 66                	je     761 <__abi_tag+0x3d5>
 6fb:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
 6ff:	74 65                	je     766 <__abi_tag+0x3da>
 701:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 702:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 705:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 708:	5f                   	pop    rdi
 709:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 70f:	7a 65                	jp     776 <__abi_tag+0x3ea>
 711:	00 65 70             	add    BYTE PTR [rbp+0x70],ah
 714:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 715:	6c                   	ins    BYTE PTR es:[rdi],dx
 716:	6c                   	ins    BYTE PTR es:[rdi],dx
 717:	5f                   	pop    rdi
 718:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 71b:	61                   	(bad)
 71c:	74 65                	je     783 <__abi_tag+0x3f7>
 71e:	31 00                	xor    DWORD PTR [rax],eax
 720:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 724:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 728:	65 72 72             	gs jb  79d <__abi_tag+0x411>
 72b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 72c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 72d:	5f                   	pop    rdi
 72e:	6c                   	ins    BYTE PTR es:[rdi],dx
 72f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 730:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 733:	69 6f 6e 00 77 72 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69727700
 73a:	74 65                	je     7a1 <__abi_tag+0x415>
 73c:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 73f:	65 74 5f             	gs je  7a1 <__abi_tag+0x415>
 742:	70 74                	jo     7b8 <__abi_tag+0x42c>
 744:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 745:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 746:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 74a:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 74c:	73 6f                	jae    7bd <__abi_tag+0x431>
 74e:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 753:	49                   	rex.WB
 754:	42                   	rex.X
 755:	43 5f                	rex.XB pop r15
 757:	32 2e                	xor    ch,BYTE PTR [rsi]
 759:	39 00                	cmp    DWORD PTR [rax],eax
 75b:	47                   	rex.RXB
 75c:	4c                   	rex.WR
 75d:	49                   	rex.WB
 75e:	42                   	rex.X
 75f:	43 5f                	rex.XB pop r15
 761:	32 2e                	xor    ch,BYTE PTR [rsi]
 763:	33 2e                	xor    ebp,DWORD PTR [rsi]
 765:	32 00                	xor    al,BYTE PTR [rax]
 767:	47                   	rex.RXB
 768:	4c                   	rex.WR
 769:	49                   	rex.WB
 76a:	42                   	rex.X
 76b:	43 5f                	rex.XB pop r15
 76d:	32 2e                	xor    ch,BYTE PTR [rsi]
 76f:	31 30                	xor    DWORD PTR [rax],esi
 771:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 774:	49                   	rex.WB
 775:	42                   	rex.X
 776:	43 5f                	rex.XB pop r15
 778:	32 2e                	xor    ch,BYTE PTR [rsi]
 77a:	34 00                	xor    al,0x0
 77c:	47                   	rex.RXB
 77d:	4c                   	rex.WR
 77e:	49                   	rex.WB
 77f:	42                   	rex.X
 780:	43 5f                	rex.XB pop r15
 782:	32 2e                	xor    ch,BYTE PTR [rsi]
 784:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 787:	47                   	rex.RXB
 788:	4c                   	rex.WR
 789:	49                   	rex.WB
 78a:	42                   	rex.X
 78b:	43 5f                	rex.XB pop r15
 78d:	32 2e                	xor    ch,BYTE PTR [rsi]
 78f:	32 2e                	xor    ch,BYTE PTR [rsi]
 791:	35 00 5f 49 54       	xor    eax,0x54495f00
 796:	4d 5f                	rex.WRB pop r15
 798:	64 65 72 65          	fs gs jb 801 <__abi_tag+0x475>
 79c:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 7a3:	4d 
 7a4:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 7a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7a8:	65 54                	gs push rsp
 7aa:	61                   	(bad)
 7ab:	62 6c 65             	(bad)
 7ae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 7b1:	67 6d                	ins    DWORD PTR es:[edi],dx
 7b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7b5:	5f                   	pop    rdi
 7b6:	73 74                	jae    82c <__abi_tag+0x4a0>
 7b8:	61                   	(bad)
 7b9:	72 74                	jb     82f <__abi_tag+0x4a3>
 7bb:	5f                   	pop    rdi
 7bc:	5f                   	pop    rdi
 7bd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 7c0:	54                   	push   rsp
 7c1:	4d 5f                	rex.WRB pop r15
 7c3:	72 65                	jb     82a <__abi_tag+0x49e>
 7c5:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 7cc:	4d 
 7cd:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 7cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7d1:	65 54                	gs push rsp
 7d3:	61                   	(bad)
 7d4:	62                   	.byte 0x62
 7d5:	6c                   	ins    BYTE PTR es:[rdi],dx
 7d6:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000007d8 <.gnu.version>:
 7d8:	00 00                	add    BYTE PTR [rax],al
 7da:	02 00                	add    al,BYTE PTR [rax]
 7dc:	03 00                	add    eax,DWORD PTR [rax]
 7de:	02 00                	add    al,BYTE PTR [rax]
 7e0:	01 00                	add    DWORD PTR [rax],eax
 7e2:	02 00                	add    al,BYTE PTR [rax]
 7e4:	02 00                	add    al,BYTE PTR [rax]
 7e6:	04 00                	add    al,0x0
 7e8:	05 00 02 00 02       	add    eax,0x2000200
 7ed:	00 02                	add    BYTE PTR [rdx],al
 7ef:	00 06                	add    BYTE PTR [rsi],al
 7f1:	00 02                	add    BYTE PTR [rdx],al
 7f3:	00 02                	add    BYTE PTR [rdx],al
 7f5:	00 01                	add    BYTE PTR [rcx],al
 7f7:	00 02                	add    BYTE PTR [rdx],al
 7f9:	00 02                	add    BYTE PTR [rdx],al
 7fb:	00 02                	add    BYTE PTR [rdx],al
 7fd:	00 06                	add    BYTE PTR [rsi],al
 7ff:	00 02                	add    BYTE PTR [rdx],al
 801:	00 02                	add    BYTE PTR [rdx],al
 803:	00 02                	add    BYTE PTR [rdx],al
 805:	00 01                	add    BYTE PTR [rcx],al
 807:	00 07                	add    BYTE PTR [rdi],al
 809:	00 02                	add    BYTE PTR [rdx],al
 80b:	00 02                	add    BYTE PTR [rdx],al
 80d:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .gnu.version_r:

0000000000000810 <.gnu.version_r>:
 810:	01 00                	add    DWORD PTR [rax],eax
 812:	06                   	(bad)
 813:	00 cf                	add    bh,cl
 815:	00 00                	add    BYTE PTR [rax],al
 817:	00 10                	add    BYTE PTR [rax],dl
 819:	00 00                	add    BYTE PTR [rax],al
 81b:	00 00                	add    BYTE PTR [rax],al
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 19                	add    BYTE PTR [rcx],bl
 821:	69 69 0d 00 00 07 00 	imul   ebp,DWORD PTR [rcx+0xd],0x70000
 828:	d9 00                	fld    DWORD PTR [rax]
 82a:	00 00                	add    BYTE PTR [rax],al
 82c:	10 00                	adc    BYTE PTR [rax],al
 82e:	00 00                	add    BYTE PTR [rax],al
 830:	72 19                	jb     84b <__abi_tag+0x4bf>
 832:	69 09 00 00 06 00    	imul   ecx,DWORD PTR [rcx],0x60000
 838:	e3 00                	jrcxz  83a <__abi_tag+0x4ae>
 83a:	00 00                	add    BYTE PTR [rax],al
 83c:	10 00                	adc    BYTE PTR [rax],al
 83e:	00 00                	add    BYTE PTR [rax],al
 840:	90                   	nop
 841:	91                   	xchg   ecx,eax
 842:	96                   	xchg   esi,eax
 843:	06                   	(bad)
 844:	00 00                	add    BYTE PTR [rax],al
 846:	05 00 ef 00 00       	add    eax,0xef00
 84b:	00 10                	add    BYTE PTR [rax],dl
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 852:	69 0d 00 00 04 00 fa 	imul   ecx,DWORD PTR [rip+0x40000],0xfa        # 4085c <_end+0x3c844>
 859:	00 00 00 
 85c:	10 00                	adc    BYTE PTR [rax],al
 85e:	00 00                	add    BYTE PTR [rax],al
 860:	b4 91                	mov    ah,0x91
 862:	96                   	xchg   esi,eax
 863:	06                   	(bad)
 864:	00 00                	add    BYTE PTR [rax],al
 866:	03 00                	add    eax,DWORD PTR [rax]
 868:	04 01                	add    al,0x1
 86a:	00 00                	add    BYTE PTR [rax],al
 86c:	10 00                	adc    BYTE PTR [rax],al
 86e:	00 00                	add    BYTE PTR [rax],al
 870:	75 1a                	jne    88c <__abi_tag+0x500>
 872:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 878:	0f 01 00             	sgdt   [rax]
 87b:	00 00                	add    BYTE PTR [rax],al
 87d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000880 <.rela.dyn>:
 880:	10 3d 00 00 00 00    	adc    BYTE PTR [rip+0x0],bh        # 886 <__abi_tag+0x4fa>
 886:	00 00                	add    BYTE PTR [rax],al
 888:	08 00                	or     BYTE PTR [rax],al
 88a:	00 00                	add    BYTE PTR [rax],al
 88c:	00 00                	add    BYTE PTR [rax],al
 88e:	00 00                	add    BYTE PTR [rax],al
 890:	c0 13 00             	rcl    BYTE PTR [rbx],0x0
 893:	00 00                	add    BYTE PTR [rax],al
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 18                	add    BYTE PTR [rax],bl
 899:	3d 00 00 00 00       	cmp    eax,0x0
 89e:	00 00                	add    BYTE PTR [rax],al
 8a0:	08 00                	or     BYTE PTR [rax],al
 8a2:	00 00                	add    BYTE PTR [rax],al
 8a4:	00 00                	add    BYTE PTR [rax],al
 8a6:	00 00                	add    BYTE PTR [rax],al
 8a8:	80 13 00             	adc    BYTE PTR [rbx],0x0
 8ab:	00 00                	add    BYTE PTR [rax],al
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 08                	add    BYTE PTR [rax],cl
 8b1:	40 00 00             	rex add BYTE PTR [rax],al
 8b4:	00 00                	add    BYTE PTR [rax],al
 8b6:	00 00                	add    BYTE PTR [rax],al
 8b8:	08 00                	or     BYTE PTR [rax],al
 8ba:	00 00                	add    BYTE PTR [rax],al
 8bc:	00 00                	add    BYTE PTR [rax],al
 8be:	00 00                	add    BYTE PTR [rax],al
 8c0:	08 40 00             	or     BYTE PTR [rax+0x0],al
 8c3:	00 00                	add    BYTE PTR [rax],al
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 d0                	add    al,dl
 8c9:	3f                   	(bad)
 8ca:	00 00                	add    BYTE PTR [rax],al
 8cc:	00 00                	add    BYTE PTR [rax],al
 8ce:	00 00                	add    BYTE PTR [rax],al
 8d0:	06                   	(bad)
 8d1:	00 00                	add    BYTE PTR [rax],al
 8d3:	00 02                	add    BYTE PTR [rdx],al
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 d8                	add    al,bl
 8e1:	3f                   	(bad)
 8e2:	00 00                	add    BYTE PTR [rax],al
 8e4:	00 00                	add    BYTE PTR [rax],al
 8e6:	00 00                	add    BYTE PTR [rax],al
 8e8:	06                   	(bad)
 8e9:	00 00                	add    BYTE PTR [rax],al
 8eb:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 8f6:	00 00                	add    BYTE PTR [rax],al
 8f8:	e0 3f                	loopne 939 <__abi_tag+0x5ad>
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	00 00                	add    BYTE PTR [rax],al
 8fe:	00 00                	add    BYTE PTR [rax],al
 900:	06                   	(bad)
 901:	00 00                	add    BYTE PTR [rax],al
 903:	00 0f                	add    BYTE PTR [rdi],cl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 e8                	add    al,ch
 911:	3f                   	(bad)
 912:	00 00                	add    BYTE PTR [rax],al
 914:	00 00                	add    BYTE PTR [rax],al
 916:	00 00                	add    BYTE PTR [rax],al
 918:	06                   	(bad)
 919:	00 00                	add    BYTE PTR [rax],al
 91b:	00 17                	add    BYTE PTR [rdi],dl
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 f0                	add    al,dh
 929:	3f                   	(bad)
 92a:	00 00                	add    BYTE PTR [rax],al
 92c:	00 00                	add    BYTE PTR [rax],al
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	06                   	(bad)
 931:	00 00                	add    BYTE PTR [rax],al
 933:	00 1b                	add    BYTE PTR [rbx],bl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 f8                	add    al,bh
 941:	3f                   	(bad)
 942:	00 00                	add    BYTE PTR [rax],al
 944:	00 00                	add    BYTE PTR [rax],al
 946:	00 00                	add    BYTE PTR [rax],al
 948:	06                   	(bad)
 949:	00 00                	add    BYTE PTR [rax],al
 94b:	00 19                	add    BYTE PTR [rcx],bl
	...

Disassembly of section .rela.plt:

0000000000000958 <.rela.plt>:
 958:	28 3f                	sub    BYTE PTR [rdi],bh
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	00 00                	add    BYTE PTR [rax],al
 95e:	00 00                	add    BYTE PTR [rax],al
 960:	07                   	(bad)
 961:	00 00                	add    BYTE PTR [rax],al
 963:	00 01                	add    BYTE PTR [rcx],al
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 30                	add    BYTE PTR [rax],dh
 971:	3f                   	(bad)
 972:	00 00                	add    BYTE PTR [rax],al
 974:	00 00                	add    BYTE PTR [rax],al
 976:	00 00                	add    BYTE PTR [rax],al
 978:	07                   	(bad)
 979:	00 00                	add    BYTE PTR [rax],al
 97b:	00 03                	add    BYTE PTR [rbx],al
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 38                	add    BYTE PTR [rax],bh
 989:	3f                   	(bad)
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	00 00                	add    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	07                   	(bad)
 991:	00 00                	add    BYTE PTR [rax],al
 993:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 999 <__abi_tag+0x60d>
 999:	00 00                	add    BYTE PTR [rax],al
 99b:	00 00                	add    BYTE PTR [rax],al
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 40 3f             	add    BYTE PTR [rax+0x3f],al
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	07                   	(bad)
 9a9:	00 00                	add    BYTE PTR [rax],al
 9ab:	00 06                	add    BYTE PTR [rsi],al
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 48 3f             	add    BYTE PTR [rax+0x3f],cl
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	00 00                	add    BYTE PTR [rax],al
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	07                   	(bad)
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	00 07                	add    BYTE PTR [rdi],al
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 50 3f             	add    BYTE PTR [rax+0x3f],dl
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	00 00                	add    BYTE PTR [rax],al
 9d6:	00 00                	add    BYTE PTR [rax],al
 9d8:	07                   	(bad)
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 08                	add    BYTE PTR [rax],cl
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 58 3f             	add    BYTE PTR [rax+0x3f],bl
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	00 00                	add    BYTE PTR [rax],al
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	07                   	(bad)
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 09                	add    BYTE PTR [rcx],cl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 60 3f             	add    BYTE PTR [rax+0x3f],ah
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	00 00                	add    BYTE PTR [rax],al
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	07                   	(bad)
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 0a                	add    BYTE PTR [rdx],cl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 68 3f             	add    BYTE PTR [rax+0x3f],ch
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	07                   	(bad)
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 0b                	add    BYTE PTR [rbx],cl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 70 3f             	add    BYTE PTR [rax+0x3f],dh
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	07                   	(bad)
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 a46:	00 00                	add    BYTE PTR [rax],al
 a48:	78 3f                	js     a89 <__abi_tag+0x6fd>
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
 a4e:	00 00                	add    BYTE PTR [rax],al
 a50:	07                   	(bad)
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # a59 <__abi_tag+0x6cd>
 a59:	00 00                	add    BYTE PTR [rax],al
 a5b:	00 00                	add    BYTE PTR [rax],al
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 80 3f 00 00 00    	add    BYTE PTR [rax+0x3f],al
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 07                	add    BYTE PTR [rdi],al
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 0e                	add    BYTE PTR [rsi],cl
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 88 3f 00 00 00    	add    BYTE PTR [rax+0x3f],cl
 a7d:	00 00                	add    BYTE PTR [rax],al
 a7f:	00 07                	add    BYTE PTR [rdi],al
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 10                	add    BYTE PTR [rax],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 90 3f 00 00 00    	add    BYTE PTR [rax+0x3f],dl
 a95:	00 00                	add    BYTE PTR [rax],al
 a97:	00 07                	add    BYTE PTR [rdi],al
 a99:	00 00                	add    BYTE PTR [rax],al
 a9b:	00 11                	add    BYTE PTR [rcx],dl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 98 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bl
 aad:	00 00                	add    BYTE PTR [rax],al
 aaf:	00 07                	add    BYTE PTR [rdi],al
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 12                	add    BYTE PTR [rdx],dl
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 a0 3f 00 00 00    	add    BYTE PTR [rax+0x3f],ah
 ac5:	00 00                	add    BYTE PTR [rax],al
 ac7:	00 07                	add    BYTE PTR [rdi],al
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 13                	add    BYTE PTR [rbx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 a8 3f 00 00 00    	add    BYTE PTR [rax+0x3f],ch
 add:	00 00                	add    BYTE PTR [rax],al
 adf:	00 07                	add    BYTE PTR [rdi],al
 ae1:	00 00                	add    BYTE PTR [rax],al
 ae3:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	b0 3f                	mov    al,0x3f
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	00 00                	add    BYTE PTR [rax],al
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	07                   	(bad)
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # b01 <__abi_tag+0x775>
 b01:	00 00                	add    BYTE PTR [rax],al
 b03:	00 00                	add    BYTE PTR [rax],al
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 b8 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bh
 b0d:	00 00                	add    BYTE PTR [rax],al
 b0f:	00 07                	add    BYTE PTR [rdi],al
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 16                	add    BYTE PTR [rsi],dl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 c0                	add    al,al
 b21:	3f                   	(bad)
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	07                   	(bad)
 b29:	00 00                	add    BYTE PTR [rax],al
 b2b:	00 18                	add    BYTE PTR [rax],bl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 c8                	add    al,cl
 b39:	3f                   	(bad)
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	07                   	(bad)
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 1a                	add    BYTE PTR [rdx],bl
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d1 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd1]        # 3fe0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 f2 2e 00 00    	push   QWORD PTR [rip+0x2ef2]        # 3f18 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 f4 2e 00 00    	jmp    QWORD PTR [rip+0x2ef4]        # 3f20 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   ax,ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   ax,ax
    1050:	f3 0f 1e fa          	endbr64
    1054:	68 02 00 00 00       	push   0x2
    1059:	e9 c2 ff ff ff       	jmp    1020 <_init+0x20>
    105e:	66 90                	xchg   ax,ax
    1060:	f3 0f 1e fa          	endbr64
    1064:	68 03 00 00 00       	push   0x3
    1069:	e9 b2 ff ff ff       	jmp    1020 <_init+0x20>
    106e:	66 90                	xchg   ax,ax
    1070:	f3 0f 1e fa          	endbr64
    1074:	68 04 00 00 00       	push   0x4
    1079:	e9 a2 ff ff ff       	jmp    1020 <_init+0x20>
    107e:	66 90                	xchg   ax,ax
    1080:	f3 0f 1e fa          	endbr64
    1084:	68 05 00 00 00       	push   0x5
    1089:	e9 92 ff ff ff       	jmp    1020 <_init+0x20>
    108e:	66 90                	xchg   ax,ax
    1090:	f3 0f 1e fa          	endbr64
    1094:	68 06 00 00 00       	push   0x6
    1099:	e9 82 ff ff ff       	jmp    1020 <_init+0x20>
    109e:	66 90                	xchg   ax,ax
    10a0:	f3 0f 1e fa          	endbr64
    10a4:	68 07 00 00 00       	push   0x7
    10a9:	e9 72 ff ff ff       	jmp    1020 <_init+0x20>
    10ae:	66 90                	xchg   ax,ax
    10b0:	f3 0f 1e fa          	endbr64
    10b4:	68 08 00 00 00       	push   0x8
    10b9:	e9 62 ff ff ff       	jmp    1020 <_init+0x20>
    10be:	66 90                	xchg   ax,ax
    10c0:	f3 0f 1e fa          	endbr64
    10c4:	68 09 00 00 00       	push   0x9
    10c9:	e9 52 ff ff ff       	jmp    1020 <_init+0x20>
    10ce:	66 90                	xchg   ax,ax
    10d0:	f3 0f 1e fa          	endbr64
    10d4:	68 0a 00 00 00       	push   0xa
    10d9:	e9 42 ff ff ff       	jmp    1020 <_init+0x20>
    10de:	66 90                	xchg   ax,ax
    10e0:	f3 0f 1e fa          	endbr64
    10e4:	68 0b 00 00 00       	push   0xb
    10e9:	e9 32 ff ff ff       	jmp    1020 <_init+0x20>
    10ee:	66 90                	xchg   ax,ax
    10f0:	f3 0f 1e fa          	endbr64
    10f4:	68 0c 00 00 00       	push   0xc
    10f9:	e9 22 ff ff ff       	jmp    1020 <_init+0x20>
    10fe:	66 90                	xchg   ax,ax
    1100:	f3 0f 1e fa          	endbr64
    1104:	68 0d 00 00 00       	push   0xd
    1109:	e9 12 ff ff ff       	jmp    1020 <_init+0x20>
    110e:	66 90                	xchg   ax,ax
    1110:	f3 0f 1e fa          	endbr64
    1114:	68 0e 00 00 00       	push   0xe
    1119:	e9 02 ff ff ff       	jmp    1020 <_init+0x20>
    111e:	66 90                	xchg   ax,ax
    1120:	f3 0f 1e fa          	endbr64
    1124:	68 0f 00 00 00       	push   0xf
    1129:	e9 f2 fe ff ff       	jmp    1020 <_init+0x20>
    112e:	66 90                	xchg   ax,ax
    1130:	f3 0f 1e fa          	endbr64
    1134:	68 10 00 00 00       	push   0x10
    1139:	e9 e2 fe ff ff       	jmp    1020 <_init+0x20>
    113e:	66 90                	xchg   ax,ax
    1140:	f3 0f 1e fa          	endbr64
    1144:	68 11 00 00 00       	push   0x11
    1149:	e9 d2 fe ff ff       	jmp    1020 <_init+0x20>
    114e:	66 90                	xchg   ax,ax
    1150:	f3 0f 1e fa          	endbr64
    1154:	68 12 00 00 00       	push   0x12
    1159:	e9 c2 fe ff ff       	jmp    1020 <_init+0x20>
    115e:	66 90                	xchg   ax,ax
    1160:	f3 0f 1e fa          	endbr64
    1164:	68 13 00 00 00       	push   0x13
    1169:	e9 b2 fe ff ff       	jmp    1020 <_init+0x20>
    116e:	66 90                	xchg   ax,ax
    1170:	f3 0f 1e fa          	endbr64
    1174:	68 14 00 00 00       	push   0x14
    1179:	e9 a2 fe ff ff       	jmp    1020 <_init+0x20>
    117e:	66 90                	xchg   ax,ax

Disassembly of section .plt.got:

0000000000001180 <__cxa_finalize@plt>:
    1180:	f3 0f 1e fa          	endbr64
    1184:	ff 25 66 2e 00 00    	jmp    QWORD PTR [rip+0x2e66]        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    118a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001190 <free@plt>:
    1190:	f3 0f 1e fa          	endbr64
    1194:	ff 25 8e 2d 00 00    	jmp    QWORD PTR [rip+0x2d8e]        # 3f28 <free@GLIBC_2.2.5>
    119a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011a0 <__errno_location@plt>:
    11a0:	f3 0f 1e fa          	endbr64
    11a4:	ff 25 86 2d 00 00    	jmp    QWORD PTR [rip+0x2d86]        # 3f30 <__errno_location@GLIBC_2.2.5>
    11aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011b0 <puts@plt>:
    11b0:	f3 0f 1e fa          	endbr64
    11b4:	ff 25 7e 2d 00 00    	jmp    QWORD PTR [rip+0x2d7e]        # 3f38 <puts@GLIBC_2.2.5>
    11ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011c0 <write@plt>:
    11c0:	f3 0f 1e fa          	endbr64
    11c4:	ff 25 76 2d 00 00    	jmp    QWORD PTR [rip+0x2d76]        # 3f40 <write@GLIBC_2.2.5>
    11ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011d0 <__stack_chk_fail@plt>:
    11d0:	f3 0f 1e fa          	endbr64
    11d4:	ff 25 6e 2d 00 00    	jmp    QWORD PTR [rip+0x2d6e]        # 3f48 <__stack_chk_fail@GLIBC_2.4>
    11da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011e0 <accept4@plt>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	ff 25 66 2d 00 00    	jmp    QWORD PTR [rip+0x2d66]        # 3f50 <accept4@GLIBC_2.10>
    11ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000011f0 <htons@plt>:
    11f0:	f3 0f 1e fa          	endbr64
    11f4:	ff 25 5e 2d 00 00    	jmp    QWORD PTR [rip+0x2d5e]        # 3f58 <htons@GLIBC_2.2.5>
    11fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001200 <printf@plt>:
    1200:	f3 0f 1e fa          	endbr64
    1204:	ff 25 56 2d 00 00    	jmp    QWORD PTR [rip+0x2d56]        # 3f60 <printf@GLIBC_2.2.5>
    120a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001210 <close@plt>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	ff 25 4e 2d 00 00    	jmp    QWORD PTR [rip+0x2d4e]        # 3f68 <close@GLIBC_2.2.5>
    121a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001220 <epoll_ctl@plt>:
    1220:	f3 0f 1e fa          	endbr64
    1224:	ff 25 46 2d 00 00    	jmp    QWORD PTR [rip+0x2d46]        # 3f70 <epoll_ctl@GLIBC_2.3.2>
    122a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001230 <read@plt>:
    1230:	f3 0f 1e fa          	endbr64
    1234:	ff 25 3e 2d 00 00    	jmp    QWORD PTR [rip+0x2d3e]        # 3f78 <read@GLIBC_2.2.5>
    123a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001240 <fprintf@plt>:
    1240:	f3 0f 1e fa          	endbr64
    1244:	ff 25 36 2d 00 00    	jmp    QWORD PTR [rip+0x2d36]        # 3f80 <fprintf@GLIBC_2.2.5>
    124a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001250 <inet_pton@plt>:
    1250:	f3 0f 1e fa          	endbr64
    1254:	ff 25 2e 2d 00 00    	jmp    QWORD PTR [rip+0x2d2e]        # 3f88 <inet_pton@GLIBC_2.2.5>
    125a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001260 <malloc@plt>:
    1260:	f3 0f 1e fa          	endbr64
    1264:	ff 25 26 2d 00 00    	jmp    QWORD PTR [rip+0x2d26]        # 3f90 <malloc@GLIBC_2.2.5>
    126a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001270 <listen@plt>:
    1270:	f3 0f 1e fa          	endbr64
    1274:	ff 25 1e 2d 00 00    	jmp    QWORD PTR [rip+0x2d1e]        # 3f98 <listen@GLIBC_2.2.5>
    127a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001280 <epoll_wait@plt>:
    1280:	f3 0f 1e fa          	endbr64
    1284:	ff 25 16 2d 00 00    	jmp    QWORD PTR [rip+0x2d16]        # 3fa0 <epoll_wait@GLIBC_2.3.2>
    128a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001290 <bind@plt>:
    1290:	f3 0f 1e fa          	endbr64
    1294:	ff 25 0e 2d 00 00    	jmp    QWORD PTR [rip+0x2d0e]        # 3fa8 <bind@GLIBC_2.2.5>
    129a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000012a0 <perror@plt>:
    12a0:	f3 0f 1e fa          	endbr64
    12a4:	ff 25 06 2d 00 00    	jmp    QWORD PTR [rip+0x2d06]        # 3fb0 <perror@GLIBC_2.2.5>
    12aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000012b0 <atoi@plt>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	ff 25 fe 2c 00 00    	jmp    QWORD PTR [rip+0x2cfe]        # 3fb8 <atoi@GLIBC_2.2.5>
    12ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000012c0 <epoll_create1@plt>:
    12c0:	f3 0f 1e fa          	endbr64
    12c4:	ff 25 f6 2c 00 00    	jmp    QWORD PTR [rip+0x2cf6]        # 3fc0 <epoll_create1@GLIBC_2.9>
    12ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000012d0 <socket@plt>:
    12d0:	f3 0f 1e fa          	endbr64
    12d4:	ff 25 ee 2c 00 00    	jmp    QWORD PTR [rip+0x2cee]        # 3fc8 <socket@GLIBC_2.2.5>
    12da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000012e0 <_start>:
    12e0:	f3 0f 1e fa          	endbr64
    12e4:	31 ed                	xor    ebp,ebp
    12e6:	49 89 d1             	mov    r9,rdx
    12e9:	5e                   	pop    rsi
    12ea:	48 89 e2             	mov    rdx,rsp
    12ed:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    12f1:	50                   	push   rax
    12f2:	54                   	push   rsp
    12f3:	45 31 c0             	xor    r8d,r8d
    12f6:	31 c9                	xor    ecx,ecx
    12f8:	48 8d 3d ef 01 00 00 	lea    rdi,[rip+0x1ef]        # 14ee <main>
    12ff:	ff 15 cb 2c 00 00    	call   QWORD PTR [rip+0x2ccb]        # 3fd0 <__libc_start_main@GLIBC_2.34>
    1305:	f4                   	hlt
    1306:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    130d:	00 00 00 

0000000000001310 <deregister_tm_clones>:
    1310:	48 8d 3d f9 2c 00 00 	lea    rdi,[rip+0x2cf9]        # 4010 <__TMC_END__>
    1317:	48 8d 05 f2 2c 00 00 	lea    rax,[rip+0x2cf2]        # 4010 <__TMC_END__>
    131e:	48 39 f8             	cmp    rax,rdi
    1321:	74 15                	je     1338 <deregister_tm_clones+0x28>
    1323:	48 8b 05 ae 2c 00 00 	mov    rax,QWORD PTR [rip+0x2cae]        # 3fd8 <_ITM_deregisterTMCloneTable@Base>
    132a:	48 85 c0             	test   rax,rax
    132d:	74 09                	je     1338 <deregister_tm_clones+0x28>
    132f:	ff e0                	jmp    rax
    1331:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1338:	c3                   	ret
    1339:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001340 <register_tm_clones>:
    1340:	48 8d 3d c9 2c 00 00 	lea    rdi,[rip+0x2cc9]        # 4010 <__TMC_END__>
    1347:	48 8d 35 c2 2c 00 00 	lea    rsi,[rip+0x2cc2]        # 4010 <__TMC_END__>
    134e:	48 29 fe             	sub    rsi,rdi
    1351:	48 89 f0             	mov    rax,rsi
    1354:	48 c1 ee 3f          	shr    rsi,0x3f
    1358:	48 c1 f8 03          	sar    rax,0x3
    135c:	48 01 c6             	add    rsi,rax
    135f:	48 d1 fe             	sar    rsi,1
    1362:	74 14                	je     1378 <register_tm_clones+0x38>
    1364:	48 8b 05 7d 2c 00 00 	mov    rax,QWORD PTR [rip+0x2c7d]        # 3fe8 <_ITM_registerTMCloneTable@Base>
    136b:	48 85 c0             	test   rax,rax
    136e:	74 08                	je     1378 <register_tm_clones+0x38>
    1370:	ff e0                	jmp    rax
    1372:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1378:	c3                   	ret
    1379:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001380 <__do_global_dtors_aux>:
    1380:	f3 0f 1e fa          	endbr64
    1384:	80 3d 85 2c 00 00 00 	cmp    BYTE PTR [rip+0x2c85],0x0        # 4010 <__TMC_END__>
    138b:	75 2b                	jne    13b8 <__do_global_dtors_aux+0x38>
    138d:	55                   	push   rbp
    138e:	48 83 3d 5a 2c 00 00 	cmp    QWORD PTR [rip+0x2c5a],0x0        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    1395:	00 
    1396:	48 89 e5             	mov    rbp,rsp
    1399:	74 0c                	je     13a7 <__do_global_dtors_aux+0x27>
    139b:	48 8b 3d 66 2c 00 00 	mov    rdi,QWORD PTR [rip+0x2c66]        # 4008 <__dso_handle>
    13a2:	e8 d9 fd ff ff       	call   1180 <__cxa_finalize@plt>
    13a7:	e8 64 ff ff ff       	call   1310 <deregister_tm_clones>
    13ac:	c6 05 5d 2c 00 00 01 	mov    BYTE PTR [rip+0x2c5d],0x1        # 4010 <__TMC_END__>
    13b3:	5d                   	pop    rbp
    13b4:	c3                   	ret
    13b5:	0f 1f 00             	nop    DWORD PTR [rax]
    13b8:	c3                   	ret
    13b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000013c0 <frame_dummy>:
    13c0:	f3 0f 1e fa          	endbr64
    13c4:	e9 77 ff ff ff       	jmp    1340 <register_tm_clones>

00000000000013c9 <create_listner>:
    13c9:	f3 0f 1e fa          	endbr64
    13cd:	55                   	push   rbp
    13ce:	48 89 e5             	mov    rbp,rsp
    13d1:	48 83 ec 40          	sub    rsp,0x40
    13d5:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    13d9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    13e0:	00 00 
    13e2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    13e6:	31 c0                	xor    eax,eax
    13e8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    13ec:	48 89 c7             	mov    rdi,rax
    13ef:	e8 bc fe ff ff       	call   12b0 <atoi@plt>
    13f4:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
    13f7:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    13fe:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    1405:	48 8d 45 d4          	lea    rax,[rbp-0x2c]
    1409:	48 89 c2             	mov    rdx,rax
    140c:	48 8d 05 f1 0b 00 00 	lea    rax,[rip+0xbf1]        # 2004 <_IO_stdin_used+0x4>
    1413:	48 89 c6             	mov    rsi,rax
    1416:	bf 02 00 00 00       	mov    edi,0x2
    141b:	e8 30 fe ff ff       	call   1250 <inet_pton@plt>
    1420:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    1427:	00 
    1428:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
    142f:	00 
    1430:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    1436:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    1439:	0f b7 c0             	movzx  eax,ax
    143c:	89 c7                	mov    edi,eax
    143e:	e8 ad fd ff ff       	call   11f0 <htons@plt>
    1443:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    1447:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    144a:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    144d:	ba 00 00 00 00       	mov    edx,0x0
    1452:	be 01 08 00 00       	mov    esi,0x801
    1457:	bf 02 00 00 00       	mov    edi,0x2
    145c:	e8 6f fe ff ff       	call   12d0 <socket@plt>
    1461:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    1464:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
    1468:	79 0f                	jns    1479 <create_listner+0xb0>
    146a:	48 8d 05 9d 0b 00 00 	lea    rax,[rip+0xb9d]        # 200e <_IO_stdin_used+0xe>
    1471:	48 89 c7             	mov    rdi,rax
    1474:	e8 27 fe ff ff       	call   12a0 <perror@plt>
    1479:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    147d:	48 89 c1             	mov    rcx,rax
    1480:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    1483:	ba 10 00 00 00       	mov    edx,0x10
    1488:	48 89 ce             	mov    rsi,rcx
    148b:	89 c7                	mov    edi,eax
    148d:	e8 fe fd ff ff       	call   1290 <bind@plt>
    1492:	85 c0                	test   eax,eax
    1494:	79 16                	jns    14ac <create_listner+0xe3>
    1496:	48 8d 05 79 0b 00 00 	lea    rax,[rip+0xb79]        # 2016 <_IO_stdin_used+0x16>
    149d:	48 89 c7             	mov    rdi,rax
    14a0:	e8 fb fd ff ff       	call   12a0 <perror@plt>
    14a5:	b8 ff ff ff ff       	mov    eax,0xffffffff
    14aa:	eb 2c                	jmp    14d8 <create_listner+0x10f>
    14ac:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    14af:	be 00 10 00 00       	mov    esi,0x1000
    14b4:	89 c7                	mov    edi,eax
    14b6:	e8 b5 fd ff ff       	call   1270 <listen@plt>
    14bb:	85 c0                	test   eax,eax
    14bd:	79 16                	jns    14d5 <create_listner+0x10c>
    14bf:	48 8d 05 56 0b 00 00 	lea    rax,[rip+0xb56]        # 201c <_IO_stdin_used+0x1c>
    14c6:	48 89 c7             	mov    rdi,rax
    14c9:	e8 d2 fd ff ff       	call   12a0 <perror@plt>
    14ce:	b8 ff ff ff ff       	mov    eax,0xffffffff
    14d3:	eb 03                	jmp    14d8 <create_listner+0x10f>
    14d5:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    14d8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    14dc:	64 48 2b 14 25 28 00 	sub    rdx,QWORD PTR fs:0x28
    14e3:	00 00 
    14e5:	74 05                	je     14ec <create_listner+0x123>
    14e7:	e8 e4 fc ff ff       	call   11d0 <__stack_chk_fail@plt>
    14ec:	c9                   	leave
    14ed:	c3                   	ret

00000000000014ee <main>:
    14ee:	f3 0f 1e fa          	endbr64
    14f2:	55                   	push   rbp
    14f3:	48 89 e5             	mov    rbp,rsp
    14f6:	48 81 ec 40 04 00 00 	sub    rsp,0x440
    14fd:	89 bd cc fb ff ff    	mov    DWORD PTR [rbp-0x434],edi
    1503:	48 89 b5 c0 fb ff ff 	mov    QWORD PTR [rbp-0x440],rsi
    150a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1511:	00 00 
    1513:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1517:	31 c0                	xor    eax,eax
    1519:	83 bd cc fb ff ff 02 	cmp    DWORD PTR [rbp-0x434],0x2
    1520:	74 35                	je     1557 <main+0x69>
    1522:	48 8b 85 c0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x440]
    1529:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    152c:	48 8b 05 c5 2a 00 00 	mov    rax,QWORD PTR [rip+0x2ac5]        # 3ff8 <stderr@GLIBC_2.2.5>
    1533:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1536:	48 8d 0d e7 0a 00 00 	lea    rcx,[rip+0xae7]        # 2024 <_IO_stdin_used+0x24>
    153d:	48 89 ce             	mov    rsi,rcx
    1540:	48 89 c7             	mov    rdi,rax
    1543:	b8 00 00 00 00       	mov    eax,0x0
    1548:	e8 f3 fc ff ff       	call   1240 <fprintf@plt>
    154d:	b8 01 00 00 00       	mov    eax,0x1
    1552:	e9 b7 02 00 00       	jmp    180e <main+0x320>
    1557:	48 8b 85 c0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x440]
    155e:	48 83 c0 08          	add    rax,0x8
    1562:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1565:	48 89 c7             	mov    rdi,rax
    1568:	e8 5c fe ff ff       	call   13c9 <create_listner>
    156d:	89 85 d0 fb ff ff    	mov    DWORD PTR [rbp-0x430],eax
    1573:	83 bd d0 fb ff ff 00 	cmp    DWORD PTR [rbp-0x430],0x0
    157a:	79 0a                	jns    1586 <main+0x98>
    157c:	b8 01 00 00 00       	mov    eax,0x1
    1581:	e9 88 02 00 00       	jmp    180e <main+0x320>
    1586:	bf 00 00 08 00       	mov    edi,0x80000
    158b:	e8 30 fd ff ff       	call   12c0 <epoll_create1@plt>
    1590:	89 85 d4 fb ff ff    	mov    DWORD PTR [rbp-0x42c],eax
    1596:	83 bd d4 fb ff ff 00 	cmp    DWORD PTR [rbp-0x42c],0x0
    159d:	79 19                	jns    15b8 <main+0xca>
    159f:	48 8d 05 90 0a 00 00 	lea    rax,[rip+0xa90]        # 2036 <_IO_stdin_used+0x36>
    15a6:	48 89 c7             	mov    rdi,rax
    15a9:	e8 f2 fc ff ff       	call   12a0 <perror@plt>
    15ae:	b8 01 00 00 00       	mov    eax,0x1
    15b3:	e9 56 02 00 00       	jmp    180e <main+0x320>
    15b8:	48 c7 85 e4 fb ff ff 	mov    QWORD PTR [rbp-0x41c],0x0
    15bf:	00 00 00 00 
    15c3:	c7 85 ec fb ff ff 00 	mov    DWORD PTR [rbp-0x414],0x0
    15ca:	00 00 00 
    15cd:	c7 85 e4 fb ff ff 01 	mov    DWORD PTR [rbp-0x41c],0x80000001
    15d4:	00 00 80 
    15d7:	8b 85 d0 fb ff ff    	mov    eax,DWORD PTR [rbp-0x430]
    15dd:	89 85 e8 fb ff ff    	mov    DWORD PTR [rbp-0x418],eax
    15e3:	48 8d 8d e4 fb ff ff 	lea    rcx,[rbp-0x41c]
    15ea:	8b 95 d0 fb ff ff    	mov    edx,DWORD PTR [rbp-0x430]
    15f0:	8b 85 d4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x42c]
    15f6:	be 01 00 00 00       	mov    esi,0x1
    15fb:	89 c7                	mov    edi,eax
    15fd:	e8 1e fc ff ff       	call   1220 <epoll_ctl@plt>
    1602:	c7 85 d8 fb ff ff ff 	mov    DWORD PTR [rbp-0x428],0xffffffff
    1609:	ff ff ff 
    160c:	e8 8f fb ff ff       	call   11a0 <__errno_location@plt>
    1611:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    1617:	8b 95 d8 fb ff ff    	mov    edx,DWORD PTR [rbp-0x428]
    161d:	48 8d b5 e4 fb ff ff 	lea    rsi,[rbp-0x41c]
    1624:	8b 85 d4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x42c]
    162a:	89 d1                	mov    ecx,edx
    162c:	ba 01 00 00 00       	mov    edx,0x1
    1631:	89 c7                	mov    edi,eax
    1633:	e8 48 fc ff ff       	call   1280 <epoll_wait@plt>
    1638:	85 c0                	test   eax,eax
    163a:	79 20                	jns    165c <main+0x16e>
    163c:	e8 5f fb ff ff       	call   11a0 <__errno_location@plt>
    1641:	8b 00                	mov    eax,DWORD PTR [rax]
    1643:	83 f8 04             	cmp    eax,0x4
    1646:	75 14                	jne    165c <main+0x16e>
    1648:	48 8d 05 ee 09 00 00 	lea    rax,[rip+0x9ee]        # 203d <_IO_stdin_used+0x3d>
    164f:	48 89 c7             	mov    rdi,rax
    1652:	e8 49 fc ff ff       	call   12a0 <perror@plt>
    1657:	e9 ad 01 00 00       	jmp    1809 <main+0x31b>
    165c:	c7 85 dc fb ff ff 00 	mov    DWORD PTR [rbp-0x424],0x0
    1663:	00 00 00 
    1666:	8b 85 e8 fb ff ff    	mov    eax,DWORD PTR [rbp-0x418]
    166c:	39 85 d0 fb ff ff    	cmp    DWORD PTR [rbp-0x430],eax
    1672:	0f 85 95 00 00 00    	jne    170d <main+0x21f>
    1678:	be 00 00 00 00       	mov    esi,0x0
    167d:	8b 85 d0 fb ff ff    	mov    eax,DWORD PTR [rbp-0x430]
    1683:	b9 00 08 00 00       	mov    ecx,0x800
    1688:	ba 00 00 00 00       	mov    edx,0x0
    168d:	89 c7                	mov    edi,eax
    168f:	e8 4c fb ff ff       	call   11e0 <accept4@plt>
    1694:	89 85 dc fb ff ff    	mov    DWORD PTR [rbp-0x424],eax
    169a:	83 bd dc fb ff ff 00 	cmp    DWORD PTR [rbp-0x424],0x0
    16a1:	79 14                	jns    16b7 <main+0x1c9>
    16a3:	48 8d 05 9a 09 00 00 	lea    rax,[rip+0x99a]        # 2044 <_IO_stdin_used+0x44>
    16aa:	48 89 c7             	mov    rdi,rax
    16ad:	e8 ee fb ff ff       	call   12a0 <perror@plt>
    16b2:	e9 52 01 00 00       	jmp    1809 <main+0x31b>
    16b7:	8b 85 dc fb ff ff    	mov    eax,DWORD PTR [rbp-0x424]
    16bd:	89 c6                	mov    esi,eax
    16bf:	48 8d 05 89 09 00 00 	lea    rax,[rip+0x989]        # 204f <_IO_stdin_used+0x4f>
    16c6:	48 89 c7             	mov    rdi,rax
    16c9:	b8 00 00 00 00       	mov    eax,0x0
    16ce:	e8 2d fb ff ff       	call   1200 <printf@plt>
    16d3:	c7 85 e4 fb ff ff 05 	mov    DWORD PTR [rbp-0x41c],0x80000005
    16da:	00 00 80 
    16dd:	8b 85 dc fb ff ff    	mov    eax,DWORD PTR [rbp-0x424]
    16e3:	89 85 e8 fb ff ff    	mov    DWORD PTR [rbp-0x418],eax
    16e9:	48 8d 8d e4 fb ff ff 	lea    rcx,[rbp-0x41c]
    16f0:	8b 95 dc fb ff ff    	mov    edx,DWORD PTR [rbp-0x424]
    16f6:	8b 85 d4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x42c]
    16fc:	be 01 00 00 00       	mov    esi,0x1
    1701:	89 c7                	mov    edi,eax
    1703:	e8 18 fb ff ff       	call   1220 <epoll_ctl@plt>
    1708:	e9 f5 fe ff ff       	jmp    1602 <main+0x114>
    170d:	48 8d 95 f0 fb ff ff 	lea    rdx,[rbp-0x410]
    1714:	b8 00 00 00 00       	mov    eax,0x0
    1719:	b9 80 00 00 00       	mov    ecx,0x80
    171e:	48 89 d7             	mov    rdi,rdx
    1721:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    1724:	c7 85 e0 fb ff ff 00 	mov    DWORD PTR [rbp-0x420],0x0
    172b:	00 00 00 
    172e:	e9 9d 00 00 00       	jmp    17d0 <main+0x2e2>
    1733:	e8 68 fa ff ff       	call   11a0 <__errno_location@plt>
    1738:	8b 00                	mov    eax,DWORD PTR [rax]
    173a:	83 f8 0b             	cmp    eax,0xb
    173d:	75 19                	jne    1758 <main+0x26a>
    173f:	48 8d 05 17 09 00 00 	lea    rax,[rip+0x917]        # 205d <_IO_stdin_used+0x5d>
    1746:	48 89 c7             	mov    rdi,rax
    1749:	b8 00 00 00 00       	mov    eax,0x0
    174e:	e8 ad fa ff ff       	call   1200 <printf@plt>
    1753:	e9 b1 00 00 00       	jmp    1809 <main+0x31b>
    1758:	e8 43 fa ff ff       	call   11a0 <__errno_location@plt>
    175d:	8b 00                	mov    eax,DWORD PTR [rax]
    175f:	83 f8 04             	cmp    eax,0x4
    1762:	75 11                	jne    1775 <main+0x287>
    1764:	48 8d 05 fa 08 00 00 	lea    rax,[rip+0x8fa]        # 2065 <_IO_stdin_used+0x65>
    176b:	48 89 c7             	mov    rdi,rax
    176e:	e8 3d fa ff ff       	call   11b0 <puts@plt>
    1773:	eb 5b                	jmp    17d0 <main+0x2e2>
    1775:	83 bd e0 fb ff ff 00 	cmp    DWORD PTR [rbp-0x420],0x0
    177c:	75 0f                	jne    178d <main+0x29f>
    177e:	8b 85 e8 fb ff ff    	mov    eax,DWORD PTR [rbp-0x418]
    1784:	89 c7                	mov    edi,eax
    1786:	e8 85 fa ff ff       	call   1210 <close@plt>
    178b:	eb 43                	jmp    17d0 <main+0x2e2>
    178d:	8b 85 e0 fb ff ff    	mov    eax,DWORD PTR [rbp-0x420]
    1793:	48 63 d0             	movsxd rdx,eax
    1796:	8b 85 e8 fb ff ff    	mov    eax,DWORD PTR [rbp-0x418]
    179c:	48 8d 8d f0 fb ff ff 	lea    rcx,[rbp-0x410]
    17a3:	48 89 ce             	mov    rsi,rcx
    17a6:	89 c7                	mov    edi,eax
    17a8:	e8 13 fa ff ff       	call   11c0 <write@plt>
    17ad:	8b 85 e8 fb ff ff    	mov    eax,DWORD PTR [rbp-0x418]
    17b3:	48 8d 95 f0 fb ff ff 	lea    rdx,[rbp-0x410]
    17ba:	89 c6                	mov    esi,eax
    17bc:	48 8d 05 a8 08 00 00 	lea    rax,[rip+0x8a8]        # 206b <_IO_stdin_used+0x6b>
    17c3:	48 89 c7             	mov    rdi,rax
    17c6:	b8 00 00 00 00       	mov    eax,0x0
    17cb:	e8 30 fa ff ff       	call   1200 <printf@plt>
    17d0:	8b 85 e8 fb ff ff    	mov    eax,DWORD PTR [rbp-0x418]
    17d6:	48 8d 8d f0 fb ff ff 	lea    rcx,[rbp-0x410]
    17dd:	ba 00 04 00 00       	mov    edx,0x400
    17e2:	48 89 ce             	mov    rsi,rcx
    17e5:	89 c7                	mov    edi,eax
    17e7:	e8 44 fa ff ff       	call   1230 <read@plt>
    17ec:	48 f7 d0             	not    rax
    17ef:	48 c1 e8 3f          	shr    rax,0x3f
    17f3:	0f b6 c0             	movzx  eax,al
    17f6:	89 85 e0 fb ff ff    	mov    DWORD PTR [rbp-0x420],eax
    17fc:	83 bd e0 fb ff ff 00 	cmp    DWORD PTR [rbp-0x420],0x0
    1803:	0f 85 2a ff ff ff    	jne    1733 <main+0x245>
    1809:	e9 f4 fd ff ff       	jmp    1602 <main+0x114>
    180e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    1812:	64 48 2b 14 25 28 00 	sub    rdx,QWORD PTR fs:0x28
    1819:	00 00 
    181b:	74 05                	je     1822 <main+0x334>
    181d:	e8 ae f9 ff ff       	call   11d0 <__stack_chk_fail@plt>
    1822:	c9                   	leave
    1823:	c3                   	ret

0000000000001824 <newQueue>:
    1824:	f3 0f 1e fa          	endbr64
    1828:	55                   	push   rbp
    1829:	48 89 e5             	mov    rbp,rsp
    182c:	48 83 ec 20          	sub    rsp,0x20
    1830:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1834:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1838:	48 c1 e0 03          	shl    rax,0x3
    183c:	48 89 c7             	mov    rdi,rax
    183f:	e8 1c fa ff ff       	call   1260 <malloc@plt>
    1844:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    1848:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
    184d:	75 0a                	jne    1859 <newQueue+0x35>
    184f:	b8 00 00 00 00       	mov    eax,0x0
    1854:	e9 83 00 00 00       	jmp    18dc <newQueue+0xb8>
    1859:	bf 28 00 00 00       	mov    edi,0x28
    185e:	e8 fd f9 ff ff       	call   1260 <malloc@plt>
    1863:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1867:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    186c:	75 13                	jne    1881 <newQueue+0x5d>
    186e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1872:	48 89 c7             	mov    rdi,rax
    1875:	e8 16 f9 ff ff       	call   1190 <free@plt>
    187a:	b8 00 00 00 00       	mov    eax,0x0
    187f:	eb 5b                	jmp    18dc <newQueue+0xb8>
    1881:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    1885:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1889:	48 89 10             	mov    QWORD PTR [rax],rdx
    188c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1890:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    1897:	00 
    1898:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    189c:	48 01 d0             	add    rax,rdx
    189f:	48 89 c2             	mov    rdx,rax
    18a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18a6:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    18aa:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    18ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18b2:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    18b6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    18ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18be:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    18c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18c6:	c7 40 20 00 00 00 00 	mov    DWORD PTR [rax+0x20],0x0
    18cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18d1:	c7 40 24 ff ff ff ff 	mov    DWORD PTR [rax+0x24],0xffffffff
    18d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18dc:	c9                   	leave
    18dd:	c3                   	ret

00000000000018de <deleteQueue>:
    18de:	f3 0f 1e fa          	endbr64
    18e2:	55                   	push   rbp
    18e3:	48 89 e5             	mov    rbp,rsp
    18e6:	48 83 ec 10          	sub    rsp,0x10
    18ea:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    18ee:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    18f3:	74 1d                	je     1912 <deleteQueue+0x34>
    18f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    18f9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    18fc:	48 89 c7             	mov    rdi,rax
    18ff:	e8 8c f8 ff ff       	call   1190 <free@plt>
    1904:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1908:	48 89 c7             	mov    rdi,rax
    190b:	e8 80 f8 ff ff       	call   1190 <free@plt>
    1910:	eb 01                	jmp    1913 <deleteQueue+0x35>
    1912:	90                   	nop
    1913:	c9                   	leave
    1914:	c3                   	ret

0000000000001915 <queue_push>:
    1915:	f3 0f 1e fa          	endbr64
    1919:	55                   	push   rbp
    191a:	48 89 e5             	mov    rbp,rsp
    191d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1921:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    1925:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    192a:	75 0a                	jne    1936 <queue_push+0x21>
    192c:	b8 ff ff ff ff       	mov    eax,0xffffffff
    1931:	e9 91 00 00 00       	jmp    19c7 <queue_push+0xb2>
    1936:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    193a:	48 8b 50 18          	mov    rdx,QWORD PTR [rax+0x18]
    193e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1942:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    1946:	48 39 c2             	cmp    rdx,rax
    1949:	75 12                	jne    195d <queue_push+0x48>
    194b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    194f:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    1952:	85 c0                	test   eax,eax
    1954:	74 07                	je     195d <queue_push+0x48>
    1956:	b8 fd ff ff ff       	mov    eax,0xfffffffd
    195b:	eb 6a                	jmp    19c7 <queue_push+0xb2>
    195d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1961:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    1965:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    1969:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    196d:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    1971:	48 83 c0 08          	add    rax,0x8
    1975:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1979:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    197d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    1981:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
    1985:	72 0b                	jb     1992 <queue_push+0x7d>
    1987:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    198b:	48 8b 00             	mov    rax,QWORD PTR [rax]
    198e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1992:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1996:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    199a:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
    199e:	75 0b                	jne    19ab <queue_push+0x96>
    19a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    19a4:	c7 40 20 ff ff ff ff 	mov    DWORD PTR [rax+0x20],0xffffffff
    19ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    19af:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    19b3:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
    19b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    19bb:	c7 40 24 00 00 00 00 	mov    DWORD PTR [rax+0x24],0x0
    19c2:	b8 00 00 00 00       	mov    eax,0x0
    19c7:	5d                   	pop    rbp
    19c8:	c3                   	ret

00000000000019c9 <queue_pop>:
    19c9:	f3 0f 1e fa          	endbr64
    19cd:	55                   	push   rbp
    19ce:	48 89 e5             	mov    rbp,rsp
    19d1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    19d5:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    19d9:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
    19de:	75 0a                	jne    19ea <queue_pop+0x21>
    19e0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    19e5:	e9 aa 00 00 00       	jmp    1a94 <queue_pop+0xcb>
    19ea:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    19ef:	75 0a                	jne    19fb <queue_pop+0x32>
    19f1:	b8 ff ff ff ff       	mov    eax,0xffffffff
    19f6:	e9 99 00 00 00       	jmp    1a94 <queue_pop+0xcb>
    19fb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    19ff:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    1a03:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a07:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    1a0b:	48 39 c2             	cmp    rdx,rax
    1a0e:	75 25                	jne    1a35 <queue_pop+0x6c>
    1a10:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a14:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    1a17:	85 c0                	test   eax,eax
    1a19:	75 1a                	jne    1a35 <queue_pop+0x6c>
    1a1b:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    1a22:	00 
    1a23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a27:	c7 40 24 ff ff ff ff 	mov    DWORD PTR [rax+0x24],0xffffffff
    1a2e:	b8 fe ff ff ff       	mov    eax,0xfffffffe
    1a33:	eb 5f                	jmp    1a94 <queue_pop+0xcb>
    1a35:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a39:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    1a3d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    1a41:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a45:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    1a49:	48 83 c0 08          	add    rax,0x8
    1a4d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1a51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a55:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    1a59:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
    1a5d:	72 0b                	jb     1a6a <queue_pop+0xa1>
    1a5f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a63:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1a66:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1a6a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a6e:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
    1a72:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
    1a76:	75 0b                	jne    1a83 <queue_pop+0xba>
    1a78:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a7c:	c7 40 20 00 00 00 00 	mov    DWORD PTR [rax+0x20],0x0
    1a83:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1a87:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    1a8b:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    1a8f:	b8 00 00 00 00       	mov    eax,0x0
    1a94:	5d                   	pop    rbp
    1a95:	c3                   	ret

0000000000001a96 <threadpool_create>:
    1a96:	f3 0f 1e fa          	endbr64
    1a9a:	55                   	push   rbp
    1a9b:	48 89 e5             	mov    rbp,rsp
    1a9e:	48 83 ec 30          	sub    rsp,0x30
    1aa2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    1aa6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1aad:	00 00 
    1aaf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1ab3:	31 c0                	xor    eax,eax
    1ab5:	48 89 e0             	mov    rax,rsp
    1ab8:	48 89 c6             	mov    rsi,rax
    1abb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1abf:	c7 00 10 00 00 00    	mov    DWORD PTR [rax],0x10
    1ac5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1ac9:	8b 00                	mov    eax,DWORD PTR [rax]
    1acb:	48 63 d0             	movsxd rdx,eax
    1ace:	48 83 ea 01          	sub    rdx,0x1
    1ad2:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    1ad6:	48 98                	cdqe
    1ad8:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    1adf:	00 
    1ae0:	b8 10 00 00 00       	mov    eax,0x10
    1ae5:	48 83 e8 01          	sub    rax,0x1
    1ae9:	48 01 d0             	add    rax,rdx
    1aec:	bf 10 00 00 00       	mov    edi,0x10
    1af1:	ba 00 00 00 00       	mov    edx,0x0
    1af6:	48 f7 f7             	div    rdi
    1af9:	48 6b c0 10          	imul   rax,rax,0x10
    1afd:	48 89 c1             	mov    rcx,rax
    1b00:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    1b07:	48 89 e2             	mov    rdx,rsp
    1b0a:	48 29 ca             	sub    rdx,rcx
    1b0d:	48 39 d4             	cmp    rsp,rdx
    1b10:	74 12                	je     1b24 <threadpool_create+0x8e>
    1b12:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    1b19:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    1b20:	00 00 
    1b22:	eb e9                	jmp    1b0d <threadpool_create+0x77>
    1b24:	48 89 c2             	mov    rdx,rax
    1b27:	81 e2 ff 0f 00 00    	and    edx,0xfff
    1b2d:	48 29 d4             	sub    rsp,rdx
    1b30:	48 89 c2             	mov    rdx,rax
    1b33:	81 e2 ff 0f 00 00    	and    edx,0xfff
    1b39:	48 85 d2             	test   rdx,rdx
    1b3c:	74 10                	je     1b4e <threadpool_create+0xb8>
    1b3e:	25 ff 0f 00 00       	and    eax,0xfff
    1b43:	48 83 e8 08          	sub    rax,0x8
    1b47:	48 01 e0             	add    rax,rsp
    1b4a:	48 83 08 00          	or     QWORD PTR [rax],0x0
    1b4e:	48 89 e0             	mov    rax,rsp
    1b51:	48 83 c0 07          	add    rax,0x7
    1b55:	48 c1 e8 03          	shr    rax,0x3
    1b59:	48 c1 e0 03          	shl    rax,0x3
    1b5d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    1b61:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    1b68:	eb 04                	jmp    1b6e <threadpool_create+0xd8>
    1b6a:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    1b6e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    1b72:	8b 00                	mov    eax,DWORD PTR [rax]
    1b74:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    1b77:	7c f1                	jl     1b6a <threadpool_create+0xd4>
    1b79:	48 89 f4             	mov    rsp,rsi
    1b7c:	90                   	nop
    1b7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1b81:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1b88:	00 00 
    1b8a:	74 05                	je     1b91 <threadpool_create+0xfb>
    1b8c:	e8 3f f6 ff ff       	call   11d0 <__stack_chk_fail@plt>
    1b91:	c9                   	leave
    1b92:	c3                   	ret

0000000000001b93 <threadpool_get_free_thread>:
    1b93:	f3 0f 1e fa          	endbr64
    1b97:	55                   	push   rbp
    1b98:	48 89 e5             	mov    rbp,rsp
    1b9b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1b9f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    1ba6:	eb 24                	jmp    1bcc <threadpool_get_free_thread+0x39>
    1ba8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1bac:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    1bb0:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    1bb3:	48 63 d2             	movsxd rdx,edx
    1bb6:	48 c1 e2 02          	shl    rdx,0x2
    1bba:	48 01 d0             	add    rax,rdx
    1bbd:	8b 00                	mov    eax,DWORD PTR [rax]
    1bbf:	85 c0                	test   eax,eax
    1bc1:	75 05                	jne    1bc8 <threadpool_get_free_thread+0x35>
    1bc3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1bc6:	eb 14                	jmp    1bdc <threadpool_get_free_thread+0x49>
    1bc8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    1bcc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1bd0:	8b 00                	mov    eax,DWORD PTR [rax]
    1bd2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    1bd5:	7c d1                	jl     1ba8 <threadpool_get_free_thread+0x15>
    1bd7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    1bdc:	5d                   	pop    rbp
    1bdd:	c3                   	ret

0000000000001bde <threadpool_add_task>:
    1bde:	f3 0f 1e fa          	endbr64
    1be2:	55                   	push   rbp
    1be3:	48 89 e5             	mov    rbp,rsp
    1be6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1bea:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    1bee:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    1bf2:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    1bf9:	eb 3a                	jmp    1c35 <threadpool_add_task+0x57>
    1bfb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1bff:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    1c03:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    1c06:	48 63 d2             	movsxd rdx,edx
    1c09:	48 c1 e2 02          	shl    rdx,0x2
    1c0d:	48 01 d0             	add    rax,rdx
    1c10:	8b 00                	mov    eax,DWORD PTR [rax]
    1c12:	85 c0                	test   eax,eax
    1c14:	75 1b                	jne    1c31 <threadpool_add_task+0x53>
    1c16:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1c1a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    1c1e:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    1c21:	48 63 d2             	movsxd rdx,edx
    1c24:	48 c1 e2 02          	shl    rdx,0x2
    1c28:	48 01 d0             	add    rax,rdx
    1c2b:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
    1c31:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    1c35:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1c39:	8b 00                	mov    eax,DWORD PTR [rax]
    1c3b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    1c3e:	7c bb                	jl     1bfb <threadpool_add_task+0x1d>
    1c40:	90                   	nop
    1c41:	90                   	nop
    1c42:	5d                   	pop    rbp
    1c43:	c3                   	ret

0000000000001c44 <threadpool_handler>:
    1c44:	f3 0f 1e fa          	endbr64
    1c48:	55                   	push   rbp
    1c49:	48 89 e5             	mov    rbp,rsp
    1c4c:	48 83 ec 20          	sub    rsp,0x20
    1c50:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1c54:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    1c58:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    1c5c:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    1c5f:	85 c0                	test   eax,eax
    1c61:	75 52                	jne    1cb5 <threadpool_handler+0x71>
    1c63:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [rbp-0xc],0xffffffff
    1c6a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1c6e:	48 89 c7             	mov    rdi,rax
    1c71:	e8 1d ff ff ff       	call   1b93 <threadpool_get_free_thread>
    1c76:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    1c79:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    1c7d:	74 36                	je     1cb5 <threadpool_handler+0x71>
    1c7f:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
    1c86:	00 
    1c87:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    1c8b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    1c8f:	48 89 d6             	mov    rsi,rdx
    1c92:	48 89 c7             	mov    rdi,rax
    1c95:	e8 2f fd ff ff       	call   19c9 <queue_pop>
    1c9a:	85 c0                	test   eax,eax
    1c9c:	75 17                	jne    1cb5 <threadpool_handler+0x71>
    1c9e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    1ca2:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    1ca6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1caa:	48 89 ce             	mov    rsi,rcx
    1cad:	48 89 c7             	mov    rdi,rax
    1cb0:	e8 29 ff ff ff       	call   1bde <threadpool_add_task>
    1cb5:	90                   	nop
    1cb6:	c9                   	leave
    1cb7:	c3                   	ret

Disassembly of section .fini:

0000000000001cb8 <_fini>:
    1cb8:	f3 0f 1e fa          	endbr64
    1cbc:	48 83 ec 08          	sub    rsp,0x8
    1cc0:	48 83 c4 08          	add    rsp,0x8
    1cc4:	c3                   	ret

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	31 32                	xor    DWORD PTR [rdx],esi
    2006:	37                   	(bad)
    2007:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    200a:	30 2e                	xor    BYTE PTR [rsi],ch
    200c:	31 00                	xor    DWORD PTR [rax],eax
    200e:	73 6f                	jae    207f <_IO_stdin_used+0x7f>
    2010:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    2013:	74 0a                	je     201f <_IO_stdin_used+0x1f>
    2015:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
    2018:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2019:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    201c:	6c                   	ins    BYTE PTR es:[rdi],dx
    201d:	69 73 74 65 6e 0a 00 	imul   esi,DWORD PTR [rbx+0x74],0xa6e65
    2024:	55                   	push   rbp
    2025:	53                   	push   rbx
    2026:	41                   	rex.B
    2027:	47                   	rex.RXB
    2028:	45 20 25 73 20 53 45 	and    BYTE PTR [rip+0x45532073],r12b        # 455340a2 <_end+0x4553008a>
    202f:	52                   	push   rdx
    2030:	56                   	push   rsi
    2031:	49                   	rex.WB
    2032:	43                   	rex.XB
    2033:	45 0a 00             	or     r8b,BYTE PTR [r8]
    2036:	65 70 6f             	gs jo  20a8 <__GNU_EH_FRAME_HDR+0x28>
    2039:	6c                   	ins    BYTE PTR es:[rdi],dx
    203a:	6c                   	ins    BYTE PTR es:[rdi],dx
    203b:	0a 00                	or     al,BYTE PTR [rax]
    203d:	73 69                	jae    20a8 <__GNU_EH_FRAME_HDR+0x28>
    203f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2041:	61                   	(bad)
    2042:	6c                   	ins    BYTE PTR es:[rdi],dx
    2043:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    2046:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2047:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2048:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    204d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    204e:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    2051:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2052:	20 6e 75             	and    BYTE PTR [rsi+0x75],ch
    2055:	6d                   	ins    DWORD PTR es:[rdi],dx
    2056:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64457c <_end+0xa640564>
    205c:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    205f:	61                   	(bad)
    2060:	64 61                	fs (bad)
    2062:	6c                   	ins    BYTE PTR es:[rdi],dx
    2063:	6c                   	ins    BYTE PTR es:[rdi],dx
    2064:	00 65 72             	add    BYTE PTR [rbp+0x72],ah
    2067:	72 6e                	jb     20d7 <__GNU_EH_FRAME_HDR+0x57>
    2069:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    206a:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    206d:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2070:	76 65                	jbe    20d7 <__GNU_EH_FRAME_HDR+0x57>
    2072:	64 20 6f 6e          	and    BYTE PTR fs:[rdi+0x6e],ch
    2076:	20 25 64 20 2d 20    	and    BYTE PTR [rip+0x202d2064],ah        # 202d40e0 <_end+0x202d00c8>
    207c:	25                   	.byte 0x25
    207d:	73 0a                	jae    2089 <__GNU_EH_FRAME_HDR+0x9>
	...

Disassembly of section .eh_frame_hdr:

0000000000002080 <__GNU_EH_FRAME_HDR>:
    2080:	01 1b                	add    DWORD PTR [rbx],ebx
    2082:	03 3b                	add    edi,DWORD PTR [rbx]
    2084:	7c 00                	jl     2086 <__GNU_EH_FRAME_HDR+0x6>
    2086:	00 00                	add    BYTE PTR [rax],al
    2088:	0e                   	(bad)
    2089:	00 00                	add    BYTE PTR [rax],al
    208b:	00 a0 ef ff ff b0    	add    BYTE PTR [rax-0x4f000011],ah
    2091:	00 00                	add    BYTE PTR [rax],al
    2093:	00 00                	add    BYTE PTR [rax],al
    2095:	f1                   	int1
    2096:	ff                   	(bad)
    2097:	ff                   	call   (bad)
    2098:	d8 00                	fadd   DWORD PTR [rax]
    209a:	00 00                	add    BYTE PTR [rax],al
    209c:	10 f1                	adc    cl,dh
    209e:	ff                   	(bad)
    209f:	ff f0                	push   rax
    20a1:	00 00                	add    BYTE PTR [rax],al
    20a3:	00 60 f2             	add    BYTE PTR [rax-0xe],ah
    20a6:	ff                   	(bad)
    20a7:	ff 98 00 00 00 49    	call   FWORD PTR [rax+0x49000000]
    20ad:	f3 ff                	repz (bad)
    20af:	ff 08                	dec    DWORD PTR [rax]
    20b1:	01 00                	add    DWORD PTR [rax],eax
    20b3:	00 6e f4             	add    BYTE PTR [rsi-0xc],ch
    20b6:	ff                   	(bad)
    20b7:	ff 28                	jmp    FWORD PTR [rax]
    20b9:	01 00                	add    DWORD PTR [rax],eax
    20bb:	00 a4 f7 ff ff 48 01 	add    BYTE PTR [rdi+rsi*8+0x148ffff],ah
    20c2:	00 00                	add    BYTE PTR [rax],al
    20c4:	5e                   	pop    rsi
    20c5:	f8                   	clc
    20c6:	ff                   	(bad)
    20c7:	ff 68 01             	jmp    FWORD PTR [rax+0x1]
    20ca:	00 00                	add    BYTE PTR [rax],al
    20cc:	95                   	xchg   ebp,eax
    20cd:	f8                   	clc
    20ce:	ff                   	(bad)
    20cf:	ff 88 01 00 00 49    	dec    DWORD PTR [rax+0x49000001]
    20d5:	f9                   	stc
    20d6:	ff                   	(bad)
    20d7:	ff a8 01 00 00 16    	jmp    FWORD PTR [rax+0x16000001]
    20dd:	fa                   	cli
    20de:	ff                   	(bad)
    20df:	ff c8                	dec    eax
    20e1:	01 00                	add    DWORD PTR [rax],eax
    20e3:	00 13                	add    BYTE PTR [rbx],dl
    20e5:	fb                   	sti
    20e6:	ff                   	(bad)
    20e7:	ff                   	jmp    (bad)
    20e8:	e8 01 00 00 5e       	call   5e0020ee <_end+0x5dffe0d6>
    20ed:	fb                   	sti
    20ee:	ff                   	(bad)
    20ef:	ff 08                	dec    DWORD PTR [rax]
    20f1:	02 00                	add    al,BYTE PTR [rax]
    20f3:	00 c4                	add    ah,al
    20f5:	fb                   	sti
    20f6:	ff                   	(bad)
    20f7:	ff 28                	jmp    FWORD PTR [rax]
    20f9:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .eh_frame:

0000000000002100 <__FRAME_END__-0x1c8>:
    2100:	14 00                	adc    al,0x0
    2102:	00 00                	add    BYTE PTR [rax],al
    2104:	00 00                	add    BYTE PTR [rax],al
    2106:	00 00                	add    BYTE PTR [rax],al
    2108:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    210b:	00 01                	add    BYTE PTR [rcx],al
    210d:	78 10                	js     211f <__GNU_EH_FRAME_HDR+0x9f>
    210f:	01 1b                	add    DWORD PTR [rbx],ebx
    2111:	0c 07                	or     al,0x7
    2113:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    2119:	00 00                	add    BYTE PTR [rax],al
    211b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    211e:	00 00                	add    BYTE PTR [rax],al
    2120:	c0 f1 ff             	shl    cl,0xff
    2123:	ff 26                	jmp    QWORD PTR [rsi]
    2125:	00 00                	add    BYTE PTR [rax],al
    2127:	00 00                	add    BYTE PTR [rax],al
    2129:	44 07                	rex.R (bad)
    212b:	10 00                	adc    BYTE PTR [rax],al
    212d:	00 00                	add    BYTE PTR [rax],al
    212f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    2132:	00 00                	add    BYTE PTR [rax],al
    2134:	34 00                	xor    al,0x0
    2136:	00 00                	add    BYTE PTR [rax],al
    2138:	e8 ee ff ff 60       	call   6100212b <_end+0x60ffe113>
    213d:	01 00                	add    DWORD PTR [rax],eax
    213f:	00 00                	add    BYTE PTR [rax],al
    2141:	0e                   	(bad)
    2142:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    2145:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    2148:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    214b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    214e:	1a 39                	sbb    bh,BYTE PTR [rcx]
    2150:	2a 33                	sub    dh,BYTE PTR [rbx]
    2152:	24 22                	and    al,0x22
    2154:	00 00                	add    BYTE PTR [rax],al
    2156:	00 00                	add    BYTE PTR [rax],al
    2158:	14 00                	adc    al,0x0
    215a:	00 00                	add    BYTE PTR [rax],al
    215c:	5c                   	pop    rsp
    215d:	00 00                	add    BYTE PTR [rax],al
    215f:	00 20                	add    BYTE PTR [rax],ah
    2161:	f0 ff                	lock (bad)
    2163:	ff 10                	call   QWORD PTR [rax]
	...
    216d:	00 00                	add    BYTE PTR [rax],al
    216f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    2172:	00 00                	add    BYTE PTR [rax],al
    2174:	74 00                	je     2176 <__GNU_EH_FRAME_HDR+0xf6>
    2176:	00 00                	add    BYTE PTR [rax],al
    2178:	18 f0                	sbb    al,dh
    217a:	ff                   	(bad)
    217b:	ff 50 01             	call   QWORD PTR [rax+0x1]
	...
    2186:	00 00                	add    BYTE PTR [rax],al
    2188:	1c 00                	sbb    al,0x0
    218a:	00 00                	add    BYTE PTR [rax],al
    218c:	8c 00                	mov    WORD PTR [rax],es
    218e:	00 00                	add    BYTE PTR [rax],al
    2190:	39 f2                	cmp    edx,esi
    2192:	ff                   	(bad)
    2193:	ff 25 01 00 00 00    	jmp    QWORD PTR [rip+0x1]        # 219a <__GNU_EH_FRAME_HDR+0x11a>
    2199:	45 0e                	rex.RB (bad)
    219b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    21a1:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    21a4:	0c 07                	or     al,0x7
    21a6:	08 00                	or     BYTE PTR [rax],al
    21a8:	1c 00                	sbb    al,0x0
    21aa:	00 00                	add    BYTE PTR [rax],al
    21ac:	ac                   	lods   al,BYTE PTR ds:[rsi]
    21ad:	00 00                	add    BYTE PTR [rax],al
    21af:	00 3e                	add    BYTE PTR [rsi],bh
    21b1:	f3 ff                	repz (bad)
    21b3:	ff 36                	push   QWORD PTR [rsi]
    21b5:	03 00                	add    eax,DWORD PTR [rax]
    21b7:	00 00                	add    BYTE PTR [rax],al
    21b9:	45 0e                	rex.RB (bad)
    21bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    21c1:	03 2d 03 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c03]        # 8072dca <_end+0x806edb2>
    21c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    21ca:	00 00                	add    BYTE PTR [rax],al
    21cc:	cc                   	int3
    21cd:	00 00                	add    BYTE PTR [rax],al
    21cf:	00 54 f6 ff          	add    BYTE PTR [rsi+rsi*8-0x1],dl
    21d3:	ff                   	(bad)
    21d4:	ba 00 00 00 00       	mov    edx,0x0
    21d9:	45 0e                	rex.RB (bad)
    21db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    21e1:	02 b1 0c 07 08 00    	add    dh,BYTE PTR [rcx+0x8070c]
    21e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    21ea:	00 00                	add    BYTE PTR [rax],al
    21ec:	ec                   	in     al,dx
    21ed:	00 00                	add    BYTE PTR [rax],al
    21ef:	00 ee                	add    dh,ch
    21f1:	f6 ff                	idiv   bh
    21f3:	ff 37                	push   QWORD PTR [rdi]
    21f5:	00 00                	add    BYTE PTR [rax],al
    21f7:	00 00                	add    BYTE PTR [rax],al
    21f9:	45 0e                	rex.RB (bad)
    21fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2201:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2202:	0c 07                	or     al,0x7
    2204:	08 00                	or     BYTE PTR [rax],al
    2206:	00 00                	add    BYTE PTR [rax],al
    2208:	1c 00                	sbb    al,0x0
    220a:	00 00                	add    BYTE PTR [rax],al
    220c:	0c 01                	or     al,0x1
    220e:	00 00                	add    BYTE PTR [rax],al
    2210:	05 f7 ff ff b4       	add    eax,0xb4fffff7
    2215:	00 00                	add    BYTE PTR [rax],al
    2217:	00 00                	add    BYTE PTR [rax],al
    2219:	45 0e                	rex.RB (bad)
    221b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2221:	02 ab 0c 07 08 00    	add    ch,BYTE PTR [rbx+0x8070c]
    2227:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    222a:	00 00                	add    BYTE PTR [rax],al
    222c:	2c 01                	sub    al,0x1
    222e:	00 00                	add    BYTE PTR [rax],al
    2230:	99                   	cdq
    2231:	f7 ff                	idiv   edi
    2233:	ff cd                	dec    ebp
    2235:	00 00                	add    BYTE PTR [rax],al
    2237:	00 00                	add    BYTE PTR [rax],al
    2239:	45 0e                	rex.RB (bad)
    223b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2241:	02 c4                	add    al,ah
    2243:	0c 07                	or     al,0x7
    2245:	08 00                	or     BYTE PTR [rax],al
    2247:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    224a:	00 00                	add    BYTE PTR [rax],al
    224c:	4c 01 00             	add    QWORD PTR [rax],r8
    224f:	00 46 f8             	add    BYTE PTR [rsi-0x8],al
    2252:	ff                   	(bad)
    2253:	ff                   	(bad)
    2254:	fd                   	std
    2255:	00 00                	add    BYTE PTR [rax],al
    2257:	00 00                	add    BYTE PTR [rax],al
    2259:	45 0e                	rex.RB (bad)
    225b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2261:	02 f4                	add    dh,ah
    2263:	0c 07                	or     al,0x7
    2265:	08 00                	or     BYTE PTR [rax],al
    2267:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    226a:	00 00                	add    BYTE PTR [rax],al
    226c:	6c                   	ins    BYTE PTR es:[rdi],dx
    226d:	01 00                	add    DWORD PTR [rax],eax
    226f:	00 23                	add    BYTE PTR [rbx],ah
    2271:	f9                   	stc
    2272:	ff                   	(bad)
    2273:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
    2276:	00 00                	add    BYTE PTR [rax],al
    2278:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    227b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2281:	02 42 0c             	add    al,BYTE PTR [rdx+0xc]
    2284:	07                   	(bad)
    2285:	08 00                	or     BYTE PTR [rax],al
    2287:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    228a:	00 00                	add    BYTE PTR [rax],al
    228c:	8c 01                	mov    WORD PTR [rcx],es
    228e:	00 00                	add    BYTE PTR [rax],al
    2290:	4e f9                	rex.WRX stc
    2292:	ff                   	(bad)
    2293:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    2296:	00 00                	add    BYTE PTR [rax],al
    2298:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    229b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    22a1:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    22a4:	07                   	(bad)
    22a5:	08 00                	or     BYTE PTR [rax],al
    22a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    22aa:	00 00                	add    BYTE PTR [rax],al
    22ac:	ac                   	lods   al,BYTE PTR ds:[rsi]
    22ad:	01 00                	add    DWORD PTR [rax],eax
    22af:	00 94 f9 ff ff 74 00 	add    BYTE PTR [rcx+rdi*8+0x74ffff],dl
    22b6:	00 00                	add    BYTE PTR [rax],al
    22b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    22bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    22c1:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    22c4:	07                   	(bad)
    22c5:	08 00                	or     BYTE PTR [rax],al
	...

00000000000022c8 <__FRAME_END__>:
    22c8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003d10 <__frame_dummy_init_array_entry>:
    3d10:	c0 13 00             	rcl    BYTE PTR [rbx],0x0
    3d13:	00 00                	add    BYTE PTR [rax],al
    3d15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003d18 <__do_global_dtors_aux_fini_array_entry>:
    3d18:	80 13 00             	adc    BYTE PTR [rbx],0x0
    3d1b:	00 00                	add    BYTE PTR [rax],al
    3d1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003d20 <_DYNAMIC>:
    3d20:	01 00                	add    DWORD PTR [rax],eax
    3d22:	00 00                	add    BYTE PTR [rax],al
    3d24:	00 00                	add    BYTE PTR [rax],al
    3d26:	00 00                	add    BYTE PTR [rax],al
    3d28:	cf                   	iret
    3d29:	00 00                	add    BYTE PTR [rax],al
    3d2b:	00 00                	add    BYTE PTR [rax],al
    3d2d:	00 00                	add    BYTE PTR [rax],al
    3d2f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3d32:	00 00                	add    BYTE PTR [rax],al
    3d34:	00 00                	add    BYTE PTR [rax],al
    3d36:	00 00                	add    BYTE PTR [rax],al
    3d38:	00 10                	add    BYTE PTR [rax],dl
    3d3a:	00 00                	add    BYTE PTR [rax],al
    3d3c:	00 00                	add    BYTE PTR [rax],al
    3d3e:	00 00                	add    BYTE PTR [rax],al
    3d40:	0d 00 00 00 00       	or     eax,0x0
    3d45:	00 00                	add    BYTE PTR [rax],al
    3d47:	00 b8 1c 00 00 00    	add    BYTE PTR [rax+0x1c],bh
    3d4d:	00 00                	add    BYTE PTR [rax],al
    3d4f:	00 19                	add    BYTE PTR [rcx],bl
    3d51:	00 00                	add    BYTE PTR [rax],al
    3d53:	00 00                	add    BYTE PTR [rax],al
    3d55:	00 00                	add    BYTE PTR [rax],al
    3d57:	00 10                	add    BYTE PTR [rax],dl
    3d59:	3d 00 00 00 00       	cmp    eax,0x0
    3d5e:	00 00                	add    BYTE PTR [rax],al
    3d60:	1b 00                	sbb    eax,DWORD PTR [rax]
    3d62:	00 00                	add    BYTE PTR [rax],al
    3d64:	00 00                	add    BYTE PTR [rax],al
    3d66:	00 00                	add    BYTE PTR [rax],al
    3d68:	08 00                	or     BYTE PTR [rax],al
    3d6a:	00 00                	add    BYTE PTR [rax],al
    3d6c:	00 00                	add    BYTE PTR [rax],al
    3d6e:	00 00                	add    BYTE PTR [rax],al
    3d70:	1a 00                	sbb    al,BYTE PTR [rax]
    3d72:	00 00                	add    BYTE PTR [rax],al
    3d74:	00 00                	add    BYTE PTR [rax],al
    3d76:	00 00                	add    BYTE PTR [rax],al
    3d78:	18 3d 00 00 00 00    	sbb    BYTE PTR [rip+0x0],bh        # 3d7e <_DYNAMIC+0x5e>
    3d7e:	00 00                	add    BYTE PTR [rax],al
    3d80:	1c 00                	sbb    al,0x0
    3d82:	00 00                	add    BYTE PTR [rax],al
    3d84:	00 00                	add    BYTE PTR [rax],al
    3d86:	00 00                	add    BYTE PTR [rax],al
    3d88:	08 00                	or     BYTE PTR [rax],al
    3d8a:	00 00                	add    BYTE PTR [rax],al
    3d8c:	00 00                	add    BYTE PTR [rax],al
    3d8e:	00 00                	add    BYTE PTR [rax],al
    3d90:	f5                   	cmc
    3d91:	fe                   	(bad)
    3d92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3d95:	00 00                	add    BYTE PTR [rax],al
    3d97:	00 b0 03 00 00 00    	add    BYTE PTR [rax+0x3],dh
    3d9d:	00 00                	add    BYTE PTR [rax],al
    3d9f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3da5 <_DYNAMIC+0x85>
    3da5:	00 00                	add    BYTE PTR [rax],al
    3da7:	00 78 06             	add    BYTE PTR [rax+0x6],bh
    3daa:	00 00                	add    BYTE PTR [rax],al
    3dac:	00 00                	add    BYTE PTR [rax],al
    3dae:	00 00                	add    BYTE PTR [rax],al
    3db0:	06                   	(bad)
    3db1:	00 00                	add    BYTE PTR [rax],al
    3db3:	00 00                	add    BYTE PTR [rax],al
    3db5:	00 00                	add    BYTE PTR [rax],al
    3db7:	00 d8                	add    al,bl
    3db9:	03 00                	add    eax,DWORD PTR [rax]
    3dbb:	00 00                	add    BYTE PTR [rax],al
    3dbd:	00 00                	add    BYTE PTR [rax],al
    3dbf:	00 0a                	add    BYTE PTR [rdx],cl
    3dc1:	00 00                	add    BYTE PTR [rax],al
    3dc3:	00 00                	add    BYTE PTR [rax],al
    3dc5:	00 00                	add    BYTE PTR [rax],al
    3dc7:	00 60 01             	add    BYTE PTR [rax+0x1],ah
    3dca:	00 00                	add    BYTE PTR [rax],al
    3dcc:	00 00                	add    BYTE PTR [rax],al
    3dce:	00 00                	add    BYTE PTR [rax],al
    3dd0:	0b 00                	or     eax,DWORD PTR [rax]
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 00                	add    BYTE PTR [rax],al
    3dd6:	00 00                	add    BYTE PTR [rax],al
    3dd8:	18 00                	sbb    BYTE PTR [rax],al
    3dda:	00 00                	add    BYTE PTR [rax],al
    3ddc:	00 00                	add    BYTE PTR [rax],al
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	15 00 00 00 00       	adc    eax,0x0
	...
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 03                	add    BYTE PTR [rbx],al
    3df1:	00 00                	add    BYTE PTR [rax],al
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 10                	add    BYTE PTR [rax],dl
    3df9:	3f                   	(bad)
    3dfa:	00 00                	add    BYTE PTR [rax],al
    3dfc:	00 00                	add    BYTE PTR [rax],al
    3dfe:	00 00                	add    BYTE PTR [rax],al
    3e00:	02 00                	add    al,BYTE PTR [rax]
    3e02:	00 00                	add    BYTE PTR [rax],al
    3e04:	00 00                	add    BYTE PTR [rax],al
    3e06:	00 00                	add    BYTE PTR [rax],al
    3e08:	f8                   	clc
    3e09:	01 00                	add    DWORD PTR [rax],eax
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	07                   	(bad)
    3e19:	00 00                	add    BYTE PTR [rax],al
    3e1b:	00 00                	add    BYTE PTR [rax],al
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 17                	add    BYTE PTR [rdi],dl
    3e21:	00 00                	add    BYTE PTR [rax],al
    3e23:	00 00                	add    BYTE PTR [rax],al
    3e25:	00 00                	add    BYTE PTR [rax],al
    3e27:	00 58 09             	add    BYTE PTR [rax+0x9],bl
    3e2a:	00 00                	add    BYTE PTR [rax],al
    3e2c:	00 00                	add    BYTE PTR [rax],al
    3e2e:	00 00                	add    BYTE PTR [rax],al
    3e30:	07                   	(bad)
    3e31:	00 00                	add    BYTE PTR [rax],al
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 80 08 00 00 00    	add    BYTE PTR [rax+0x8],al
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 08                	add    BYTE PTR [rax],cl
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	00 00                	add    BYTE PTR [rax],al
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 d8                	add    al,bl
    3e49:	00 00                	add    BYTE PTR [rax],al
    3e4b:	00 00                	add    BYTE PTR [rax],al
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 09                	add    BYTE PTR [rcx],cl
    3e51:	00 00                	add    BYTE PTR [rax],al
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 18                	add    BYTE PTR [rax],bl
    3e59:	00 00                	add    BYTE PTR [rax],al
    3e5b:	00 00                	add    BYTE PTR [rax],al
    3e5d:	00 00                	add    BYTE PTR [rax],al
    3e5f:	00 1e                	add    BYTE PTR [rsi],bl
    3e61:	00 00                	add    BYTE PTR [rax],al
    3e63:	00 00                	add    BYTE PTR [rax],al
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 08                	add    BYTE PTR [rax],cl
    3e69:	00 00                	add    BYTE PTR [rax],al
    3e6b:	00 00                	add    BYTE PTR [rax],al
    3e6d:	00 00                	add    BYTE PTR [rax],al
    3e6f:	00 fb                	add    bl,bh
    3e71:	ff                   	(bad)
    3e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 01                	add    BYTE PTR [rcx],al
    3e79:	00 00                	add    BYTE PTR [rax],al
    3e7b:	08 00                	or     BYTE PTR [rax],al
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 fe                	add    dh,bh
    3e81:	ff                   	(bad)
    3e82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 10                	add    BYTE PTR [rax],dl
    3e89:	08 00                	or     BYTE PTR [rax],al
    3e8b:	00 00                	add    BYTE PTR [rax],al
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 ff                	add    bh,bh
    3e91:	ff                   	(bad)
    3e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 01                	add    BYTE PTR [rcx],al
    3e99:	00 00                	add    BYTE PTR [rax],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 f0                	add    al,dh
    3ea1:	ff                   	(bad)
    3ea2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 d8                	add    al,bl
    3ea9:	07                   	(bad)
    3eaa:	00 00                	add    BYTE PTR [rax],al
    3eac:	00 00                	add    BYTE PTR [rax],al
    3eae:	00 00                	add    BYTE PTR [rax],al
    3eb0:	f9                   	stc
    3eb1:	ff                   	(bad)
    3eb2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003f10 <_GLOBAL_OFFSET_TABLE_>:
    3f10:	20 3d 00 00 00 00    	and    BYTE PTR [rip+0x0],bh        # 3f16 <_GLOBAL_OFFSET_TABLE_+0x6>
	...
    3f26:	00 00                	add    BYTE PTR [rax],al
    3f28:	30 10                	xor    BYTE PTR [rax],dl
    3f2a:	00 00                	add    BYTE PTR [rax],al
    3f2c:	00 00                	add    BYTE PTR [rax],al
    3f2e:	00 00                	add    BYTE PTR [rax],al
    3f30:	40 10 00             	rex adc BYTE PTR [rax],al
    3f33:	00 00                	add    BYTE PTR [rax],al
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 50 10             	add    BYTE PTR [rax+0x10],dl
    3f3a:	00 00                	add    BYTE PTR [rax],al
    3f3c:	00 00                	add    BYTE PTR [rax],al
    3f3e:	00 00                	add    BYTE PTR [rax],al
    3f40:	60                   	(bad)
    3f41:	10 00                	adc    BYTE PTR [rax],al
    3f43:	00 00                	add    BYTE PTR [rax],al
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 70 10             	add    BYTE PTR [rax+0x10],dh
    3f4a:	00 00                	add    BYTE PTR [rax],al
    3f4c:	00 00                	add    BYTE PTR [rax],al
    3f4e:	00 00                	add    BYTE PTR [rax],al
    3f50:	80 10 00             	adc    BYTE PTR [rax],0x0
    3f53:	00 00                	add    BYTE PTR [rax],al
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 90 10 00 00 00    	add    BYTE PTR [rax+0x10],dl
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 a0 10 00 00 00    	add    BYTE PTR [rax+0x10],ah
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 b0 10 00 00 00    	add    BYTE PTR [rax+0x10],dh
    3f6d:	00 00                	add    BYTE PTR [rax],al
    3f6f:	00 c0                	add    al,al
    3f71:	10 00                	adc    BYTE PTR [rax],al
    3f73:	00 00                	add    BYTE PTR [rax],al
    3f75:	00 00                	add    BYTE PTR [rax],al
    3f77:	00 d0                	add    al,dl
    3f79:	10 00                	adc    BYTE PTR [rax],al
    3f7b:	00 00                	add    BYTE PTR [rax],al
    3f7d:	00 00                	add    BYTE PTR [rax],al
    3f7f:	00 e0                	add    al,ah
    3f81:	10 00                	adc    BYTE PTR [rax],al
    3f83:	00 00                	add    BYTE PTR [rax],al
    3f85:	00 00                	add    BYTE PTR [rax],al
    3f87:	00 f0                	add    al,dh
    3f89:	10 00                	adc    BYTE PTR [rax],al
    3f8b:	00 00                	add    BYTE PTR [rax],al
    3f8d:	00 00                	add    BYTE PTR [rax],al
    3f8f:	00 00                	add    BYTE PTR [rax],al
    3f91:	11 00                	adc    DWORD PTR [rax],eax
    3f93:	00 00                	add    BYTE PTR [rax],al
    3f95:	00 00                	add    BYTE PTR [rax],al
    3f97:	00 10                	add    BYTE PTR [rax],dl
    3f99:	11 00                	adc    DWORD PTR [rax],eax
    3f9b:	00 00                	add    BYTE PTR [rax],al
    3f9d:	00 00                	add    BYTE PTR [rax],al
    3f9f:	00 20                	add    BYTE PTR [rax],ah
    3fa1:	11 00                	adc    DWORD PTR [rax],eax
    3fa3:	00 00                	add    BYTE PTR [rax],al
    3fa5:	00 00                	add    BYTE PTR [rax],al
    3fa7:	00 30                	add    BYTE PTR [rax],dh
    3fa9:	11 00                	adc    DWORD PTR [rax],eax
    3fab:	00 00                	add    BYTE PTR [rax],al
    3fad:	00 00                	add    BYTE PTR [rax],al
    3faf:	00 40 11             	add    BYTE PTR [rax+0x11],al
    3fb2:	00 00                	add    BYTE PTR [rax],al
    3fb4:	00 00                	add    BYTE PTR [rax],al
    3fb6:	00 00                	add    BYTE PTR [rax],al
    3fb8:	50                   	push   rax
    3fb9:	11 00                	adc    DWORD PTR [rax],eax
    3fbb:	00 00                	add    BYTE PTR [rax],al
    3fbd:	00 00                	add    BYTE PTR [rax],al
    3fbf:	00 60 11             	add    BYTE PTR [rax+0x11],ah
    3fc2:	00 00                	add    BYTE PTR [rax],al
    3fc4:	00 00                	add    BYTE PTR [rax],al
    3fc6:	00 00                	add    BYTE PTR [rax],al
    3fc8:	70 11                	jo     3fdb <_GLOBAL_OFFSET_TABLE_+0xcb>
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	33 2e                	xor    ebp,DWORD PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754e <_end+0x75623536>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	32 7e 32             	xor    bh,BYTE PTR [rsi+0x32]
  1e:	34 2e                	xor    al,0x2e
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	33 2e                	xor    ebp,DWORD PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	c9                   	leave
  11:	13 00                	adc    eax,DWORD PTR [rax]
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 5b 04             	add    BYTE PTR [rbx+0x4],bl
	...
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	2c 00                	sub    al,0x0
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	8c 08                	mov    WORD PTR [rax],cs
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	08 00                	or     BYTE PTR [rax],al
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	24 18                	and    al,0x18
  42:	00 00                	add    BYTE PTR [rax],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	72 02                	jb     4c <__abi_tag-0x340>
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	2c 00                	sub    al,0x0
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	d4                   	(bad)
  67:	0a 00                	or     al,BYTE PTR [rax]
  69:	00 08                	add    BYTE PTR [rax],cl
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 96 1a 00 00 00    	add    BYTE PTR [rsi+0x1a],dl
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 22                	add    BYTE PTR [rdx],ah
  79:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	88 08                	mov    BYTE PTR [rax],cl
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 01 08 00       	add    eax,0x80100
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 18                	add    BYTE PTR [rax],bl
   d:	79 00                	jns    f <__abi_tag-0x37d>
   f:	00 00                	add    BYTE PTR [rax],al
  11:	1d 00 00 00 00       	sbb    eax,0x0
  16:	0c 00                	or     al,0x0
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	c9                   	leave
  1b:	13 00                	adc    eax,DWORD PTR [rax]
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	00 5b 04             	add    BYTE PTR [rbx+0x4],bl
	...
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	06                   	(bad)
  2f:	01 08                	add    DWORD PTR [rax],ecx
  31:	56                   	push   rsi
  32:	03 00                	add    eax,DWORD PTR [rax]
  34:	00 06                	add    BYTE PTR [rsi],al
  36:	02 07                	add    al,BYTE PTR [rdi]
  38:	fd                   	std
  39:	03 00                	add    eax,DWORD PTR [rax]
  3b:	00 06                	add    BYTE PTR [rsi],al
  3d:	04 07                	add    al,0x7
  3f:	29 01                	sub    DWORD PTR [rcx],eax
  41:	00 00                	add    BYTE PTR [rax],al
  43:	06                   	(bad)
  44:	08 07                	or     BYTE PTR [rdi],al
  46:	24 01                	and    al,0x1
  48:	00 00                	add    BYTE PTR [rax],al
  4a:	06                   	(bad)
  4b:	01 06                	add    DWORD PTR [rsi],eax
  4d:	58                   	pop    rax
  4e:	03 00                	add    eax,DWORD PTR [rax]
  50:	00 06                	add    BYTE PTR [rsi],al
  52:	02 05 6d 03 00 00    	add    al,BYTE PTR [rip+0x36d]        # 3c5 <__abi_tag+0x39>
  58:	03 bc 03 00 00 02 28 	add    edi,DWORD PTR [rbx+rax*1+0x28020000]
  5f:	1c 35                	sbb    al,0x35
  61:	00 00                	add    BYTE PTR [rax],al
  63:	00 19                	add    BYTE PTR [rcx],bl
  65:	04 05                	add    al,0x5
  67:	69 6e 74 00 03 b0 01 	imul   ebp,DWORD PTR [rsi+0x74],0x1b00300
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	02 2a                	add    ch,BYTE PTR [rdx]
  72:	16                   	(bad)
  73:	3c 00                	cmp    al,0x0
  75:	00 00                	add    BYTE PTR [rax],al
  77:	06                   	(bad)
  78:	08 05 45 01 00 00    	or     BYTE PTR [rip+0x145],al        # 1c3 <__abi_tag-0x1c9>
  7e:	03 06                	add    eax,DWORD PTR [rsi]
  80:	03 00                	add    eax,DWORD PTR [rax]
  82:	00 02                	add    BYTE PTR [rdx],al
  84:	2d 1b 43 00 00       	sub    eax,0x431b
  89:	00 03                	add    BYTE PTR [rbx],al
  8b:	00 00                	add    BYTE PTR [rax],al
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	02 98 19 77 00 00    	add    bl,BYTE PTR [rax+0x7719]
  95:	00 03                	add    BYTE PTR [rbx],al
  97:	d8 03                	fadd   DWORD PTR [rbx]
  99:	00 00                	add    BYTE PTR [rax],al
  9b:	02 99 1b 77 00 00    	add    bl,BYTE PTR [rcx+0x771b]
  a1:	00 1a                	add    BYTE PTR [rdx],bl
  a3:	08 0f                	or     BYTE PTR [rdi],cl
  a5:	a2 00 00 00 03 6a 01 	movabs ds:0x16a03000000,al
  ac:	00 00 
  ae:	02 c2                	add    al,dl
  b0:	1b 77 00             	sbb    esi,DWORD PTR [rdi+0x0]
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	05 ba 00 00 00       	add    eax,0xba
  ba:	06                   	(bad)
  bb:	01 06                	add    DWORD PTR [rsi],eax
  bd:	5f                   	pop    rdi
  be:	03 00                	add    eax,DWORD PTR [rax]
  c0:	00 1b                	add    BYTE PTR [rbx],bl
  c2:	ba 00 00 00 03       	mov    edx,0x3000000
  c7:	b0 03                	mov    al,0x3
  c9:	00 00                	add    BYTE PTR [rax],al
  cb:	02 d2                	add    dl,dl
  cd:	17                   	(bad)
  ce:	3c 00                	cmp    al,0x0
  d0:	00 00                	add    BYTE PTR [rax],al
  d2:	03 6d 01             	add    ebp,DWORD PTR [rbp+0x1]
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	03 d6                	add    edx,esi
  d9:	17                   	(bad)
  da:	43 00 00             	rex.XB add BYTE PTR [r8],al
  dd:	00 05 c1 00 00 00    	add    BYTE PTR [rip+0xc1],al        # 1a4 <__abi_tag-0x1e8>
  e3:	0f de 00             	pmaxub mm0,QWORD PTR [rax]
  e6:	00 00                	add    BYTE PTR [rax],al
  e8:	06                   	(bad)
  e9:	08 07                	or     BYTE PTR [rdi],al
  eb:	1f                   	(bad)
  ec:	01 00                	add    DWORD PTR [rax],eax
  ee:	00 06                	add    BYTE PTR [rsi],al
  f0:	08 05 40 01 00 00    	or     BYTE PTR [rip+0x140],al        # 236 <__abi_tag-0x156>
  f6:	03 be 03 00 00 04    	add    edi,DWORD PTR [rsi+0x4000003]
  fc:	19 14 58             	sbb    DWORD PTR [rax+rbx*2],edx
  ff:	00 00                	add    BYTE PTR [rax],al
 101:	00 03                	add    BYTE PTR [rbx],al
 103:	b2 01                	mov    dl,0x1
 105:	00 00                	add    BYTE PTR [rax],al
 107:	04 1a                	add    al,0x1a
 109:	14 6b                	adc    al,0x6b
 10b:	00 00                	add    BYTE PTR [rax],al
 10d:	00 03                	add    BYTE PTR [rbx],al
 10f:	08 03                	or     BYTE PTR [rbx],al
 111:	00 00                	add    BYTE PTR [rax],al
 113:	04 1b                	add    al,0x1b
 115:	14 7e                	adc    al,0x7e
 117:	00 00                	add    BYTE PTR [rax],al
 119:	00 03                	add    BYTE PTR [rbx],al
 11b:	6c                   	ins    BYTE PTR es:[rdi],dx
 11c:	01 00                	add    DWORD PTR [rax],eax
 11e:	00 05 6c 13 a9 00    	add    BYTE PTR [rip+0xa9136c],al        # a91490 <_end+0xa8d478>
 124:	00 00                	add    BYTE PTR [rax],al
 126:	03 b2 03 00 00 06    	add    esi,DWORD PTR [rdx+0x6000003]
 12c:	21 15 c6 00 00 00    	and    DWORD PTR [rip+0xc6],edx        # 1f8 <__abi_tag-0x194>
 132:	14 2d                	adc    al,0x2d
 134:	03 00                	add    eax,DWORD PTR [rax]
 136:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
 139:	00 00                	add    BYTE PTR [rax],al
 13b:	0c 18                	or     al,0x18
 13d:	7c 01                	jl     140 <__abi_tag-0x24c>
 13f:	00 00                	add    BYTE PTR [rax],al
 141:	04 8c                	add    al,0x8c
 143:	01 00                	add    DWORD PTR [rax],eax
 145:	00 01                	add    BYTE PTR [rcx],al
 147:	04 63                	add    al,0x63
 149:	04 00                	add    al,0x0
 14b:	00 02                	add    BYTE PTR [rdx],al
 14d:	04 d0                	add    al,0xd0
 14f:	04 00                	add    al,0x0
 151:	00 03                	add    BYTE PTR [rbx],al
 153:	04 e1                	add    al,0xe1
 155:	01 00                	add    DWORD PTR [rax],eax
 157:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
 15a:	f1                   	int1
 15b:	04 00                	add    al,0x0
 15d:	00 05 04 e7 04 00    	add    BYTE PTR [rip+0x4e704],al        # 4e867 <_end+0x4a84f>
 163:	00 06                	add    BYTE PTR [rsi],al
 165:	04 8c                	add    al,0x8c
 167:	03 00                	add    eax,DWORD PTR [rax]
 169:	00 0a                	add    BYTE PTR [rdx],cl
 16b:	09 3c 02             	or     DWORD PTR [rdx+rax*1],edi
 16e:	00 00                	add    BYTE PTR [rax],al
 170:	00 00                	add    BYTE PTR [rax],al
 172:	08 00                	or     BYTE PTR [rax],al
 174:	0b 11                	or     edx,DWORD PTR [rcx]
 176:	01 00                	add    DWORD PTR [rax],eax
 178:	00 00                	add    BYTE PTR [rax],al
 17a:	08 00                	or     BYTE PTR [rax],al
 17c:	03 23                	add    esp,DWORD PTR [rbx]
 17e:	04 00                	add    al,0x0
 180:	00 07                	add    BYTE PTR [rdi],al
 182:	1c 1c                	sbb    al,0x1c
 184:	35 00 00 00 0c       	xor    eax,0xc000000
 189:	2d 05 00 00 10       	sub    eax,0x10000005
 18e:	06                   	(bad)
 18f:	b7 af                	mov    bh,0xaf
 191:	01 00                	add    DWORD PTR [rax],eax
 193:	00 01                	add    BYTE PTR [rcx],al
 195:	1a 03                	sbb    al,BYTE PTR [rbx]
 197:	00 00                	add    BYTE PTR [rax],al
 199:	06                   	(bad)
 19a:	b9 05 7c 01 00       	mov    ecx,0x17c05
 19f:	00 00                	add    BYTE PTR [rax],al
 1a1:	01 ba 04 00 00 06    	add    DWORD PTR [rdx+0x6000004],edi
 1a7:	ba 0a af 01 00       	mov    edx,0x1af0a
 1ac:	00 02                	add    BYTE PTR [rdx],al
 1ae:	00 0d ba 00 00 00    	add    BYTE PTR [rip+0xba],cl        # 26e <__abi_tag-0x11e>
 1b4:	bf 01 00 00 10       	mov    edi,0x10000001
 1b9:	43 00 00             	rex.XB add BYTE PTR [r8],al
 1bc:	00 0d 00 0c 6e 04    	add    BYTE PTR [rip+0x46e0c00],cl        # 46e0dc2 <_end+0x46dcdaa>
 1c2:	00 00                	add    BYTE PTR [rax],al
 1c4:	10 08                	adc    BYTE PTR [rax],cl
 1c6:	f7 00 02 00 00 01    	test   DWORD PTR [rax],0x1000002
 1cc:	99                   	cdq
 1cd:	02 00                	add    al,BYTE PTR [rax]
 1cf:	00 08                	add    BYTE PTR [rax],cl
 1d1:	f9                   	stc
 1d2:	05 7c 01 00 00       	add    eax,0x17c
 1d7:	00 01                	add    BYTE PTR [rcx],al
 1d9:	11 03                	adc    DWORD PTR [rbx],eax
 1db:	00 00                	add    BYTE PTR [rax],al
 1dd:	08 fa                	or     dl,bh
 1df:	0f 42 02             	cmovb  eax,DWORD PTR [rdx]
 1e2:	00 00                	add    BYTE PTR [rax],al
 1e4:	02 01                	add    al,BYTE PTR [rcx]
 1e6:	33 02                	xor    eax,DWORD PTR [rdx]
 1e8:	00 00                	add    BYTE PTR [rax],al
 1ea:	08 fb                	or     bl,bh
 1ec:	14 28                	adc    al,0x28
 1ee:	02 00                	add    al,BYTE PTR [rax]
 1f0:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
 1f3:	cd 01                	int    0x1
 1f5:	00 00                	add    BYTE PTR [rax],al
 1f7:	08 fe                	or     dh,bh
 1f9:	13 4e 02             	adc    ecx,DWORD PTR [rsi+0x2]
 1fc:	00 00                	add    BYTE PTR [rax],al
 1fe:	08 00                	or     BYTE PTR [rax],al
 200:	03 00                	add    eax,DWORD PTR [rax]
 202:	05 00 00 09 50       	add    eax,0x50090000
 207:	0a 0c 02             	or     cl,BYTE PTR [rdx+rax*1]
 20a:	00 00                	add    BYTE PTR [rax],al
 20c:	15 4f 03 7e 02       	adc    eax,0x27e034f
 211:	00 00                	add    BYTE PTR [rax],al
 213:	09 54 0a 1a          	or     DWORD PTR [rdx+rcx*1+0x1a],edx
 217:	02 00                	add    al,BYTE PTR [rax]
 219:	00 15 53 03 36 01    	add    BYTE PTR [rip+0x1360353],dl        # 1360572 <_end+0x135c55a>
 21f:	00 00                	add    BYTE PTR [rax],al
 221:	08 1e                	or     BYTE PTR [rsi],bl
 223:	12 02                	adc    al,BYTE PTR [rdx]
 225:	01 00                	add    DWORD PTR [rax],eax
 227:	00 0c 34             	add    BYTE PTR [rsp+rsi*1],cl
 22a:	02 00                	add    al,BYTE PTR [rax]
 22c:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
 22f:	1f                   	(bad)
 230:	42 02 00             	rex.X add al,BYTE PTR [rax]
 233:	00 01                	add    BYTE PTR [rcx],al
 235:	ea                   	(bad)
 236:	01 00                	add    DWORD PTR [rax],eax
 238:	00 08                	add    BYTE PTR [rax],cl
 23a:	21 0f                	and    DWORD PTR [rdi],ecx
 23c:	1c 02                	sbb    al,0x2
 23e:	00 00                	add    BYTE PTR [rax],al
 240:	00 00                	add    BYTE PTR [rax],al
 242:	03 23                	add    esp,DWORD PTR [rbx]
 244:	05 00 00 08 7d       	add    eax,0x7d080000
 249:	12 f6                	adc    dh,dh
 24b:	00 00                	add    BYTE PTR [rax],al
 24d:	00 0d 2e 00 00 00    	add    BYTE PTR [rip+0x2e],cl        # 281 <__abi_tag-0x10b>
 253:	5e                   	pop    rsi
 254:	02 00                	add    al,BYTE PTR [rax]
 256:	00 10                	add    BYTE PTR [rax],dl
 258:	43 00 00             	rex.XB add BYTE PTR [r8],al
 25b:	00 07                	add    BYTE PTR [rdi],al
 25d:	00 05 b5 00 00 00    	add    BYTE PTR [rip+0xb5],al        # 318 <__abi_tag-0x74>
 263:	0c ec                	or     al,0xec
 265:	02 00                	add    al,BYTE PTR [rax]
 267:	00 d8                	add    al,bl
 269:	0a 31                	or     dh,BYTE PTR [rcx]
 26b:	e9 03 00 00 01       	jmp    1000273 <_end+0xffc25b>
 270:	63 01                	movsxd eax,DWORD PTR [rcx]
 272:	00 00                	add    BYTE PTR [rax],al
 274:	0a 33                	or     dh,BYTE PTR [rbx]
 276:	07                   	(bad)
 277:	64 00 00             	add    BYTE PTR fs:[rax],al
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	01 1d 00 00 00 0a    	add    DWORD PTR [rip+0xa000000],ebx        # a000282 <_end+0x9ffc26a>
 282:	36 09 b5 00 00 00 08 	ss or  DWORD PTR [rbp+0x8000000],esi
 289:	01 56 01             	add    DWORD PTR [rsi+0x1],edx
 28c:	00 00                	add    BYTE PTR [rax],al
 28e:	0a 37                	or     dh,BYTE PTR [rdi]
 290:	09 b5 00 00 00 10    	or     DWORD PTR [rbp+0x10000000],esi
 296:	01 e2                	add    edx,esp
 298:	03 00                	add    eax,DWORD PTR [rax]
 29a:	00 0a                	add    BYTE PTR [rdx],cl
 29c:	38 09                	cmp    BYTE PTR [rcx],cl
 29e:	b5 00                	mov    ch,0x0
 2a0:	00 00                	add    BYTE PTR [rax],al
 2a2:	18 01                	sbb    BYTE PTR [rcx],al
 2a4:	14 05                	adc    al,0x5
 2a6:	00 00                	add    BYTE PTR [rax],al
 2a8:	0a 39                	or     bh,BYTE PTR [rcx]
 2aa:	09 b5 00 00 00 20    	or     DWORD PTR [rbp+0x20000000],esi
 2b0:	01 15 02 00 00 0a    	add    DWORD PTR [rip+0xa000002],edx        # a0002b8 <_end+0x9ffc2a0>
 2b6:	3a 09                	cmp    cl,BYTE PTR [rcx]
 2b8:	b5 00                	mov    ch,0x0
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	28 01                	sub    BYTE PTR [rcx],al
 2be:	af                   	scas   eax,DWORD PTR es:[rdi]
 2bf:	02 00                	add    al,BYTE PTR [rax]
 2c1:	00 0a                	add    BYTE PTR [rdx],cl
 2c3:	3b 09                	cmp    ecx,DWORD PTR [rcx]
 2c5:	b5 00                	mov    ch,0x0
 2c7:	00 00                	add    BYTE PTR [rax],al
 2c9:	30 01                	xor    BYTE PTR [rcx],al
 2cb:	6c                   	ins    BYTE PTR es:[rdi],dx
 2cc:	00 00                	add    BYTE PTR [rax],al
 2ce:	00 0a                	add    BYTE PTR [rdx],cl
 2d0:	3c 09                	cmp    al,0x9
 2d2:	b5 00                	mov    ch,0x0
 2d4:	00 00                	add    BYTE PTR [rax],al
 2d6:	38 01                	cmp    BYTE PTR [rcx],al
 2d8:	74 01                	je     2db <__abi_tag-0xb1>
 2da:	00 00                	add    BYTE PTR [rax],al
 2dc:	0a 3d 09 b5 00 00    	or     bh,BYTE PTR [rip+0xb509]        # b7eb <_end+0x77d3>
 2e2:	00 40 01             	add    BYTE PTR [rax+0x1],al
 2e5:	50                   	push   rax
 2e6:	02 00                	add    al,BYTE PTR [rax]
 2e8:	00 0a                	add    BYTE PTR [rdx],cl
 2ea:	40 09 b5 00 00 00 48 	rex or DWORD PTR [rbp+0x48000000],esi
 2f1:	01 7a 04             	add    DWORD PTR [rdx+0x4],edi
 2f4:	00 00                	add    BYTE PTR [rax],al
 2f6:	0a 41 09             	or     al,BYTE PTR [rcx+0x9]
 2f9:	b5 00                	mov    ch,0x0
 2fb:	00 00                	add    BYTE PTR [rax],al
 2fd:	50                   	push   rax
 2fe:	01 f0                	add    eax,esi
 300:	03 00                	add    eax,DWORD PTR [rax]
 302:	00 0a                	add    BYTE PTR [rdx],cl
 304:	42 09 b5 00 00 00 58 	rex.X or DWORD PTR [rbp+0x58000000],esi
 30b:	01 24 03             	add    DWORD PTR [rbx+rax*1],esp
 30e:	00 00                	add    BYTE PTR [rax],al
 310:	0a 44 16 02          	or     al,BYTE PTR [rsi+rdx*1+0x2]
 314:	04 00                	add    al,0x0
 316:	00 60 01             	add    BYTE PTR [rax+0x1],ah
 319:	2a 00                	sub    al,BYTE PTR [rax]
 31b:	00 00                	add    BYTE PTR [rax],al
 31d:	0a 46 14             	or     al,BYTE PTR [rsi+0x14]
 320:	07                   	(bad)
 321:	04 00                	add    al,0x0
 323:	00 68 01             	add    BYTE PTR [rax+0x1],ch
 326:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
 329:	00 0a                	add    BYTE PTR [rdx],cl
 32b:	48 07                	rex.W (bad)
 32d:	64 00 00             	add    BYTE PTR fs:[rax],al
 330:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 333:	70 02                	jo     337 <__abi_tag-0x55>
 335:	00 00                	add    BYTE PTR [rax],al
 337:	0a 49 07             	or     cl,BYTE PTR [rcx+0x7]
 33a:	64 00 00             	add    BYTE PTR fs:[rax],al
 33d:	00 74 01 a4          	add    BYTE PTR [rcx+rax*1-0x5c],dh
 341:	01 00                	add    DWORD PTR [rax],eax
 343:	00 0a                	add    BYTE PTR [rdx],cl
 345:	4a 0b 8a 00 00 00 78 	rex.WX or rcx,QWORD PTR [rdx+0x78000000]
 34c:	01 80 01 00 00 0a    	add    DWORD PTR [rax+0xa000001],eax
 352:	4d 12 35 00 00 00 80 	rex.WRB adc r14b,BYTE PTR [rip+0xffffffff80000000]        # ffffffff80000359 <_end+0xffffffff7fffc341>
 359:	01 7d 03             	add    DWORD PTR [rbp+0x3],edi
 35c:	00 00                	add    BYTE PTR [rax],al
 35e:	0a 4e 0f             	or     cl,BYTE PTR [rsi+0xf]
 361:	4a 00 00             	rex.WX add BYTE PTR [rax],al
 364:	00 82 01 4a 00 00    	add    BYTE PTR [rdx+0x4a01],al
 36a:	00 0a                	add    BYTE PTR [rdx],cl
 36c:	4f 08 0c 04          	rex.WRXB or BYTE PTR [r12+r8*1],r9b
 370:	00 00                	add    BYTE PTR [rax],al
 372:	83 01 6a             	add    DWORD PTR [rcx],0x6a
 375:	02 00                	add    al,BYTE PTR [rax]
 377:	00 0a                	add    BYTE PTR [rdx],cl
 379:	51                   	push   rcx
 37a:	0f 1c 04 00          	cldemote BYTE PTR [rax+rax*1]
 37e:	00 88 01 a8 01 00    	add    BYTE PTR [rax+0x1a801],cl
 384:	00 0a                	add    BYTE PTR [rdx],cl
 386:	59                   	pop    rcx
 387:	0d 96 00 00 00       	or     eax,0x96
 38c:	90                   	nop
 38d:	01 9b 01 00 00 0a    	add    DWORD PTR [rbx+0xa000001],ebx
 393:	5b                   	pop    rbx
 394:	17                   	(bad)
 395:	26 04 00             	es add al,0x0
 398:	00 98 01 dc 04 00    	add    BYTE PTR [rax+0x4dc01],bl
 39e:	00 0a                	add    BYTE PTR [rdx],cl
 3a0:	5c                   	pop    rsp
 3a1:	19 30                	sbb    DWORD PTR [rax],esi
 3a3:	04 00                	add    al,0x0
 3a5:	00 a0 01 c2 04 00    	add    BYTE PTR [rax+0x4c201],ah
 3ab:	00 0a                	add    BYTE PTR [rdx],cl
 3ad:	5d                   	pop    rbp
 3ae:	14 07                	adc    al,0x7
 3b0:	04 00                	add    al,0x0
 3b2:	00 a8 01 f1 01 00    	add    BYTE PTR [rax+0x1f101],ch
 3b8:	00 0a                	add    BYTE PTR [rdx],cl
 3ba:	5e                   	pop    rsi
 3bb:	09 a2 00 00 00 b0    	or     DWORD PTR [rdx-0x50000000],esp
 3c1:	01 1c 04             	add    DWORD PTR [rsp+rax*1],ebx
 3c4:	00 00                	add    BYTE PTR [rax],al
 3c6:	0a 5f 0a             	or     bl,BYTE PTR [rdi+0xa]
 3c9:	d2 00                	rol    BYTE PTR [rax],cl
 3cb:	00 00                	add    BYTE PTR [rax],al
 3cd:	b8 01 78 02 00       	mov    eax,0x27801
 3d2:	00 0a                	add    BYTE PTR [rdx],cl
 3d4:	60                   	(bad)
 3d5:	07                   	(bad)
 3d6:	64 00 00             	add    BYTE PTR fs:[rax],al
 3d9:	00 c0                	add    al,al
 3db:	01 2f                	add    DWORD PTR [rdi],ebp
 3dd:	04 00                	add    al,0x0
 3df:	00 0a                	add    BYTE PTR [rdx],cl
 3e1:	62                   	(bad)
 3e2:	08 35 04 00 00 c4    	or     BYTE PTR [rip+0xffffffffc4000004],dh        # ffffffffc40003ec <_end+0xffffffffc3ffc3d4>
 3e8:	00 03                	add    BYTE PTR [rbx],al
 3ea:	f0 02 00             	lock add al,BYTE PTR [rax]
 3ed:	00 0b                	add    BYTE PTR [rbx],cl
 3ef:	07                   	(bad)
 3f0:	19 63 02             	sbb    DWORD PTR [rbx+0x2],esp
 3f3:	00 00                	add    BYTE PTR [rax],al
 3f5:	1c e1                	sbb    al,0xe1
 3f7:	02 00                	add    al,BYTE PTR [rax]
 3f9:	00 0a                	add    BYTE PTR [rdx],cl
 3fb:	2b 0e                	sub    ecx,DWORD PTR [rsi]
 3fd:	12 d6                	adc    dl,dh
 3ff:	01 00                	add    DWORD PTR [rax],eax
 401:	00 05 fd 03 00 00    	add    BYTE PTR [rip+0x3fd],al        # 804 <__abi_tag+0x478>
 407:	05 63 02 00 00       	add    eax,0x263
 40c:	0d ba 00 00 00       	or     eax,0xba
 411:	1c 04                	sbb    al,0x4
 413:	00 00                	add    BYTE PTR [rax],al
 415:	10 43 00             	adc    BYTE PTR [rbx+0x0],al
 418:	00 00                	add    BYTE PTR [rax],al
 41a:	00 00                	add    BYTE PTR [rax],al
 41c:	05 f5 03 00 00       	add    eax,0x3f5
 421:	12 98 01 00 00 05    	adc    bl,BYTE PTR [rax+0x5000001]
 427:	21 04 00             	and    DWORD PTR [rax+rax*1],eax
 42a:	00 12                	add    BYTE PTR [rdx],dl
 42c:	d9 04 00             	fld    DWORD PTR [rax+rax*1]
 42f:	00 05 2b 04 00 00    	add    BYTE PTR [rip+0x42b],al        # 860 <__abi_tag+0x4d4>
 435:	0d ba 00 00 00       	or     eax,0xba
 43a:	45 04 00             	rex.RB add al,0x0
 43d:	00 10                	add    BYTE PTR [rax],dl
 43f:	43 00 00             	rex.XB add BYTE PTR [r8],al
 442:	00 13                	add    BYTE PTR [rbx],dl
 444:	00 05 e9 03 00 00    	add    BYTE PTR [rip+0x3e9],al        # 833 <__abi_tag+0x4a7>
 44a:	0f 45 04 00          	cmovne eax,DWORD PTR [rax+rax*1]
 44e:	00 1d ff 02 00 00    	add    BYTE PTR [rip+0x2ff],bl        # 753 <__abi_tag+0x3c7>
 454:	0f 97 0e             	seta   BYTE PTR [rsi]
 457:	45 04 00             	rex.RB add al,0x0
 45a:	00 05 60 04 00 00    	add    BYTE PTR [rip+0x460],al        # 8c0 <__abi_tag+0x534>
 460:	1e                   	(bad)
 461:	1f                   	(bad)
 462:	07                   	(bad)
 463:	04 3c                	add    al,0x3c
 465:	00 00                	add    BYTE PTR [rax],al
 467:	00 12                	add    BYTE PTR [rdx],dl
 469:	18 03                	sbb    BYTE PTR [rbx],al
 46b:	79 04                	jns    471 <__abi_tag+0xe5>
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	09 3b                	or     DWORD PTR [rbx],edi
 471:	03 00                	add    eax,DWORD PTR [rax]
 473:	00 00                	add    BYTE PTR [rax],al
 475:	00 08                	add    BYTE PTR [rax],cl
 477:	00 00                	add    BYTE PTR [rax],al
 479:	14 a8                	adc    al,0xa8
 47b:	04 00                	add    al,0x0
 47d:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
 480:	00 00                	add    BYTE PTR [rax],al
 482:	0d 23 f3 04 00       	or     eax,0x4f323
 487:	00 04 15 00 00 00 01 	add    BYTE PTR [rdx*1+0x1000000],al
 48e:	04 5a                	add    al,0x5a
 490:	00 00                	add    BYTE PTR [rax],al
 492:	00 02                	add    BYTE PTR [rdx],al
 494:	04 64                	add    al,0x64
 496:	03 00                	add    eax,DWORD PTR [rax]
 498:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
 49b:	bd 02 00 00 40       	mov    ebp,0x40000002
 4a0:	04 10                	add    al,0x10
 4a2:	04 00                	add    al,0x0
 4a4:	00 80 0b d5 02 00    	add    BYTE PTR [rax+0x2d50b],al
 4aa:	00 00                	add    BYTE PTR [rax],al
 4ac:	01 0b                	add    DWORD PTR [rbx],ecx
 4ae:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	02 0b                	add    cl,BYTE PTR [rbx]
 4b5:	98                   	cwde
 4b6:	03 00                	add    eax,DWORD PTR [rax]
 4b8:	00 00                	add    BYTE PTR [rax],al
 4ba:	04 04                	add    al,0x4
 4bc:	63 00                	movsxd eax,DWORD PTR [rax]
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	08 04 8a             	or     BYTE PTR [rdx+rcx*4],al
 4c3:	04 00                	add    al,0x0
 4c5:	00 10                	add    BYTE PTR [rax],dl
 4c7:	0b 58 04             	or     ebx,DWORD PTR [rax+0x4]
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	00 20                	add    BYTE PTR [rax],ah
 4ce:	09 49 04             	or     DWORD PTR [rcx+0x4],ecx
 4d1:	00 00                	add    BYTE PTR [rax],al
 4d3:	00 00                	add    BYTE PTR [rax],al
 4d5:	00 10                	add    BYTE PTR [rax],dl
 4d7:	09 c9                	or     ecx,ecx
 4d9:	02 00                	add    al,BYTE PTR [rax]
 4db:	00 00                	add    BYTE PTR [rax],al
 4dd:	00 00                	add    BYTE PTR [rax],al
 4df:	20 09                	and    BYTE PTR [rcx],cl
 4e1:	bb 01 00 00 00       	mov    ebx,0x1
 4e6:	00 00                	add    BYTE PTR [rax],al
 4e8:	40 09 49 03          	rex or DWORD PTR [rcx+0x3],ecx
 4ec:	00 00                	add    BYTE PTR [rax],al
 4ee:	00 00                	add    BYTE PTR [rax],al
 4f0:	00 80 00 20 36 05    	add    BYTE PTR [rax+0x5362000],al
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	08 0d 4c 0f 2c 05    	or     BYTE PTR [rip+0x52c0f4c],cl        # 52c144a <_end+0x52bd432>
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	11 70 74             	adc    DWORD PTR [rax+0x74],esi
 503:	72 00                	jb     505 <__abi_tag+0x179>
 505:	4e 09 a2 00 00 00 11 	rex.WRX or QWORD PTR [rdx+0x11000000],r12
 50c:	66 64 00 4f 07       	data16 add BYTE PTR fs:[rdi+0x7],cl
 511:	64 00 00             	add    BYTE PTR fs:[rax],al
 514:	00 11                	add    BYTE PTR [rcx],dl
 516:	75 33                	jne    54b <__abi_tag+0x1bf>
 518:	32 00                	xor    al,BYTE PTR [rax]
 51a:	50                   	push   rax
 51b:	0c 02                	or     al,0x2
 51d:	01 00                	add    DWORD PTR [rax],eax
 51f:	00 11                	add    BYTE PTR [rcx],dl
 521:	75 36                	jne    559 <__abi_tag+0x1cd>
 523:	34 00                	xor    al,0x0
 525:	51                   	push   rcx
 526:	0c 0e                	or     al,0xe
 528:	01 00                	add    DWORD PTR [rax],eax
 52a:	00 00                	add    BYTE PTR [rax],al
 52c:	03 08                	add    ecx,DWORD PTR [rax]
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	00 0d 52 03 f3 04    	add    BYTE PTR [rip+0x4f30352],cl        # 4f30888 <_end+0x4f2c870>
 536:	00 00                	add    BYTE PTR [rax],al
 538:	0c 5e                	or     al,0x5e
 53a:	02 00                	add    al,BYTE PTR [rax]
 53c:	00 0c 0d 54 5f 05 00 	add    BYTE PTR [rcx*1+0x55f54],cl
 543:	00 01                	add    BYTE PTR [rcx],al
 545:	a1 03 00 00 0d 56 0c 	movabs eax,ds:0x1020c560d000003
 54c:	02 01 
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	00 01                	add    BYTE PTR [rcx],al
 552:	bd 04 00 00 0d       	mov    ebp,0xd000004
 557:	57                   	push   rdi
 558:	10 2c 05 00 00 04 00 	adc    BYTE PTR [rax*1+0x40000],ch
 55f:	07                   	(bad)
 560:	50                   	push   rax
 561:	06                   	(bad)
 562:	00 00                	add    BYTE PTR [rax],al
 564:	0e                   	(bad)
 565:	73 01                	jae    568 <__abi_tag+0x1dc>
 567:	10 1a                	adc    BYTE PTR [rdx],bl
 569:	01 00                	add    DWORD PTR [rax],eax
 56b:	00 80 05 00 00 02    	add    BYTE PTR [rax+0x2000005],al
 571:	64 00 00             	add    BYTE PTR fs:[rax],al
 574:	00 02                	add    BYTE PTR [rdx],al
 576:	a2 00 00 00 02 d2 00 	movabs ds:0xd202000000,al
 57d:	00 00 
 57f:	00 07                	add    BYTE PTR [rdi],al
 581:	93                   	xchg   ebx,eax
 582:	02 00                	add    al,BYTE PTR [rax]
 584:	00 0e                	add    BYTE PTR [rsi],cl
 586:	7a 01                	jp     589 <__abi_tag+0x1fd>
 588:	10 1a                	adc    BYTE PTR [rdx],bl
 58a:	01 00                	add    DWORD PTR [rax],eax
 58c:	00 a1 05 00 00 02    	add    BYTE PTR [rcx+0x2000005],ah
 592:	64 00 00             	add    BYTE PTR fs:[rax],al
 595:	00 02                	add    BYTE PTR [rdx],al
 597:	5b                   	pop    rbx
 598:	04 00                	add    al,0x0
 59a:	00 02                	add    BYTE PTR [rdx],al
 59c:	d2 00                	rol    BYTE PTR [rax],cl
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	00 07                	add    BYTE PTR [rdi],al
 5a2:	54                   	push   rsp
 5a3:	00 00                	add    BYTE PTR [rax],al
 5a5:	00 0e                	add    BYTE PTR [rsi],cl
 5a7:	66 01 0c 64          	add    WORD PTR [rsp+riz*2],cx
 5ab:	00 00                	add    BYTE PTR [rax],al
 5ad:	00 b8 05 00 00 02    	add    BYTE PTR [rax+0x2000005],bh
 5b3:	64 00 00             	add    BYTE PTR fs:[rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	07                   	(bad)
 5b9:	a9 03 00 00 0f       	test   eax,0xf000003
 5be:	6b 01 0c             	imul   eax,DWORD PTR [rcx],0xc
 5c1:	64 00 00             	add    BYTE PTR fs:[rax],al
 5c4:	00 d0                	add    al,dl
 5c6:	05 00 00 02 de       	add    eax,0xde020000
 5cb:	00 00                	add    BYTE PTR [rax],al
 5cd:	00 16                	add    BYTE PTR [rsi],dl
 5cf:	00 07                	add    BYTE PTR [rdi],al
 5d1:	41 05 00 00 09 3a    	rex.B add eax,0x3a090000
 5d7:	01 0c 64             	add    DWORD PTR [rsp+riz*2],ecx
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	00 f6                	add    dh,dh
 5de:	05 00 00 02 64       	add    eax,0x64020000
 5e3:	00 00                	add    BYTE PTR [rax],al
 5e5:	00 02                	add    BYTE PTR [rdx],al
 5e7:	00 02                	add    BYTE PTR [rdx],al
 5e9:	00 00                	add    BYTE PTR [rax],al
 5eb:	02 fb                	add    bh,bl
 5ed:	05 00 00 02 64       	add    eax,0x64020000
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	00 00                	add    BYTE PTR [rax],al
 5f6:	05 26 01 00 00       	add    eax,0x126
 5fb:	0f f6 05 00 00 08 a4 	psadbw mm0,QWORD PTR [rip+0xffffffffa4080000]        # ffffffffa4080602 <_end+0xffffffffa407c5ea>
 602:	02 00                	add    al,BYTE PTR [rax]
 604:	00 0d 7c 64 00 00    	add    BYTE PTR [rip+0x647c],cl        # 6a86 <_end+0x2a6e>
 60a:	00 24 06             	add    BYTE PTR [rsi+rax*1],ah
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 613:	00 02                	add    BYTE PTR [rdx],al
 615:	24 06                	and    al,0x6
 617:	00 00                	add    BYTE PTR [rax],al
 619:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 61d:	00 02                	add    BYTE PTR [rdx],al
 61f:	64 00 00             	add    BYTE PTR fs:[rax],al
 622:	00 00                	add    BYTE PTR [rax],al
 624:	05 38 05 00 00       	add    eax,0x538
 629:	21 c7                	and    edi,eax
 62b:	03 00                	add    eax,DWORD PTR [rax]
 62d:	00 13                	add    BYTE PTR [rbx],dl
 62f:	25 0d 35 06 00       	and    eax,0x6350d
 634:	00 05 64 00 00 00    	add    BYTE PTR [rip+0x64],al        # 69e <__abi_tag+0x312>
 63a:	08 39                	or     BYTE PTR [rcx],bh
 63c:	00 00                	add    BYTE PTR [rax],al
 63e:	00 0d 6e 64 00 00    	add    BYTE PTR [rip+0x646e],cl        # 6ab2 <_end+0x2a9a>
 644:	00 5e 06             	add    BYTE PTR [rsi+0x6],bl
 647:	00 00                	add    BYTE PTR [rax],al
 649:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 64d:	00 02                	add    BYTE PTR [rdx],al
 64f:	64 00 00             	add    BYTE PTR fs:[rax],al
 652:	00 02                	add    BYTE PTR [rdx],al
 654:	64 00 00             	add    BYTE PTR fs:[rax],al
 657:	00 02                	add    BYTE PTR [rdx],al
 659:	24 06                	and    al,0x6
 65b:	00 00                	add    BYTE PTR [rax],al
 65d:	00 08                	add    BYTE PTR [rax],cl
 65f:	93                   	xchg   ebx,eax
 660:	04 00                	add    al,0x0
 662:	00 0d 65 64 00 00    	add    BYTE PTR [rip+0x6465],cl        # 6acd <_end+0x2ab5>
 668:	00 73 06             	add    BYTE PTR [rbx+0x6],dh
 66b:	00 00                	add    BYTE PTR [rax],al
 66d:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 671:	00 00                	add    BYTE PTR [rax],al
 673:	07                   	(bad)
 674:	a8 03                	test   al,0x3
 676:	00 00                	add    BYTE PTR [rax],al
 678:	0f 65 01             	pcmpgtw mm0,QWORD PTR [rcx]
 67b:	0c 64                	or     al,0x64
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 90 06 00 00 02    	add    BYTE PTR [rax+0x2000006],dl
 685:	4a 04 00             	rex.WX add al,0x0
 688:	00 02                	add    BYTE PTR [rdx],al
 68a:	e3 00                	jrcxz  68c <__abi_tag+0x300>
 68c:	00 00                	add    BYTE PTR [rax],al
 68e:	16                   	(bad)
 68f:	00 07                	add    BYTE PTR [rdi],al
 691:	49 02 00             	rex.WB add al,BYTE PTR [r8]
 694:	00 09                	add    BYTE PTR [rcx],cl
 696:	28 01                	sub    BYTE PTR [rcx],al
 698:	0c 64                	or     al,0x64
 69a:	00 00                	add    BYTE PTR [rax],al
 69c:	00 ac 06 00 00 02 64 	add    BYTE PTR [rsi+rax*1+0x64020000],ch
 6a3:	00 00                	add    BYTE PTR [rax],al
 6a5:	00 02                	add    BYTE PTR [rdx],al
 6a7:	64 00 00             	add    BYTE PTR fs:[rax],al
 6aa:	00 00                	add    BYTE PTR [rax],al
 6ac:	08 23                	or     BYTE PTR [rbx],ah
 6ae:	02 00                	add    al,BYTE PTR [rax]
 6b0:	00 09                	add    BYTE PTR [rcx],cl
 6b2:	70 64                	jo     718 <__abi_tag+0x38c>
 6b4:	00 00                	add    BYTE PTR [rax],al
 6b6:	00 cb                	add    bl,cl
 6b8:	06                   	(bad)
 6b9:	00 00                	add    BYTE PTR [rax],al
 6bb:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 6bf:	00 02                	add    BYTE PTR [rdx],al
 6c1:	0e                   	(bad)
 6c2:	02 00                	add    al,BYTE PTR [rax]
 6c4:	00 02                	add    BYTE PTR [rdx],al
 6c6:	26 01 00             	es add DWORD PTR [rax],eax
 6c9:	00 00                	add    BYTE PTR [rax],al
 6cb:	22 a1 04 00 00 0f    	and    ah,BYTE PTR [rcx+0xf000004]
 6d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6d2:	03 0d de 06 00 00    	add    ecx,DWORD PTR [rip+0x6de]        # db6 <__abi_tag+0xa2a>
 6d8:	02 de                	add    bl,dh
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	00 00                	add    BYTE PTR [rax],al
 6de:	08 43 00             	or     BYTE PTR [rbx+0x0],al
 6e1:	00 00                	add    BYTE PTR [rax],al
 6e3:	09 66 64             	or     DWORD PTR [rsi+0x64],esp
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	00 fd                	add    ch,bh
 6ea:	06                   	(bad)
 6eb:	00 00                	add    BYTE PTR [rax],al
 6ed:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 6f1:	00 02                	add    BYTE PTR [rdx],al
 6f3:	64 00 00             	add    BYTE PTR fs:[rax],al
 6f6:	00 02                	add    BYTE PTR [rdx],al
 6f8:	64 00 00             	add    BYTE PTR fs:[rax],al
 6fb:	00 00                	add    BYTE PTR [rax],al
 6fd:	07                   	(bad)
 6fe:	77 03                	ja     703 <__abi_tag+0x377>
 700:	00 00                	add    BYTE PTR [rax],al
 702:	08 92 01 11 f6 00    	or     BYTE PTR [rdx+0xf61101],dl
 708:	00 00                	add    BYTE PTR [rax],al
 70a:	14 07                	adc    al,0x7
 70c:	00 00                	add    BYTE PTR [rax],al
 70e:	02 f6                	add    dh,dh
 710:	00 00                	add    BYTE PTR [rax],al
 712:	00 00                	add    BYTE PTR [rax],al
 714:	08 f5                	or     ch,dh
 716:	02 00                	add    al,BYTE PTR [rax]
 718:	00 10                	add    BYTE PTR [rax],dl
 71a:	3a 64 00 00          	cmp    ah,BYTE PTR [rax+rax*1+0x0]
 71e:	00 33                	add    BYTE PTR [rbx],dh
 720:	07                   	(bad)
 721:	00 00                	add    BYTE PTR [rax],al
 723:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
 727:	00 02                	add    BYTE PTR [rdx],al
 729:	e3 00                	jrcxz  72b <__abi_tag+0x39f>
 72b:	00 00                	add    BYTE PTR [rax],al
 72d:	02 a4 00 00 00 00 08 	add    ah,BYTE PTR [rax+rax*1+0x8000000]
 734:	51                   	push   rcx
 735:	03 00                	add    eax,DWORD PTR [rax]
 737:	00 11                	add    BYTE PTR [rcx],dl
 739:	69 64 00 00 00 48 07 	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74800
 740:	00 
 741:	00 02                	add    BYTE PTR [rdx],al
 743:	de 00                	fiadd  WORD PTR [rax]
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 23                	add    BYTE PTR [rbx],ah
 749:	0f 05                	syscall
 74b:	00 00                	add    BYTE PTR [rax],al
 74d:	01 30                	add    DWORD PTR [rax],esi
 74f:	05 64 00 00 00       	add    eax,0x64
 754:	ee                   	out    dx,al
 755:	14 00                	adc    al,0x0
 757:	00 00                	add    BYTE PTR [rax],al
 759:	00 00                	add    BYTE PTR [rax],al
 75b:	00 36                	add    BYTE PTR [rsi],dh
 75d:	03 00                	add    eax,DWORD PTR [rax]
 75f:	00 00                	add    BYTE PTR [rax],al
 761:	00 00                	add    BYTE PTR [rax],al
 763:	00 01                	add    BYTE PTR [rcx],al
 765:	9c                   	pushf
 766:	15 08 00 00 13       	adc    eax,0x13000008
 76b:	b5 04                	mov    ch,0x4
 76d:	00 00                	add    BYTE PTR [rax],al
 76f:	30 0e                	xor    BYTE PTR [rsi],cl
 771:	64 00 00             	add    BYTE PTR fs:[rax],al
 774:	00 03                	add    BYTE PTR [rbx],al
 776:	91                   	xchg   ecx,eax
 777:	bc 77 13 44 04       	mov    esp,0x4441377
 77c:	00 00                	add    BYTE PTR [rax],al
 77e:	30 1b                	xor    BYTE PTR [rbx],bl
 780:	5e                   	pop    rsi
 781:	02 00                	add    al,BYTE PTR [rax]
 783:	00 03                	add    BYTE PTR [rbx],al
 785:	91                   	xchg   ecx,eax
 786:	b0 77                	mov    al,0x77
 788:	0a c8                	or     cl,al
 78a:	01 00                	add    DWORD PTR [rax],eax
 78c:	00 36                	add    BYTE PTR [rsi],dh
 78e:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
 792:	00 03                	add    BYTE PTR [rbx],al
 794:	91                   	xchg   ecx,eax
 795:	c0 77 0e 65          	shl    BYTE PTR [rdi+0xe],0x65
 799:	70 00                	jo     79b <__abi_tag+0x40f>
 79b:	3b 09                	cmp    ecx,DWORD PTR [rcx]
 79d:	64 00 00             	add    BYTE PTR fs:[rax],al
 7a0:	00 03                	add    BYTE PTR [rbx],al
 7a2:	91                   	xchg   ecx,eax
 7a3:	c4                   	(bad)
 7a4:	77 0e                	ja     7b4 <__abi_tag+0x428>
 7a6:	65 76 74             	gs jbe 81d <__abi_tag+0x491>
 7a9:	00 41 18             	add    BYTE PTR [rcx+0x18],al
 7ac:	38 05 00 00 03 91    	cmp    BYTE PTR [rip+0xffffffff91030000],al        # ffffffff910307b2 <_end+0xffffffff9102c79a>
 7b2:	d4                   	(bad)
 7b3:	77 17                	ja     7cc <__abi_tag+0x440>
 7b5:	02 16                	add    dl,BYTE PTR [rsi]
 7b7:	00 00                	add    BYTE PTR [rax],al
 7b9:	00 00                	add    BYTE PTR [rax],al
 7bb:	00 00                	add    BYTE PTR [rax],al
 7bd:	07                   	(bad)
 7be:	02 00                	add    al,BYTE PTR [rax]
 7c0:	00 00                	add    BYTE PTR [rax],al
 7c2:	00 00                	add    BYTE PTR [rax],al
 7c4:	00 0a                	add    BYTE PTR [rdx],cl
 7c6:	0d 02 00 00 45       	or     eax,0x45000002
 7cb:	0d 64 00 00 00       	or     eax,0x64
 7d0:	03 91 c8 77 0a 28    	add    edx,DWORD PTR [rcx+0x280a77c8]
 7d6:	02 00                	add    al,BYTE PTR [rax]
 7d8:	00 4e 0d             	add    BYTE PTR [rsi+0xd],cl
 7db:	64 00 00             	add    BYTE PTR fs:[rax],al
 7de:	00 03                	add    BYTE PTR [rbx],al
 7e0:	91                   	xchg   ecx,eax
 7e1:	cc                   	int3
 7e2:	77 17                	ja     7fb <__abi_tag+0x46f>
 7e4:	0d 17 00 00 00       	or     eax,0x17
 7e9:	00 00                	add    BYTE PTR [rax],al
 7eb:	00 fc                	add    ah,bh
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 00                	add    BYTE PTR [rax],al
 7f1:	00 00                	add    BYTE PTR [rax],al
 7f3:	00 0e                	add    BYTE PTR [rsi],cl
 7f5:	62 75 66 00 5d 12    	vminsh xmm10,xmm19,WORD PTR [rdx]
 7fb:	15 08 00 00 03       	adc    eax,0x3000008
 800:	91                   	xchg   ecx,eax
 801:	e0 77                	loopne 87a <__abi_tag+0x4ee>
 803:	0e                   	(bad)
 804:	72 65                	jb     86b <__abi_tag+0x4df>
 806:	73 00                	jae    808 <__abi_tag+0x47c>
 808:	5e                   	pop    rsi
 809:	11 64 00 00          	adc    DWORD PTR [rax+rax*1+0x0],esp
 80d:	00 03                	add    BYTE PTR [rbx],al
 80f:	91                   	xchg   ecx,eax
 810:	d0 77 00             	shl    BYTE PTR [rdi+0x0],1
 813:	00 00                	add    BYTE PTR [rax],al
 815:	0d ba 00 00 00       	or     eax,0xba
 81a:	26 08 00             	es or  BYTE PTR [rax],al
 81d:	00 24 43             	add    BYTE PTR [rbx+rax*2],ah
 820:	00 00                	add    BYTE PTR [rax],al
 822:	00 ff                	add    bh,bh
 824:	03 00                	add    eax,DWORD PTR [rax]
 826:	25 fe 01 00 00       	and    eax,0x1fe
 82b:	01 15 05 64 00 00    	add    DWORD PTR [rip+0x6405],edx        # 6c36 <_end+0x2c1e>
 831:	00 c9                	add    cl,cl
 833:	13 00                	adc    eax,DWORD PTR [rax]
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 00                	add    BYTE PTR [rax],al
 839:	00 25 01 00 00 00    	add    BYTE PTR [rip+0x1],ah        # 840 <__abi_tag+0x4b4>
 83f:	00 00                	add    BYTE PTR [rax],al
 841:	00 01                	add    BYTE PTR [rcx],al
 843:	9c                   	pushf
 844:	13 31                	adc    esi,DWORD PTR [rcx]
 846:	00 00                	add    BYTE PTR [rax],al
 848:	00 15 1a b5 00 00    	add    BYTE PTR [rip+0xb51a],dl        # bd68 <_end+0x7d50>
 84e:	00 03                	add    BYTE PTR [rbx],al
 850:	91                   	xchg   ecx,eax
 851:	b8 7f 0a 15 03       	mov    eax,0x3150a7f
 856:	00 00                	add    BYTE PTR [rax],al
 858:	16                   	(bad)
 859:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
 85d:	00 02                	add    BYTE PTR [rdx],al
 85f:	91                   	xchg   ecx,eax
 860:	48 0a c8             	rex.W or cl,al
 863:	01 00                	add    DWORD PTR [rax],eax
 865:	00 17                	add    BYTE PTR [rdi],dl
 867:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
 86b:	00 02                	add    BYTE PTR [rdx],al
 86d:	91                   	xchg   ecx,eax
 86e:	4c 0e                	rex.WR (bad)
 870:	69 70 00 18 09 64 00 	imul   esi,DWORD PTR [rax+0x0],0x640918
 877:	00 00                	add    BYTE PTR [rax],al
 879:	02 91 44 0a 37 02    	add    dl,BYTE PTR [rcx+0x2370a44]
 87f:	00 00                	add    BYTE PTR [rax],al
 881:	1b 18                	sbb    ebx,DWORD PTR [rax]
 883:	bf 01 00 00 02       	mov    edi,0x2000001
 888:	91                   	xchg   ecx,eax
 889:	50                   	push   rax
 88a:	00 00                	add    BYTE PTR [rax],al
 88c:	44 02 00             	add    r8b,BYTE PTR [rax]
 88f:	00 05 00 01 08 17    	add    BYTE PTR [rip+0x17080100],al        # 17080995 <_end+0x1707c97d>
 895:	02 00                	add    al,BYTE PTR [rax]
 897:	00 0a                	add    BYTE PTR [rdx],cl
 899:	79 00                	jns    89b <__abi_tag+0x50f>
 89b:	00 00                	add    BYTE PTR [rax],al
 89d:	1d ac 01 00 00       	sbb    eax,0x1ac
 8a2:	0c 00                	or     al,0x0
 8a4:	00 00                	add    BYTE PTR [rax],al
 8a6:	24 18                	and    al,0x18
 8a8:	00 00                	add    BYTE PTR [rax],al
 8aa:	00 00                	add    BYTE PTR [rax],al
 8ac:	00 00                	add    BYTE PTR [rax],al
 8ae:	72 02                	jb     8b2 <__abi_tag+0x526>
 8b0:	00 00                	add    BYTE PTR [rax],al
 8b2:	00 00                	add    BYTE PTR [rax],al
 8b4:	00 00                	add    BYTE PTR [rax],al
 8b6:	f1                   	int1
 8b7:	01 00                	add    DWORD PTR [rax],eax
 8b9:	00 05 6d 01 00 00    	add    BYTE PTR [rip+0x16d],al        # a2c <__abi_tag+0x6a0>
 8bf:	02 d6                	add    dl,dh
 8c1:	17                   	(bad)
 8c2:	3a 00                	cmp    al,BYTE PTR [rax]
 8c4:	00 00                	add    BYTE PTR [rax],al
 8c6:	01 08                	add    DWORD PTR [rax],ecx
 8c8:	07                   	(bad)
 8c9:	24 01                	and    al,0x1
 8cb:	00 00                	add    BYTE PTR [rax],al
 8cd:	0b 04 05 69 6e 74 00 	or     eax,DWORD PTR [rax*1+0x746e69]
 8d4:	08 41 00             	or     BYTE PTR [rcx+0x0],al
 8d7:	00 00                	add    BYTE PTR [rax],al
 8d9:	01 08                	add    DWORD PTR [rax],ecx
 8db:	05 45 01 00 00       	add    eax,0x145
 8e0:	01 08                	add    DWORD PTR [rax],ecx
 8e2:	05 40 01 00 00       	add    eax,0x140
 8e7:	01 01                	add    DWORD PTR [rcx],eax
 8e9:	08 56 03             	or     BYTE PTR [rsi+0x3],dl
 8ec:	00 00                	add    BYTE PTR [rax],al
 8ee:	01 02                	add    DWORD PTR [rdx],eax
 8f0:	07                   	(bad)
 8f1:	fd                   	std
 8f2:	03 00                	add    eax,DWORD PTR [rax]
 8f4:	00 01                	add    BYTE PTR [rcx],al
 8f6:	04 07                	add    al,0x7
 8f8:	29 01                	sub    DWORD PTR [rcx],eax
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	01 01                	add    DWORD PTR [rcx],eax
 8fe:	06                   	(bad)
 8ff:	58                   	pop    rax
 900:	03 00                	add    eax,DWORD PTR [rax]
 902:	00 01                	add    BYTE PTR [rcx],al
 904:	02 05 6d 03 00 00    	add    al,BYTE PTR [rip+0x36d]        # c77 <__abi_tag+0x8eb>
 90a:	0c 08                	or     al,0x8
 90c:	06                   	(bad)
 90d:	85 00                	test   DWORD PTR [rax],eax
 90f:	00 00                	add    BYTE PTR [rax],al
 911:	01 01                	add    DWORD PTR [rcx],eax
 913:	06                   	(bad)
 914:	5f                   	pop    rdi
 915:	03 00                	add    eax,DWORD PTR [rax]
 917:	00 01                	add    BYTE PTR [rcx],al
 919:	08 07                	or     BYTE PTR [rdi],al
 91b:	1f                   	(bad)
 91c:	01 00                	add    DWORD PTR [rax],eax
 91e:	00 05 49 05 00 00    	add    BYTE PTR [rip+0x549],al        # e6d <__abi_tag+0xae1>
 924:	03 0f                	add    ecx,DWORD PTR [rdi]
 926:	11 a4 00 00 00 08 93 	adc    DWORD PTR [rax+rax*1-0x6cf80000],esp
 92d:	00 00                	add    BYTE PTR [rax],al
 92f:	00 06                	add    BYTE PTR [rsi],al
 931:	a9 00 00 00 0d       	test   eax,0xd000000
 936:	7e 00                	jle    938 <__abi_tag+0x5ac>
 938:	00 00                	add    BYTE PTR [rax],al
 93a:	b8 00 00 00 07       	mov    eax,0x7000000
 93f:	7e 00                	jle    941 <__abi_tag+0x5b5>
 941:	00 00                	add    BYTE PTR [rax],al
 943:	00 0e                	add    BYTE PTR [rsi],cl
 945:	28 03                	sub    BYTE PTR [rbx],al
 947:	11 09                	adc    DWORD PTR [rcx],ecx
 949:	0b 01                	or     eax,DWORD PTR [rcx]
 94b:	00 00                	add    BYTE PTR [rax],al
 94d:	02 57 05             	add    dl,BYTE PTR [rdi+0x5]
 950:	00 00                	add    BYTE PTR [rax],al
 952:	12 07                	adc    al,BYTE PTR [rdi]
 954:	93                   	xchg   ebx,eax
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 00                	add    BYTE PTR [rax],al
 959:	0f 65 6e 64          	pcmpgtw mm5,QWORD PTR [rsi+0x64]
 95d:	00 03                	add    BYTE PTR [rbx],al
 95f:	13 07                	adc    eax,DWORD PTR [rdi]
 961:	93                   	xchg   ebx,eax
 962:	00 00                	add    BYTE PTR [rax],al
 964:	00 08                	add    BYTE PTR [rax],cl
 966:	02 a0 05 00 00 14    	add    ah,BYTE PTR [rax+0x14000005]
 96c:	10 9f 00 00 00 10    	adc    BYTE PTR [rdi+0x10000000],bl
 972:	02 97 05 00 00 15    	add    dl,BYTE PTR [rdi+0x15000005]
 978:	10 9f 00 00 00 18    	adc    BYTE PTR [rdi+0x18000000],bl
 97e:	02 87 05 00 00 16    	add    al,BYTE PTR [rdi+0x16000005]
 984:	0f 48 00             	cmovs  eax,DWORD PTR [rax]
 987:	00 00                	add    BYTE PTR [rax],al
 989:	20 02                	and    BYTE PTR [rdx],al
 98b:	8c 05 00 00 17 0f    	mov    WORD PTR [rip+0xf170000],es        # f170991 <_end+0xf16c979>
 991:	48 00 00             	rex.W add BYTE PTR [rax],al
 994:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 997:	05 81 05 00 00       	add    eax,0x581
 99c:	03 18                	add    ebx,DWORD PTR [rax]
 99e:	03 b8 00 00 00 10    	add    edi,DWORD PTR [rax+0x10000000]
 9a4:	92                   	xchg   edx,eax
 9a5:	05 00 00 04 af       	add    eax,0xaf040000
 9aa:	02 0d 2a 01 00 00    	add    cl,BYTE PTR [rip+0x12a]        # ada <__abi_tag+0x74e>
 9b0:	07                   	(bad)
 9b1:	7e 00                	jle    9b3 <__abi_tag+0x627>
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 11                	add    BYTE PTR [rcx],dl
 9b7:	a8 05                	test   al,0x5
 9b9:	00 00                	add    BYTE PTR [rax],al
 9bb:	04 a0                	add    al,0xa0
 9bd:	02 0e                	add    cl,BYTE PTR [rsi]
 9bf:	7e 00                	jle    9c1 <__abi_tag+0x635>
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	41 01 00             	add    DWORD PTR [r8],eax
 9c6:	00 07                	add    BYTE PTR [rdi],al
 9c8:	2e 00 00             	cs add BYTE PTR [rax],al
 9cb:	00 00                	add    BYTE PTR [rax],al
 9cd:	09 71 05             	or     DWORD PTR [rcx+0x5],esi
 9d0:	00 00                	add    BYTE PTR [rax],al
 9d2:	32 41 00             	xor    al,BYTE PTR [rcx+0x0]
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	c9                   	leave
 9d8:	19 00                	sbb    DWORD PTR [rax],eax
 9da:	00 00                	add    BYTE PTR [rax],al
 9dc:	00 00                	add    BYTE PTR [rax],al
 9de:	00 cd                	add    ch,cl
 9e0:	00 00                	add    BYTE PTR [rax],al
 9e2:	00 00                	add    BYTE PTR [rax],al
 9e4:	00 00                	add    BYTE PTR [rax],al
 9e6:	00 01                	add    BYTE PTR [rcx],al
 9e8:	9c                   	pushf
 9e9:	88 01                	mov    BYTE PTR [rcx],al
 9eb:	00 00                	add    BYTE PTR [rax],al
 9ed:	03 71 00             	add    esi,DWORD PTR [rcx+0x0]
 9f0:	32 16                	xor    dl,BYTE PTR [rsi]
 9f2:	88 01                	mov    BYTE PTR [rcx],al
 9f4:	00 00                	add    BYTE PTR [rax],al
 9f6:	02 91 58 03 63 00    	add    dl,BYTE PTR [rcx+0x630358]
 9fc:	32 1e                	xor    bl,BYTE PTR [rsi]
 9fe:	93                   	xchg   ebx,eax
 9ff:	00 00                	add    BYTE PTR [rax],al
 a01:	00 02                	add    BYTE PTR [rdx],al
 a03:	91                   	xchg   ecx,eax
 a04:	50                   	push   rax
 a05:	04 74                	add    al,0x74
 a07:	6d                   	ins    DWORD PTR es:[rdi],dx
 a08:	70 00                	jo     a0a <__abi_tag+0x67e>
 a0a:	41 0a 93 00 00 00 02 	or     dl,BYTE PTR [r11+0x2000000]
 a11:	91                   	xchg   ecx,eax
 a12:	68 00 06 0b 01       	push   0x10b0600
 a17:	00 00                	add    BYTE PTR [rax],al
 a19:	09 5d 05             	or     DWORD PTR [rbp+0x5],ebx
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	1e                   	(bad)
 a1f:	41 00 00             	add    BYTE PTR [r8],al
 a22:	00 15 19 00 00 00    	add    BYTE PTR [rip+0x19],dl        # a41 <__abi_tag+0x6b5>
 a28:	00 00                	add    BYTE PTR [rax],al
 a2a:	00 b4 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],dh
 a31:	00 00                	add    BYTE PTR [rax],al
 a33:	01 9c d4 01 00 00 03 	add    DWORD PTR [rsp+rdx*8+0x3000001],ebx
 a3a:	71 00                	jno    a3c <__abi_tag+0x6b0>
 a3c:	1e                   	(bad)
 a3d:	17                   	(bad)
 a3e:	88 01                	mov    BYTE PTR [rcx],al
 a40:	00 00                	add    BYTE PTR [rax],al
 a42:	02 91 58 03 63 00    	add    dl,BYTE PTR [rcx+0x630358]
 a48:	1e                   	(bad)
 a49:	1f                   	(bad)
 a4a:	93                   	xchg   ebx,eax
 a4b:	00 00                	add    BYTE PTR [rax],al
 a4d:	00 02                	add    BYTE PTR [rdx],al
 a4f:	91                   	xchg   ecx,eax
 a50:	50                   	push   rax
 a51:	04 74                	add    al,0x74
 a53:	6d                   	ins    DWORD PTR es:[rdi],dx
 a54:	70 00                	jo     a56 <__abi_tag+0x6ca>
 a56:	25 0a 93 00 00       	and    eax,0x930a
 a5b:	00 02                	add    BYTE PTR [rdx],al
 a5d:	91                   	xchg   ecx,eax
 a5e:	68 00 12 7b 05       	push   0x57b1200
 a63:	00 00                	add    BYTE PTR [rax],al
 a65:	01 18                	add    DWORD PTR [rax],ebx
 a67:	06                   	(bad)
 a68:	de 18                	ficomp WORD PTR [rax]
 a6a:	00 00                	add    BYTE PTR [rax],al
 a6c:	00 00                	add    BYTE PTR [rax],al
 a6e:	00 00                	add    BYTE PTR [rax],al
 a70:	37                   	(bad)
 a71:	00 00                	add    BYTE PTR [rax],al
 a73:	00 00                	add    BYTE PTR [rax],al
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 01                	add    BYTE PTR [rcx],al
 a79:	9c                   	pushf
 a7a:	ff 01                	inc    DWORD PTR [rcx]
 a7c:	00 00                	add    BYTE PTR [rax],al
 a7e:	03 71 00             	add    esi,DWORD PTR [rcx+0x0]
 a81:	18 19                	sbb    BYTE PTR [rcx],bl
 a83:	88 01                	mov    BYTE PTR [rcx],al
 a85:	00 00                	add    BYTE PTR [rax],al
 a87:	02 91 68 00 13 68    	add    dl,BYTE PTR [rcx+0x68130068]
 a8d:	05 00 00 01 03       	add    eax,0x3010000
 a92:	08 88 01 00 00 24    	or     BYTE PTR [rax+0x24000001],cl
 a98:	18 00                	sbb    BYTE PTR [rax],al
 a9a:	00 00                	add    BYTE PTR [rax],al
 a9c:	00 00                	add    BYTE PTR [rax],al
 a9e:	00 ba 00 00 00 00    	add    BYTE PTR [rdx+0x0],bh
 aa4:	00 00                	add    BYTE PTR [rax],al
 aa6:	00 01                	add    BYTE PTR [rcx],al
 aa8:	9c                   	pushf
 aa9:	14 4e                	adc    al,0x4e
 aab:	05 00 00 01 03       	add    eax,0x3010000
 ab0:	23 3a                	and    edi,DWORD PTR [rdx]
 ab2:	00 00                	add    BYTE PTR [rax],al
 ab4:	00 02                	add    BYTE PTR [rdx],al
 ab6:	91                   	xchg   ecx,eax
 ab7:	58                   	pop    rax
 ab8:	04 6d                	add    al,0x6d
 aba:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 abc:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
 abf:	80 00 00             	add    BYTE PTR [rax],0x0
 ac2:	00 02                	add    BYTE PTR [rdx],al
 ac4:	91                   	xchg   ecx,eax
 ac5:	60                   	(bad)
 ac6:	04 71                	add    al,0x71
 ac8:	00 09                	add    BYTE PTR [rcx],cl
 aca:	0c 88                	or     al,0x88
 acc:	01 00                	add    DWORD PTR [rax],eax
 ace:	00 02                	add    BYTE PTR [rdx],al
 ad0:	91                   	xchg   ecx,eax
 ad1:	68 00 00 25 03       	push   0x3250000
 ad6:	00 00                	add    BYTE PTR [rax],al
 ad8:	05 00 01 08 62       	add    eax,0x62080100
 add:	03 00                	add    eax,DWORD PTR [rax]
 adf:	00 10                	add    BYTE PTR [rax],dl
 ae1:	79 00                	jns    ae3 <__abi_tag+0x757>
 ae3:	00 00                	add    BYTE PTR [rax],al
 ae5:	1d c4 01 00 00       	sbb    eax,0x1c4
 aea:	0c 00                	or     al,0x0
 aec:	00 00                	add    BYTE PTR [rax],al
 aee:	96                   	xchg   esi,eax
 aef:	1a 00                	sbb    al,BYTE PTR [rax]
 af1:	00 00                	add    BYTE PTR [rax],al
 af3:	00 00                	add    BYTE PTR [rax],al
 af5:	00 22                	add    BYTE PTR [rdx],ah
 af7:	02 00                	add    al,BYTE PTR [rax]
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 00                	add    BYTE PTR [rax],al
 afd:	00 58 03             	add    BYTE PTR [rax+0x3],bl
 b00:	00 00                	add    BYTE PTR [rax],al
 b02:	01 08                	add    DWORD PTR [rax],ecx
 b04:	07                   	(bad)
 b05:	24 01                	and    al,0x1
 b07:	00 00                	add    BYTE PTR [rax],al
 b09:	11 04 05 69 6e 74 00 	adc    DWORD PTR [rax*1+0x746e69],eax
 b10:	0a 35 00 00 00 01    	or     dh,BYTE PTR [rip+0x1000000]        # 1000b16 <_end+0xffcafe>
 b16:	08 05 45 01 00 00    	or     BYTE PTR [rip+0x145],al        # c61 <__abi_tag+0x8d5>
 b1c:	01 08                	add    DWORD PTR [rax],ecx
 b1e:	05 40 01 00 00       	add    eax,0x140
 b23:	01 01                	add    DWORD PTR [rcx],eax
 b25:	08 56 03             	or     BYTE PTR [rsi+0x3],dl
 b28:	00 00                	add    BYTE PTR [rax],al
 b2a:	01 02                	add    DWORD PTR [rdx],eax
 b2c:	07                   	(bad)
 b2d:	fd                   	std
 b2e:	03 00                	add    eax,DWORD PTR [rax]
 b30:	00 01                	add    BYTE PTR [rcx],al
 b32:	04 07                	add    al,0x7
 b34:	29 01                	sub    DWORD PTR [rcx],eax
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	01 01                	add    DWORD PTR [rcx],eax
 b3a:	06                   	(bad)
 b3b:	58                   	pop    rax
 b3c:	03 00                	add    eax,DWORD PTR [rax]
 b3e:	00 01                	add    BYTE PTR [rcx],al
 b40:	02 05 6d 03 00 00    	add    al,BYTE PTR [rip+0x36d]        # eb3 <__abi_tag+0xb27>
 b46:	12 08                	adc    cl,BYTE PTR [rax]
 b48:	01 01                	add    DWORD PTR [rcx],eax
 b4a:	06                   	(bad)
 b4b:	5f                   	pop    rdi
 b4c:	03 00                	add    eax,DWORD PTR [rax]
 b4e:	00 01                	add    BYTE PTR [rcx],al
 b50:	08 07                	or     BYTE PTR [rdi],al
 b52:	1f                   	(bad)
 b53:	01 00                	add    DWORD PTR [rax],eax
 b55:	00 03                	add    BYTE PTR [rbx],al
 b57:	13 06                	adc    eax,DWORD PTR [rsi]
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	02 1b                	add    bl,BYTE PTR [rbx]
 b5d:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
 b5f:	00 00                	add    BYTE PTR [rax],al
 b61:	00 03                	add    BYTE PTR [rbx],al
 b63:	49 05 00 00 03 0f    	rex.WB add rax,0xf030000
 b69:	11 9f 00 00 00 0a    	adc    DWORD PTR [rdi+0xa000000],ebx
 b6f:	8e 00                	mov    es,WORD PTR [rax]
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	06                   	(bad)
 b74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 b75:	00 00                	add    BYTE PTR [rax],al
 b77:	00 13                	add    BYTE PTR [rbx],dl
 b79:	72 00                	jb     b7b <__abi_tag+0x7ef>
 b7b:	00 00                	add    BYTE PTR [rax],al
 b7d:	b3 00                	mov    bl,0x0
 b7f:	00 00                	add    BYTE PTR [rax],al
 b81:	07                   	(bad)
 b82:	72 00                	jb     b84 <__abi_tag+0x7f8>
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 0b                	add    BYTE PTR [rbx],cl
 b88:	28 03                	sub    BYTE PTR [rbx],al
 b8a:	11 0a                	adc    DWORD PTR [rdx],ecx
 b8c:	01 00                	add    DWORD PTR [rax],eax
 b8e:	00 02                	add    BYTE PTR [rdx],al
 b90:	57                   	push   rdi
 b91:	05 00 00 03 12       	add    eax,0x12030000
 b96:	07                   	(bad)
 b97:	8e 00                	mov    es,WORD PTR [rax]
 b99:	00 00                	add    BYTE PTR [rax],al
 b9b:	00 0c 65 6e 64 00 03 	add    BYTE PTR [riz*2+0x300646e],cl
 ba2:	13 07                	adc    eax,DWORD PTR [rdi]
 ba4:	8e 00                	mov    es,WORD PTR [rax]
 ba6:	00 00                	add    BYTE PTR [rax],al
 ba8:	08 02                	or     BYTE PTR [rdx],al
 baa:	a0 05 00 00 03 14 10 	movabs al,ds:0x9a101403000005
 bb1:	9a 00 
 bb3:	00 00                	add    BYTE PTR [rax],al
 bb5:	10 02                	adc    BYTE PTR [rdx],al
 bb7:	97                   	xchg   edi,eax
 bb8:	05 00 00 03 15       	add    eax,0x15030000
 bbd:	10 9a 00 00 00 18    	adc    BYTE PTR [rdx+0x18000000],bl
 bc3:	02 87 05 00 00 03    	add    al,BYTE PTR [rdi+0x3000005]
 bc9:	16                   	(bad)
 bca:	0f 3c                	(bad)
 bcc:	00 00                	add    BYTE PTR [rax],al
 bce:	00 20                	add    BYTE PTR [rax],ah
 bd0:	02 8c 05 00 00 03 17 	add    cl,BYTE PTR [rbp+rax*1+0x17030000]
 bd7:	0f 3c                	(bad)
 bd9:	00 00                	add    BYTE PTR [rax],al
 bdb:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
 bde:	03 81 05 00 00 03    	add    eax,DWORD PTR [rcx+0x3000005]
 be4:	18 03                	sbb    BYTE PTR [rbx],al
 be6:	b3 00                	mov    bl,0x0
 be8:	00 00                	add    BYTE PTR [rax],al
 bea:	14 07                	adc    al,0x7
 bec:	04 5d                	add    al,0x5d
 bee:	00 00                	add    BYTE PTR [rax],al
 bf0:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
 bf3:	0e                   	(bad)
 bf4:	31 01                	xor    DWORD PTR [rcx],eax
 bf6:	00 00                	add    BYTE PTR [rax],al
 bf8:	0d ba 05 00 00       	or     eax,0x5ba
 bfd:	00 0d f2 05 00 00    	add    BYTE PTR [rip+0x5f2],cl        # 11f5 <htons@plt+0x5>
 c03:	01 00                	add    DWORD PTR [rax],eax
 c05:	03 55 06             	add    edx,DWORD PTR [rbp+0x6]
 c08:	00 00                	add    BYTE PTR [rax],al
 c0a:	04 0c                	add    al,0xc
 c0c:	03 16                	add    edx,DWORD PTR [rsi]
 c0e:	01 00                	add    DWORD PTR [rax],eax
 c10:	00 0b                	add    BYTE PTR [rbx],cl
 c12:	10 04 0e             	adc    BYTE PTR [rsi+rcx*1],al
 c15:	60                   	(bad)
 c16:	01 00                	add    DWORD PTR [rax],eax
 c18:	00 0c 4e             	add    BYTE PTR [rsi+rcx*2],cl
 c1b:	75 6d                	jne    c8a <__abi_tag+0x8fe>
 c1d:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
 c20:	09 35 00 00 00 00    	or     DWORD PTR [rip+0x0],esi        # c26 <__abi_tag+0x89a>
 c26:	02 c7                	add    al,bh
 c28:	05 00 00 04 10       	add    eax,0x10040000
 c2d:	14 60                	adc    al,0x60
 c2f:	01 00                	add    DWORD PTR [rax],eax
 c31:	00 08                	add    BYTE PTR [rax],cl
 c33:	00 06                	add    BYTE PTR [rsi],al
 c35:	31 01                	xor    DWORD PTR [rcx],eax
 c37:	00 00                	add    BYTE PTR [rax],al
 c39:	03 e7                	add    esp,edi
 c3b:	05 00 00 04 11       	add    eax,0x11040000
 c40:	03 3d 01 00 00 15    	add    edi,DWORD PTR [rip+0x15000001]        # 15000c47 <_end+0x14ffcc2f>
 c46:	71 05                	jno    c4d <__abi_tag+0x8c1>
 c48:	00 00                	add    BYTE PTR [rax],al
 c4a:	03 1d 05 35 00 00    	add    ebx,DWORD PTR [rip+0x3505]        # 4155 <_end+0x13d>
 c50:	00 8c 01 00 00 07 8c 	add    BYTE PTR [rcx+rax*1-0x73f90000],cl
 c57:	01 00                	add    DWORD PTR [rax],eax
 c59:	00 07                	add    BYTE PTR [rdi],al
 c5b:	8e 00                	mov    es,WORD PTR [rax]
 c5d:	00 00                	add    BYTE PTR [rax],al
 c5f:	00 06                	add    BYTE PTR [rsi],al
 c61:	0a 01                	or     al,BYTE PTR [rcx]
 c63:	00 00                	add    BYTE PTR [rax],al
 c65:	0e                   	(bad)
 c66:	1d 06 00 00 20       	sbb    eax,0x20000006
 c6b:	44 1c 00             	rex.R sbb al,0x0
 c6e:	00 00                	add    BYTE PTR [rax],al
 c70:	00 00                	add    BYTE PTR [rax],al
 c72:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 c76:	00 00                	add    BYTE PTR [rax],al
 c78:	00 00                	add    BYTE PTR [rax],al
 c7a:	00 01                	add    BYTE PTR [rcx],al
 c7c:	9c                   	pushf
 c7d:	08 02                	or     BYTE PTR [rdx],al
 c7f:	00 00                	add    BYTE PTR [rax],al
 c81:	04 ed                	add    al,0xed
 c83:	05 00 00 20 25       	add    eax,0x25200000
 c88:	08 02                	or     BYTE PTR [rdx],al
 c8a:	00 00                	add    BYTE PTR [rax],al
 c8c:	02 91 58 0f 71 00    	add    dl,BYTE PTR [rcx+0x710f58]
 c92:	20 32                	and    BYTE PTR [rdx],dh
 c94:	8c 01                	mov    WORD PTR [rcx],es
 c96:	00 00                	add    BYTE PTR [rax],al
 c98:	02 91 50 05 63 1c    	add    dl,BYTE PTR [rcx+0x1c630550]
 c9e:	00 00                	add    BYTE PTR [rax],al
 ca0:	00 00                	add    BYTE PTR [rax],al
 ca2:	00 00                	add    BYTE PTR [rax],al
 ca4:	52                   	push   rdx
 ca5:	00 00                	add    BYTE PTR [rax],al
 ca7:	00 00                	add    BYTE PTR [rax],al
 ca9:	00 00                	add    BYTE PTR [rax],al
 cab:	00 08                	add    BYTE PTR [rax],cl
 cad:	30 06                	xor    BYTE PTR [rsi],al
 caf:	00 00                	add    BYTE PTR [rax],al
 cb1:	23 0d 35 00 00 00    	and    ecx,DWORD PTR [rip+0x35]        # cec <__abi_tag+0x960>
 cb7:	02 91 64 05 7f 1c    	add    dl,BYTE PTR [rcx+0x1c7f0564]
 cbd:	00 00                	add    BYTE PTR [rax],al
 cbf:	00 00                	add    BYTE PTR [rax],al
 cc1:	00 00                	add    BYTE PTR [rax],al
 cc3:	36 00 00             	ss add BYTE PTR [rax],al
 cc6:	00 00                	add    BYTE PTR [rax],al
 cc8:	00 00                	add    BYTE PTR [rax],al
 cca:	00 08                	add    BYTE PTR [rax],cl
 ccc:	e2 05                	loop   cd3 <__abi_tag+0x947>
 cce:	00 00                	add    BYTE PTR [rax],al
 cd0:	26 12 8e 00 00 00 02 	es adc cl,BYTE PTR [rsi+0x2000000]
 cd7:	91                   	xchg   ecx,eax
 cd8:	68 00 00 00 06       	push   0x6000000
 cdd:	65 01 00             	add    DWORD PTR gs:[rax],eax
 ce0:	00 16                	add    BYTE PTR [rsi],dl
 ce2:	d3 05 00 00 01 16    	rol    DWORD PTR [rip+0x16010000],cl        # 16010ce8 <_end+0x1600ccd0>
 ce8:	06                   	(bad)
 ce9:	de 1b                	ficomp WORD PTR [rbx]
 ceb:	00 00                	add    BYTE PTR [rax],al
 ced:	00 00                	add    BYTE PTR [rax],al
 cef:	00 00                	add    BYTE PTR [rax],al
 cf1:	66 00 00             	data16 add BYTE PTR [rax],al
 cf4:	00 00                	add    BYTE PTR [rax],al
 cf6:	00 00                	add    BYTE PTR [rax],al
 cf8:	00 01                	add    BYTE PTR [rcx],al
 cfa:	9c                   	pushf
 cfb:	72 02                	jb     cff <__abi_tag+0x973>
 cfd:	00 00                	add    BYTE PTR [rax],al
 cff:	04 ed                	add    al,0xed
 d01:	05 00 00 16 26       	add    eax,0x26160000
 d06:	08 02                	or     BYTE PTR [rdx],al
 d08:	00 00                	add    BYTE PTR [rax],al
 d0a:	02 91 58 0f 71 00    	add    dl,BYTE PTR [rcx+0x710f58]
 d10:	16                   	(bad)
 d11:	33 8c 01 00 00 02 91 	xor    ecx,DWORD PTR [rcx+rax*1-0x6efe0000]
 d18:	50                   	push   rax
 d19:	04 49                	add    al,0x49
 d1b:	05 00 00 16 3e       	add    eax,0x3e160000
 d20:	9f                   	lahf
 d21:	00 00                	add    BYTE PTR [rax],al
 d23:	00 02                	add    BYTE PTR [rdx],al
 d25:	91                   	xchg   ecx,eax
 d26:	48 05 f2 1b 00 00    	add    rax,0x1bf2
 d2c:	00 00                	add    BYTE PTR [rax],al
 d2e:	00 00                	add    BYTE PTR [rax],al
 d30:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
 d33:	00 00                	add    BYTE PTR [rax],al
 d35:	00 00                	add    BYTE PTR [rax],al
 d37:	00 09                	add    BYTE PTR [rcx],cl
 d39:	69 00 17 0e 35 00    	imul   eax,DWORD PTR [rax],0x350e17
 d3f:	00 00                	add    BYTE PTR [rax],al
 d41:	02 91 6c 00 00 17    	add    dl,BYTE PTR [rcx+0x1700006c]
 d47:	3a 06                	cmp    al,BYTE PTR [rsi]
 d49:	00 00                	add    BYTE PTR [rax],al
 d4b:	01 0d 05 35 00 00    	add    DWORD PTR [rip+0x3505],ecx        # 4256 <_end+0x23e>
 d51:	00 93 1b 00 00 00    	add    BYTE PTR [rbx+0x1b],dl
 d57:	00 00                	add    BYTE PTR [rax],al
 d59:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
 d5c:	00 00                	add    BYTE PTR [rax],al
 d5e:	00 00                	add    BYTE PTR [rax],al
 d60:	00 00                	add    BYTE PTR [rax],al
 d62:	01 9c c1 02 00 00 04 	add    DWORD PTR [rcx+rax*8+0x4000002],ebx
 d69:	ed                   	in     eax,dx
 d6a:	05 00 00 0d 2c       	add    eax,0x2c0d0000
 d6f:	08 02                	or     BYTE PTR [rdx],al
 d71:	00 00                	add    BYTE PTR [rax],al
 d73:	02 91 58 05 9f 1b    	add    dl,BYTE PTR [rcx+0x1b9f0558]
 d79:	00 00                	add    BYTE PTR [rax],al
 d7b:	00 00                	add    BYTE PTR [rax],al
 d7d:	00 00                	add    BYTE PTR [rax],al
 d7f:	38 00                	cmp    BYTE PTR [rax],al
 d81:	00 00                	add    BYTE PTR [rax],al
 d83:	00 00                	add    BYTE PTR [rax],al
 d85:	00 00                	add    BYTE PTR [rax],al
 d87:	09 69 00             	or     DWORD PTR [rcx+0x0],ebp
 d8a:	0e                   	(bad)
 d8b:	0e                   	(bad)
 d8c:	35 00 00 00 02       	xor    eax,0x2000000
 d91:	91                   	xchg   ecx,eax
 d92:	6c                   	ins    BYTE PTR es:[rdi],dx
 d93:	00 00                	add    BYTE PTR [rax],al
 d95:	0e                   	(bad)
 d96:	01 06                	add    DWORD PTR [rsi],eax
 d98:	00 00                	add    BYTE PTR [rax],al
 d9a:	03 96 1a 00 00 00    	add    edx,DWORD PTR [rsi+0x1a]
 da0:	00 00                	add    BYTE PTR [rax],al
 da2:	00 fd                	add    ch,bh
 da4:	00 00                	add    BYTE PTR [rax],al
 da6:	00 00                	add    BYTE PTR [rax],al
 da8:	00 00                	add    BYTE PTR [rax],al
 daa:	00 01                	add    BYTE PTR [rcx],al
 dac:	9c                   	pushf
 dad:	19 03                	sbb    DWORD PTR [rbx],eax
 daf:	00 00                	add    BYTE PTR [rax],al
 db1:	04 ed                	add    al,0xed
 db3:	05 00 00 03 24       	add    eax,0x24030000
 db8:	08 02                	or     BYTE PTR [rdx],al
 dba:	00 00                	add    BYTE PTR [rax],al
 dbc:	02 91 48 08 af 05    	add    dl,BYTE PTR [rcx+0x5af0848]
 dc2:	00 00                	add    BYTE PTR [rax],al
 dc4:	06                   	(bad)
 dc5:	0f 19 03             	nop    DWORD PTR [rbx]
 dc8:	00 00                	add    BYTE PTR [rax],al
 dca:	03 91 60 06 05 61    	add    edx,DWORD PTR [rcx+0x61050660]
 dd0:	1b 00                	sbb    eax,DWORD PTR [rax]
 dd2:	00 00                	add    BYTE PTR [rax],al
 dd4:	00 00                	add    BYTE PTR [rax],al
 dd6:	00 18                	add    BYTE PTR [rax],bl
 dd8:	00 00                	add    BYTE PTR [rax],al
 dda:	00 00                	add    BYTE PTR [rax],al
 ddc:	00 00                	add    BYTE PTR [rax],al
 dde:	00 09                	add    BYTE PTR [rcx],cl
 de0:	69 00 07 0d 35 00    	imul   eax,DWORD PTR [rax],0x350d07
 de6:	00 00                	add    BYTE PTR [rax],al
 de8:	02 91 54 00 00 18    	add    dl,BYTE PTR [rcx+0x18000054]
 dee:	82                   	(bad)
 def:	00 00                	add    BYTE PTR [rax],al
 df1:	00 19                	add    BYTE PTR [rcx],bl
 df3:	2e 00 00             	cs add BYTE PTR [rax],al
 df6:	00 03                	add    BYTE PTR [rbx],al
 df8:	91                   	xchg   ecx,eax
 df9:	58                   	pop    rax
 dfa:	06                   	(bad)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 0d 00 03 0e 3a    	add    DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0306 <_end+0x3a0dc2ee>
   6:	0b 3b                	or     edi,DWORD PTR [rbx]
   8:	0b 39                	or     edi,DWORD PTR [rcx]
   a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   d:	38 0b                	cmp    BYTE PTR [rbx],cl
   f:	00 00                	add    BYTE PTR [rax],al
  11:	02 05 00 49 13 00    	add    al,BYTE PTR [rip+0x134900]        # 134917 <_end+0x1308ff>
  17:	00 03                	add    BYTE PTR [rbx],al
  19:	16                   	(bad)
  1a:	00 03                	add    BYTE PTR [rbx],al
  1c:	0e                   	(bad)
  1d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  21:	39 0b                	cmp    DWORD PTR [rbx],ecx
  23:	49 13 00             	adc    rax,QWORD PTR [r8]
  26:	00 04 28             	add    BYTE PTR [rax+rbp*1],al
  29:	00 03                	add    BYTE PTR [rbx],al
  2b:	0e                   	(bad)
  2c:	1c 0b                	sbb    al,0xb
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	05 0f 00 0b 21       	add    eax,0x210b000f
  35:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	06                   	(bad)
  3b:	24 00                	and    al,0x0
  3d:	0b 0b                	or     ecx,DWORD PTR [rbx]
  3f:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
  42:	0e                   	(bad)
  43:	00 00                	add    BYTE PTR [rax],al
  45:	07                   	(bad)
  46:	2e 01 3f             	cs add DWORD PTR [rdi],edi
  49:	19 03                	sbb    DWORD PTR [rbx],eax
  4b:	0e                   	(bad)
  4c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  4e:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270b8d <_end+0x1926cb75>
  54:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
  58:	01 13                	add    DWORD PTR [rbx],edx
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	08 2e                	or     BYTE PTR [rsi],ch
  5e:	01 3f                	add    DWORD PTR [rdi],edi
  60:	19 03                	sbb    DWORD PTR [rbx],eax
  62:	0e                   	(bad)
  63:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  65:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  67:	39 21                	cmp    DWORD PTR [rcx],esp
  69:	0c 27                	or     al,0x27
  6b:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  6e:	3c 19                	cmp    al,0x19
  70:	01 13                	add    DWORD PTR [rbx],edx
  72:	00 00                	add    BYTE PTR [rax],al
  74:	09 28                	or     DWORD PTR [rax],ebp
  76:	00 03                	add    BYTE PTR [rbx],al
  78:	0e                   	(bad)
  79:	1c 06                	sbb    al,0x6
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
  80:	03 0e                	add    ecx,DWORD PTR [rsi]
  82:	3a 21                	cmp    ah,BYTE PTR [rcx]
  84:	01 3b                	add    DWORD PTR [rbx],edi
  86:	0b 39                	or     edi,DWORD PTR [rcx]
  88:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  8b:	02 18                	add    bl,BYTE PTR [rax]
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	0b 28                	or     ebp,DWORD PTR [rax]
  91:	00 03                	add    BYTE PTR [rbx],al
  93:	0e                   	(bad)
  94:	1c 05                	sbb    al,0x5
  96:	00 00                	add    BYTE PTR [rax],al
  98:	0c 13                	or     al,0x13
  9a:	01 03                	add    DWORD PTR [rbx],eax
  9c:	0e                   	(bad)
  9d:	0b 0b                	or     ecx,DWORD PTR [rbx]
  9f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  a1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  a3:	39 21                	cmp    DWORD PTR [rcx],esp
  a5:	08 01                	or     BYTE PTR [rcx],al
  a7:	13 00                	adc    eax,DWORD PTR [rax]
  a9:	00 0d 01 01 49 13    	add    BYTE PTR [rip+0x13490101],cl        # 134901b0 <_end+0x1348c198>
  af:	01 13                	add    DWORD PTR [rbx],edx
  b1:	00 00                	add    BYTE PTR [rax],al
  b3:	0e                   	(bad)
  b4:	34 00                	xor    al,0x0
  b6:	03 08                	add    ecx,DWORD PTR [rax]
  b8:	3a 21                	cmp    ah,BYTE PTR [rcx]
  ba:	01 3b                	add    DWORD PTR [rbx],edi
  bc:	0b 39                	or     edi,DWORD PTR [rcx]
  be:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  c1:	02 18                	add    bl,BYTE PTR [rax]
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	0f 37                	getsec
  c7:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  ca:	00 00                	add    BYTE PTR [rax],al
  cc:	10 21                	adc    BYTE PTR [rcx],ah
  ce:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  d1:	2f                   	(bad)
  d2:	0b 00                	or     eax,DWORD PTR [rax]
  d4:	00 11                	add    BYTE PTR [rcx],dl
  d6:	0d 00 03 08 3a       	or     eax,0x3a080300
  db:	21 0d 3b 0b 39 0b    	and    DWORD PTR [rip+0xb390b3b],ecx        # b390c1c <_end+0xb38cc04>
  e1:	49 13 00             	adc    rax,QWORD PTR [r8]
  e4:	00 12                	add    BYTE PTR [rdx],dl
  e6:	13 00                	adc    eax,DWORD PTR [rax]
  e8:	03 0e                	add    ecx,DWORD PTR [rsi]
  ea:	3c 19                	cmp    al,0x19
  ec:	00 00                	add    BYTE PTR [rax],al
  ee:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e03f4 <_end+0x3a0dc3dc>
  f4:	21 01                	and    DWORD PTR [rcx],eax
  f6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  f8:	39 0b                	cmp    DWORD PTR [rbx],ecx
  fa:	49 13 02             	adc    rax,QWORD PTR [r10]
  fd:	18 00                	sbb    BYTE PTR [rax],al
  ff:	00 14 04             	add    BYTE PTR [rsp+rax*1],dl
 102:	01 03                	add    DWORD PTR [rbx],eax
 104:	0e                   	(bad)
 105:	3e 21 07             	ds and DWORD PTR [rdi],eax
 108:	0b 21                	or     esp,DWORD PTR [rcx]
 10a:	04 49                	add    al,0x49
 10c:	13 3a                	adc    edi,DWORD PTR [rdx]
 10e:	0b 3b                	or     edi,DWORD PTR [rbx]
 110:	0b 39                	or     edi,DWORD PTR [rcx]
 112:	21 06                	and    DWORD PTR [rsi],eax
 114:	01 13                	add    DWORD PTR [rbx],edx
 116:	00 00                	add    BYTE PTR [rax],al
 118:	15 17 00 0b 21       	adc    eax,0x210b0017
 11d:	08 3a                	or     BYTE PTR [rdx],bh
 11f:	21 09                	and    DWORD PTR [rcx],ecx
 121:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 123:	39 21                	cmp    DWORD PTR [rcx],esp
 125:	09 00                	or     DWORD PTR [rax],eax
 127:	00 16                	add    BYTE PTR [rsi],dl
 129:	18 00                	sbb    BYTE PTR [rax],al
 12b:	00 00                	add    BYTE PTR [rax],al
 12d:	17                   	(bad)
 12e:	0b 01                	or     eax,DWORD PTR [rcx]
 130:	11 01                	adc    DWORD PTR [rcx],eax
 132:	12 07                	adc    al,BYTE PTR [rdi]
 134:	00 00                	add    BYTE PTR [rax],al
 136:	18 11                	sbb    BYTE PTR [rcx],dl
 138:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b144c <_end+0x30ad434>
 13e:	1f                   	(bad)
 13f:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
 141:	11 01                	adc    DWORD PTR [rcx],eax
 143:	12 07                	adc    al,BYTE PTR [rdi]
 145:	10 17                	adc    BYTE PTR [rdi],dl
 147:	00 00                	add    BYTE PTR [rax],al
 149:	19 24 00             	sbb    DWORD PTR [rax+rax*1],esp
 14c:	0b 0b                	or     ecx,DWORD PTR [rbx]
 14e:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 151:	08 00                	or     BYTE PTR [rax],al
 153:	00 1a                	add    BYTE PTR [rdx],bl
 155:	0f 00 0b             	str    WORD PTR [rbx]
 158:	0b 00                	or     eax,DWORD PTR [rax]
 15a:	00 1b                	add    BYTE PTR [rbx],bl
 15c:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
 160:	00 00                	add    BYTE PTR [rax],al
 162:	1c 16                	sbb    al,0x16
 164:	00 03                	add    BYTE PTR [rbx],al
 166:	0e                   	(bad)
 167:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 169:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 16b:	39 0b                	cmp    DWORD PTR [rbx],ecx
 16d:	00 00                	add    BYTE PTR [rax],al
 16f:	1d 34 00 03 0e       	sbb    eax,0xe030034
 174:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 176:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 178:	39 0b                	cmp    DWORD PTR [rbx],ecx
 17a:	49 13 3f             	adc    rdi,QWORD PTR [r15]
 17d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
 180:	00 00                	add    BYTE PTR [rax],al
 182:	1e                   	(bad)
 183:	26 00 00             	es add BYTE PTR [rax],al
 186:	00 1f                	add    BYTE PTR [rdi],bl
 188:	04 01                	add    al,0x1
 18a:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 18d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 190:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 192:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 194:	39 0b                	cmp    DWORD PTR [rbx],ecx
 196:	01 13                	add    DWORD PTR [rbx],edx
 198:	00 00                	add    BYTE PTR [rax],al
 19a:	20 17                	and    BYTE PTR [rdi],dl
 19c:	01 03                	add    DWORD PTR [rbx],eax
 19e:	0e                   	(bad)
 19f:	0b 0b                	or     ecx,DWORD PTR [rbx]
 1a1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1a3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1a5:	39 0b                	cmp    DWORD PTR [rbx],ecx
 1a7:	01 13                	add    DWORD PTR [rbx],edx
 1a9:	00 00                	add    BYTE PTR [rax],al
 1ab:	21 2e                	and    DWORD PTR [rsi],ebp
 1ad:	00 3f                	add    BYTE PTR [rdi],bh
 1af:	19 03                	sbb    DWORD PTR [rbx],eax
 1b1:	0e                   	(bad)
 1b2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1b4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1b6:	39 0b                	cmp    DWORD PTR [rbx],ecx
 1b8:	27                   	(bad)
 1b9:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 1bc:	3c 19                	cmp    al,0x19
 1be:	00 00                	add    BYTE PTR [rax],al
 1c0:	22 2e                	and    ch,BYTE PTR [rsi]
 1c2:	01 3f                	add    DWORD PTR [rdi],edi
 1c4:	19 03                	sbb    DWORD PTR [rbx],eax
 1c6:	0e                   	(bad)
 1c7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1c9:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270d08 <_end+0x1926ccf0>
 1cf:	3c 19                	cmp    al,0x19
 1d1:	01 13                	add    DWORD PTR [rbx],edx
 1d3:	00 00                	add    BYTE PTR [rax],al
 1d5:	23 2e                	and    ebp,DWORD PTR [rsi]
 1d7:	01 3f                	add    DWORD PTR [rdi],edi
 1d9:	19 03                	sbb    DWORD PTR [rbx],eax
 1db:	0e                   	(bad)
 1dc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1de:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1e0:	39 0b                	cmp    DWORD PTR [rbx],ecx
 1e2:	27                   	(bad)
 1e3:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 1e6:	11 01                	adc    DWORD PTR [rcx],eax
 1e8:	12 07                	adc    al,BYTE PTR [rdi]
 1ea:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
 1ef:	13 00                	adc    eax,DWORD PTR [rax]
 1f1:	00 24 21             	add    BYTE PTR [rcx+riz*1],ah
 1f4:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 1f7:	2f                   	(bad)
 1f8:	05 00 00 25 2e       	add    eax,0x2e250000
 1fd:	01 3f                	add    DWORD PTR [rdi],edi
 1ff:	19 03                	sbb    DWORD PTR [rbx],eax
 201:	0e                   	(bad)
 202:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 204:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 206:	39 0b                	cmp    DWORD PTR [rbx],ecx
 208:	27                   	(bad)
 209:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 20c:	11 01                	adc    DWORD PTR [rcx],eax
 20e:	12 07                	adc    al,BYTE PTR [rdi]
 210:	40 18 7c 19 00       	sbb    BYTE PTR [rcx+rbx*1+0x0],dil
 215:	00 00                	add    BYTE PTR [rax],al
 217:	01 24 00             	add    DWORD PTR [rax+rax*1],esp
 21a:	0b 0b                	or     ecx,DWORD PTR [rbx]
 21c:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 21f:	0e                   	(bad)
 220:	00 00                	add    BYTE PTR [rax],al
 222:	02 0d 00 03 0e 3a    	add    cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0528 <_end+0x3a0dc510>
 228:	21 03                	and    DWORD PTR [rbx],eax
 22a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 22c:	39 0b                	cmp    DWORD PTR [rbx],ecx
 22e:	49 13 38             	adc    rdi,QWORD PTR [r8]
 231:	0b 00                	or     eax,DWORD PTR [rax]
 233:	00 03                	add    BYTE PTR [rbx],al
 235:	05 00 03 08 3a       	add    eax,0x3a080300
 23a:	21 01                	and    DWORD PTR [rcx],eax
 23c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 23e:	39 0b                	cmp    DWORD PTR [rbx],ecx
 240:	49 13 02             	adc    rax,QWORD PTR [r10]
 243:	18 00                	sbb    BYTE PTR [rax],al
 245:	00 04 34             	add    BYTE PTR [rsp+rsi*1],al
 248:	00 03                	add    BYTE PTR [rbx],al
 24a:	08 3a                	or     BYTE PTR [rdx],bh
 24c:	21 01                	and    DWORD PTR [rcx],eax
 24e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 250:	39 0b                	cmp    DWORD PTR [rbx],ecx
 252:	49 13 02             	adc    rax,QWORD PTR [r10]
 255:	18 00                	sbb    BYTE PTR [rax],al
 257:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e030273 <_end+0xe02c25b>
 25d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 25f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 261:	39 0b                	cmp    DWORD PTR [rbx],ecx
 263:	49 13 00             	adc    rax,QWORD PTR [r8]
 266:	00 06                	add    BYTE PTR [rsi],al
 268:	0f 00 0b             	str    WORD PTR [rbx]
 26b:	21 08                	and    DWORD PTR [rax],ecx
 26d:	49 13 00             	adc    rax,QWORD PTR [r8]
 270:	00 07                	add    BYTE PTR [rdi],al
 272:	05 00 49 13 00       	add    eax,0x134900
 277:	00 08                	add    BYTE PTR [rax],cl
 279:	35 00 49 13 00       	xor    eax,0x134900
 27e:	00 09                	add    BYTE PTR [rcx],cl
 280:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 283:	19 03                	sbb    DWORD PTR [rbx],eax
 285:	0e                   	(bad)
 286:	3a 21                	cmp    ah,BYTE PTR [rcx]
 288:	01 3b                	add    DWORD PTR [rbx],edi
 28a:	0b 39                	or     edi,DWORD PTR [rcx]
 28c:	21 05 27 19 49 13    	and    DWORD PTR [rip+0x13491927],eax        # 13491bb9 <_end+0x1348dba1>
 292:	11 01                	adc    DWORD PTR [rcx],eax
 294:	12 07                	adc    al,BYTE PTR [rdi]
 296:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
 29a:	01 13                	add    DWORD PTR [rbx],edx
 29c:	00 00                	add    BYTE PTR [rax],al
 29e:	0a 11                	or     dl,BYTE PTR [rcx]
 2a0:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b15b4 <_end+0x30ad59c>
 2a6:	1f                   	(bad)
 2a7:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
 2a9:	11 01                	adc    DWORD PTR [rcx],eax
 2ab:	12 07                	adc    al,BYTE PTR [rdi]
 2ad:	10 17                	adc    BYTE PTR [rdi],dl
 2af:	00 00                	add    BYTE PTR [rax],al
 2b1:	0b 24 00             	or     esp,DWORD PTR [rax+rax*1]
 2b4:	0b 0b                	or     ecx,DWORD PTR [rbx]
 2b6:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 2b9:	08 00                	or     BYTE PTR [rax],al
 2bb:	00 0c 0f             	add    BYTE PTR [rdi+rcx*1],cl
 2be:	00 0b                	add    BYTE PTR [rbx],cl
 2c0:	0b 00                	or     eax,DWORD PTR [rax]
 2c2:	00 0d 15 01 27 19    	add    BYTE PTR [rip+0x19270115],cl        # 192703dd <_end+0x1926c3c5>
 2c8:	49 13 01             	adc    rax,QWORD PTR [r9]
 2cb:	13 00                	adc    eax,DWORD PTR [rax]
 2cd:	00 0e                	add    BYTE PTR [rsi],cl
 2cf:	13 01                	adc    eax,DWORD PTR [rcx]
 2d1:	0b 0b                	or     ecx,DWORD PTR [rbx]
 2d3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2d5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2d7:	39 0b                	cmp    DWORD PTR [rbx],ecx
 2d9:	01 13                	add    DWORD PTR [rbx],edx
 2db:	00 00                	add    BYTE PTR [rax],al
 2dd:	0f 0d 00             	prefetch BYTE PTR [rax]
 2e0:	03 08                	add    ecx,DWORD PTR [rax]
 2e2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2e4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2e6:	39 0b                	cmp    DWORD PTR [rbx],ecx
 2e8:	49 13 38             	adc    rdi,QWORD PTR [r8]
 2eb:	0b 00                	or     eax,DWORD PTR [rax]
 2ed:	00 10                	add    BYTE PTR [rax],dl
 2ef:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 2f2:	19 03                	sbb    DWORD PTR [rbx],eax
 2f4:	0e                   	(bad)
 2f5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2f7:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270e36 <_end+0x1926ce1e>
 2fd:	3c 19                	cmp    al,0x19
 2ff:	01 13                	add    DWORD PTR [rbx],edx
 301:	00 00                	add    BYTE PTR [rax],al
 303:	11 2e                	adc    DWORD PTR [rsi],ebp
 305:	01 3f                	add    DWORD PTR [rdi],edi
 307:	19 03                	sbb    DWORD PTR [rbx],eax
 309:	0e                   	(bad)
 30a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 30c:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR [rip+0x19270b39]        # 19270e4b <_end+0x1926ce33>
 312:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 316:	01 13                	add    DWORD PTR [rbx],edx
 318:	00 00                	add    BYTE PTR [rax],al
 31a:	12 2e                	adc    ch,BYTE PTR [rsi]
 31c:	01 3f                	add    DWORD PTR [rdi],edi
 31e:	19 03                	sbb    DWORD PTR [rbx],eax
 320:	0e                   	(bad)
 321:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 323:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 325:	39 0b                	cmp    DWORD PTR [rbx],ecx
 327:	27                   	(bad)
 328:	19 11                	sbb    DWORD PTR [rcx],edx
 32a:	01 12                	add    DWORD PTR [rdx],edx
 32c:	07                   	(bad)
 32d:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
 332:	13 00                	adc    eax,DWORD PTR [rax]
 334:	00 13                	add    BYTE PTR [rbx],dl
 336:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 339:	19 03                	sbb    DWORD PTR [rbx],eax
 33b:	0e                   	(bad)
 33c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 33e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 340:	39 0b                	cmp    DWORD PTR [rbx],ecx
 342:	27                   	(bad)
 343:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 346:	11 01                	adc    DWORD PTR [rcx],eax
 348:	12 07                	adc    al,BYTE PTR [rdi]
 34a:	40 18 7c 19 00       	sbb    BYTE PTR [rcx+rbx*1+0x0],dil
 34f:	00 14 05 00 03 0e 3a 	add    BYTE PTR [rax*1+0x3a0e0300],dl
 356:	0b 3b                	or     edi,DWORD PTR [rbx]
 358:	0b 39                	or     edi,DWORD PTR [rcx]
 35a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 35d:	02 18                	add    bl,BYTE PTR [rax]
 35f:	00 00                	add    BYTE PTR [rax],al
 361:	00 01                	add    BYTE PTR [rcx],al
 363:	24 00                	and    al,0x0
 365:	0b 0b                	or     ecx,DWORD PTR [rbx]
 367:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 36a:	0e                   	(bad)
 36b:	00 00                	add    BYTE PTR [rax],al
 36d:	02 0d 00 03 0e 3a    	add    cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0673 <_end+0x3a0dc65b>
 373:	0b 3b                	or     edi,DWORD PTR [rbx]
 375:	0b 39                	or     edi,DWORD PTR [rcx]
 377:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 37a:	38 0b                	cmp    BYTE PTR [rbx],cl
 37c:	00 00                	add    BYTE PTR [rax],al
 37e:	03 16                	add    edx,DWORD PTR [rsi]
 380:	00 03                	add    BYTE PTR [rbx],al
 382:	0e                   	(bad)
 383:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 385:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 387:	39 0b                	cmp    DWORD PTR [rbx],ecx
 389:	49 13 00             	adc    rax,QWORD PTR [r8]
 38c:	00 04 05 00 03 0e 3a 	add    BYTE PTR [rax*1+0x3a0e0300],al
 393:	21 01                	and    DWORD PTR [rcx],eax
 395:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 397:	39 0b                	cmp    DWORD PTR [rbx],ecx
 399:	49 13 02             	adc    rax,QWORD PTR [r10]
 39c:	18 00                	sbb    BYTE PTR [rax],al
 39e:	00 05 0b 01 11 01    	add    BYTE PTR [rip+0x111010b],al        # 11104af <_end+0x110c497>
 3a4:	12 07                	adc    al,BYTE PTR [rdi]
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	06                   	(bad)
 3a9:	0f 00 0b             	str    WORD PTR [rbx]
 3ac:	21 08                	and    DWORD PTR [rax],ecx
 3ae:	49 13 00             	adc    rax,QWORD PTR [r8]
 3b1:	00 07                	add    BYTE PTR [rdi],al
 3b3:	05 00 49 13 00       	add    eax,0x134900
 3b8:	00 08                	add    BYTE PTR [rax],cl
 3ba:	34 00                	xor    al,0x0
 3bc:	03 0e                	add    ecx,DWORD PTR [rsi]
 3be:	3a 21                	cmp    ah,BYTE PTR [rcx]
 3c0:	01 3b                	add    DWORD PTR [rbx],edi
 3c2:	0b 39                	or     edi,DWORD PTR [rcx]
 3c4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 3c7:	02 18                	add    bl,BYTE PTR [rax]
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
 3ce:	03 08                	add    ecx,DWORD PTR [rax]
 3d0:	3a 21                	cmp    ah,BYTE PTR [rcx]
 3d2:	01 3b                	add    DWORD PTR [rbx],edi
 3d4:	0b 39                	or     edi,DWORD PTR [rcx]
 3d6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 3d9:	02 18                	add    bl,BYTE PTR [rax]
 3db:	00 00                	add    BYTE PTR [rax],al
 3dd:	0a 35 00 49 13 00    	or     dh,BYTE PTR [rip+0x134900]        # 134ce3 <_end+0x130ccb>
 3e3:	00 0b                	add    BYTE PTR [rbx],cl
 3e5:	13 01                	adc    eax,DWORD PTR [rcx]
 3e7:	0b 0b                	or     ecx,DWORD PTR [rbx]
 3e9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 3eb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 3ed:	39 21                	cmp    DWORD PTR [rcx],esp
 3ef:	09 01                	or     DWORD PTR [rcx],eax
 3f1:	13 00                	adc    eax,DWORD PTR [rax]
 3f3:	00 0c 0d 00 03 08 3a 	add    BYTE PTR [rcx*1+0x3a080300],cl
 3fa:	0b 3b                	or     edi,DWORD PTR [rbx]
 3fc:	0b 39                	or     edi,DWORD PTR [rcx]
 3fe:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 401:	38 0b                	cmp    BYTE PTR [rbx],cl
 403:	00 00                	add    BYTE PTR [rax],al
 405:	0d 28 00 03 0e       	or     eax,0xe030028
 40a:	1c 0b                	sbb    al,0xb
 40c:	00 00                	add    BYTE PTR [rax],al
 40e:	0e                   	(bad)
 40f:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 412:	19 03                	sbb    DWORD PTR [rbx],eax
 414:	0e                   	(bad)
 415:	3a 21                	cmp    ah,BYTE PTR [rcx]
 417:	01 3b                	add    DWORD PTR [rbx],edi
 419:	0b 39                	or     edi,DWORD PTR [rcx]
 41b:	21 06                	and    DWORD PTR [rsi],eax
 41d:	27                   	(bad)
 41e:	19 11                	sbb    DWORD PTR [rcx],edx
 420:	01 12                	add    DWORD PTR [rdx],edx
 422:	07                   	(bad)
 423:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
 428:	13 00                	adc    eax,DWORD PTR [rax]
 42a:	00 0f                	add    BYTE PTR [rdi],cl
 42c:	05 00 03 08 3a       	add    eax,0x3a080300
 431:	21 01                	and    DWORD PTR [rcx],eax
 433:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 435:	39 0b                	cmp    DWORD PTR [rbx],ecx
 437:	49 13 02             	adc    rax,QWORD PTR [r10]
 43a:	18 00                	sbb    BYTE PTR [rax],al
 43c:	00 10                	add    BYTE PTR [rax],dl
 43e:	11 01                	adc    DWORD PTR [rcx],eax
 440:	25 0e 13 0b 03       	and    eax,0x30b130e
 445:	1f                   	(bad)
 446:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
 448:	11 01                	adc    DWORD PTR [rcx],eax
 44a:	12 07                	adc    al,BYTE PTR [rdi]
 44c:	10 17                	adc    BYTE PTR [rdi],dl
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	11 24 00             	adc    DWORD PTR [rax+rax*1],esp
 453:	0b 0b                	or     ecx,DWORD PTR [rbx]
 455:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 458:	08 00                	or     BYTE PTR [rax],al
 45a:	00 12                	add    BYTE PTR [rdx],dl
 45c:	0f 00 0b             	str    WORD PTR [rbx]
 45f:	0b 00                	or     eax,DWORD PTR [rax]
 461:	00 13                	add    BYTE PTR [rbx],dl
 463:	15 01 27 19 49       	adc    eax,0x49192701
 468:	13 01                	adc    eax,DWORD PTR [rcx]
 46a:	13 00                	adc    eax,DWORD PTR [rax]
 46c:	00 14 04             	add    BYTE PTR [rsp+rax*1],dl
 46f:	01 3e                	add    DWORD PTR [rsi],edi
 471:	0b 0b                	or     ecx,DWORD PTR [rbx]
 473:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 476:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 478:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 47a:	39 0b                	cmp    DWORD PTR [rbx],ecx
 47c:	01 13                	add    DWORD PTR [rbx],edx
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	15 2e 01 3f 19       	adc    eax,0x193f012e
 485:	03 0e                	add    ecx,DWORD PTR [rsi]
 487:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 489:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 48b:	39 0b                	cmp    DWORD PTR [rbx],ecx
 48d:	27                   	(bad)
 48e:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 491:	3c 19                	cmp    al,0x19
 493:	01 13                	add    DWORD PTR [rbx],edx
 495:	00 00                	add    BYTE PTR [rax],al
 497:	16                   	(bad)
 498:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 49b:	19 03                	sbb    DWORD PTR [rbx],eax
 49d:	0e                   	(bad)
 49e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4a0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 4a2:	39 0b                	cmp    DWORD PTR [rbx],ecx
 4a4:	27                   	(bad)
 4a5:	19 11                	sbb    DWORD PTR [rcx],edx
 4a7:	01 12                	add    DWORD PTR [rdx],edx
 4a9:	07                   	(bad)
 4aa:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
 4ae:	01 13                	add    DWORD PTR [rbx],edx
 4b0:	00 00                	add    BYTE PTR [rax],al
 4b2:	17                   	(bad)
 4b3:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 4b6:	19 03                	sbb    DWORD PTR [rbx],eax
 4b8:	0e                   	(bad)
 4b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 4bd:	39 0b                	cmp    DWORD PTR [rbx],ecx
 4bf:	27                   	(bad)
 4c0:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 4c3:	11 01                	adc    DWORD PTR [rcx],eax
 4c5:	12 07                	adc    al,BYTE PTR [rdi]
 4c7:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
 4cb:	01 13                	add    DWORD PTR [rbx],edx
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	18 01                	sbb    BYTE PTR [rcx],al
 4d1:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
 4d4:	00 00                	add    BYTE PTR [rax],al
 4d6:	19 21                	sbb    DWORD PTR [rcx],esp
 4d8:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 4db:	2f                   	(bad)
 4dc:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	ed                   	in     eax,dx
   1:	01 00                	add    DWORD PTR [rax],eax
   3:	00 05 00 08 00 a4    	add    BYTE PTR [rip+0xffffffffa4000800],al        # ffffffffa4000809 <_end+0xffffffffa3ffc7f1>
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	01 01                	add    DWORD PTR [rcx],eax
   f:	fb                   	sti
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     eax,0x1010100
  16:	01 00                	add    DWORD PTR [rax],eax
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	01 00                	add    DWORD PTR [rax],eax
  1c:	00 01                	add    BYTE PTR [rcx],al
  1e:	01 01                	add    DWORD PTR [rcx],eax
  20:	1f                   	(bad)
  21:	09 0c 00             	or     DWORD PTR [rax+rax*1],ecx
  24:	00 00                	add    BYTE PTR [rax],al
  26:	5f                   	pop    rdi
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	86 00                	xchg   BYTE PTR [rax],al
  30:	00 00                	add    BYTE PTR [rax],al
  32:	af                   	scas   eax,DWORD PTR es:[rdi]
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 d1                	add    cl,dl
  37:	00 00                	add    BYTE PTR [rax],al
  39:	00 e6                	add    dh,ah
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	00 0f                	add    BYTE PTR [rdi],cl
  3f:	01 00                	add    DWORD PTR [rax],eax
  41:	00 1c 01             	add    BYTE PTR [rcx+rax*1],bl
  44:	00 00                	add    BYTE PTR [rax],al
  46:	02 01                	add    al,BYTE PTR [rcx]
  48:	1f                   	(bad)
  49:	02 0f                	add    cl,BYTE PTR [rdi]
  4b:	14 04                	adc    al,0x4
  4d:	00 00                	add    BYTE PTR [rax],al
  4f:	00 01                	add    BYTE PTR [rcx],al
  51:	04 00                	add    al,0x0
  53:	00 00                	add    BYTE PTR [rax],al
  55:	01 dc                	add    esp,ebx
  57:	01 00                	add    DWORD PTR [rax],eax
  59:	00 02                	add    BYTE PTR [rdx],al
  5b:	2e 01 00             	cs add DWORD PTR [rax],eax
  5e:	00 03                	add    BYTE PTR [rbx],al
  60:	37                   	(bad)
  61:	01 00                	add    DWORD PTR [rax],eax
  63:	00 02                	add    BYTE PTR [rdx],al
  65:	dc 01                	fadd   QWORD PTR [rcx]
  67:	00 00                	add    BYTE PTR [rax],al
  69:	04 46                	add    al,0x46
  6b:	01 00                	add    DWORD PTR [rax],eax
  6d:	00 02                	add    BYTE PTR [rdx],al
  6f:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
  72:	00 02                	add    BYTE PTR [rdx],al
  74:	5a                   	pop    rdx
  75:	01 00                	add    DWORD PTR [rax],eax
  77:	00 05 46 01 00 00    	add    BYTE PTR [rip+0x146],al        # 1c3 <__abi_tag-0x1c9>
  7d:	04 5f                	add    al,0x5f
  7f:	01 00                	add    DWORD PTR [rax],eax
  81:	00 06                	add    BYTE PTR [rsi],al
  83:	66 01 00             	add    WORD PTR [rax],ax
  86:	00 06                	add    BYTE PTR [rsi],al
  88:	6d                   	ins    DWORD PTR es:[rdi],dx
  89:	01 00                	add    DWORD PTR [rax],eax
  8b:	00 02                	add    BYTE PTR [rdx],al
  8d:	7b 01                	jnp    90 <__abi_tag-0x2fc>
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	04 83                	add    al,0x83
  93:	01 00                	add    DWORD PTR [rax],eax
  95:	00 07                	add    BYTE PTR [rdi],al
  97:	8c 01                	mov    WORD PTR [rcx],es
  99:	00 00                	add    BYTE PTR [rax],al
  9b:	07                   	(bad)
  9c:	94                   	xchg   esp,eax
  9d:	01 00                	add    DWORD PTR [rax],eax
  9f:	00 08                	add    BYTE PTR [rax],cl
  a1:	9b                   	fwait
  a2:	01 00                	add    DWORD PTR [rax],eax
  a4:	00 07                	add    BYTE PTR [rdi],al
  a6:	7b 01                	jnp    a9 <__abi_tag-0x2e3>
  a8:	00 00                	add    BYTE PTR [rax],al
  aa:	02 a4 01 00 00 07 05 	add    ah,BYTE PTR [rcx+rax*1+0x5070000]
  b1:	23 00                	and    eax,DWORD PTR [rax]
  b3:	09 02                	or     DWORD PTR [rdx],eax
  b5:	c9                   	leave
  b6:	13 00                	adc    eax,DWORD PTR [rax]
  b8:	00 00                	add    BYTE PTR [rax],al
  ba:	00 00                	add    BYTE PTR [rax],al
  bc:	00 03                	add    BYTE PTR [rbx],al
  be:	14 01                	adc    al,0x1
  c0:	f2 05 10 e5 05 09    	repnz add eax,0x905e510
  c6:	e5 75                	in     eax,0x75
  c8:	05 05 75 05 18       	add    eax,0x18057505
  cd:	08 a0 05 43 08 59    	or     BYTE PTR [rax+0x59084305],ah
  d3:	05 18 c7 05 0c       	add    eax,0xc05c718
  d8:	a1 05 08 08 67 05 09 	movabs eax,ds:0xe767090567080805
  df:	67 e7 
  e1:	05 08 00 02 04       	add    eax,0x4020008
  e6:	01 08                	add    DWORD PTR [rax],ecx
  e8:	82                   	(bad)
  e9:	05 09 4c 05 10       	add    eax,0x10054c09
  ee:	e5 05                	in     eax,0x5
  f0:	09 77 05             	or     DWORD PTR [rdi+0x5],esi
  f3:	08 00                	or     BYTE PTR [rax],al
  f5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
  f8:	e4 05                	in     al,0x5
  fa:	09 4b 05             	or     DWORD PTR [rbx+0x5],ecx
  fd:	10 e5                	adc    ch,ah
  ff:	05 0c 76 05 01       	add    eax,0x105760c
 104:	3d 05 21 08 5a       	cmp    eax,0x5a082105
 109:	08 ac 05 08 e5 05 09 	or     BYTE PTR [rbp+rax*1+0x905e508],ch
 110:	91                   	xchg   ecx,eax
 111:	05 10 02 2b 13       	add    eax,0x132b0210
 116:	05 23 a1 05 10       	add    eax,0x1005a123
 11b:	ac                   	lods   al,BYTE PTR ds:[rsi]
 11c:	05 08 08 13 05       	add    eax,0x5130808
 121:	10 91 05 0e a1 05    	adc    BYTE PTR [rcx+0x5a10e05],dl
 127:	08 f3                	or     bl,dh
 129:	05 09 91 05 10       	add    eax,0x10059109
 12e:	e5 05                	in     eax,0x5
 130:	18 a1 05 05 02 2b    	sbb    BYTE PTR [rcx+0x2b020505],ah
 136:	13 05 0d 08 d9 05    	adc    eax,DWORD PTR [rip+0x5d9080d]        # 5d90949 <_end+0x5d8c931>
 13c:	09 9f 05 0f 00 02    	or     DWORD PTR [rdi+0x2000f05],ebx
 142:	04 01                	add    al,0x1
 144:	58                   	pop    rax
 145:	05 0d 67 05 0c       	add    eax,0xc05670d
 14a:	00 02                	add    BYTE PTR [rdx],al
 14c:	04 01                	add    al,0x1
 14e:	08 f2                	or     dl,dh
 150:	05 11 4b 00 02       	add    eax,0x2004b11
 155:	04 01                	add    al,0x1
 157:	06                   	(bad)
 158:	58                   	pop    rax
 159:	05 10 00 02 04       	add    eax,0x4020010
 15e:	01 06                	add    DWORD PTR [rsi],eax
 160:	2e 05 11 59 e5 05    	cs add eax,0x5e55911
 166:	0d 5c 05 15 9f       	or     eax,0x9f15055c
 16b:	05 0c 66 05 1a       	add    eax,0x1a05660c
 170:	bc 05 10 02 22       	mov    esp,0x22021005
 175:	13 05 11 91 e5 05    	adc    eax,DWORD PTR [rip+0x5e59111]        # 5e5928c <_end+0x5e55274>
 17b:	0d 5a 05 18 08       	or     eax,0x818055a
 180:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 181:	05 19 9f 05 0d       	add    eax,0xd059f19
 186:	bb 05 12 02 24       	mov    ebx,0x24021205
 18b:	16                   	(bad)
 18c:	05 11 08 67 05       	add    eax,0x5670811
 191:	13 a0 05 15 59 00    	adc    esp,DWORD PTR [rax+0x591505]
 197:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
 19a:	06                   	(bad)
 19b:	58                   	pop    rax
 19c:	05 14 00 02 04       	add    eax,0x4020014
 1a1:	01 06                	add    DWORD PTR [rsi],eax
 1a3:	2e 05 15 59 08 3d    	cs add eax,0x3d085915
 1a9:	5a                   	pop    rdx
 1aa:	00 02                	add    BYTE PTR [rdx],al
 1ac:	04 01                	add    al,0x1
 1ae:	06                   	(bad)
 1af:	58                   	pop    rax
 1b0:	05 14 00 02 04       	add    eax,0x4020014
 1b5:	01 06                	add    DWORD PTR [rsi],eax
 1b7:	2e 05 15 59 e5 05    	cs add eax,0x5e55915
 1bd:	14 30                	adc    al,0x30
 1bf:	05 15 91 e6 08       	add    eax,0x8e69115
 1c4:	e5 05                	in     eax,0x5
 1c6:	1b 03                	sbb    eax,DWORD PTR [rbx]
 1c8:	73 02                	jae    1cc <__abi_tag-0x1c0>
 1ca:	23 01                	and    eax,DWORD PTR [rcx]
 1cc:	05 3f 00 02 04       	add    eax,0x402003f
 1d1:	01 08                	add    DWORD PTR [rax],ecx
 1d3:	ac                   	lods   al,BYTE PTR ds:[rsi]
 1d4:	05 19 00 02 04       	add    eax,0x4020019
 1d9:	01 74 05 14          	add    DWORD PTR [rbp+rax*1+0x14],esi
 1dd:	00 02                	add    BYTE PTR [rdx],al
 1df:	04 01                	add    al,0x1
 1e1:	90                   	nop
 1e2:	05 0f 03 64 c8       	add    eax,0xc864030f
 1e7:	05 01 03 30 58       	add    eax,0x58300301
 1ec:	02 16                	add    dl,BYTE PTR [rsi]
 1ee:	00 01                	add    BYTE PTR [rcx],al
 1f0:	01 63 01             	add    DWORD PTR [rbx+0x1],esp
 1f3:	00 00                	add    BYTE PTR [rax],al
 1f5:	05 00 08 00 49       	add    eax,0x49000800
 1fa:	00 00                	add    BYTE PTR [rax],al
 1fc:	00 01                	add    BYTE PTR [rcx],al
 1fe:	01 01                	add    DWORD PTR [rcx],eax
 200:	fb                   	sti
 201:	0e                   	(bad)
 202:	0d 00 01 01 01       	or     eax,0x1010100
 207:	01 00                	add    DWORD PTR [rax],eax
 209:	00 00                	add    BYTE PTR [rax],al
 20b:	01 00                	add    DWORD PTR [rax],eax
 20d:	00 01                	add    BYTE PTR [rcx],al
 20f:	01 01                	add    DWORD PTR [rcx],eax
 211:	1f                   	(bad)
 212:	05 0c 00 00 00       	add    eax,0xc
 217:	5f                   	pop    rdi
 218:	00 00                	add    BYTE PTR [rax],al
 21a:	00 86 00 00 00 b8    	add    BYTE PTR [rsi-0x48000000],al
 220:	01 00                	add    DWORD PTR [rax],eax
 222:	00 0f                	add    BYTE PTR [rdi],cl
 224:	01 00                	add    DWORD PTR [rax],eax
 226:	00 02                	add    BYTE PTR [rdx],al
 228:	01 1f                	add    DWORD PTR [rdi],ebx
 22a:	02 0f                	add    cl,BYTE PTR [rdi]
 22c:	05 b0 01 00 00       	add    eax,0x1b0
 231:	01 b0 01 00 00 01    	add    DWORD PTR [rax+0x1000001],esi
 237:	2e 01 00             	cs add DWORD PTR [rax],eax
 23a:	00 02                	add    BYTE PTR [rdx],al
 23c:	bc 01 00 00 03       	mov    esp,0x3000001
 241:	9b                   	fwait
 242:	01 00                	add    DWORD PTR [rax],eax
 244:	00 04 05 2d 00 09 02 	add    BYTE PTR [rax*1+0x209002d],al
 24b:	24 18                	and    al,0x18
 24d:	00 00                	add    BYTE PTR [rax],al
 24f:	00 00                	add    BYTE PTR [rax],al
 251:	00 00                	add    BYTE PTR [rax],al
 253:	14 05                	adc    al,0x5
 255:	11 f3                	adc    ebx,esi
 257:	05 08 08 3d 05       	add    eax,0x53d0808
 25c:	10 75 a1             	adc    BYTE PTR [rbp-0x5f],dh
 25f:	05 08 d7 05 09       	add    eax,0x905d708
 264:	75 05                	jne    26b <__abi_tag-0x121>
 266:	10 bb 77 05 0e 4a    	adc    BYTE PTR [rbx+0x4a0e0577],bh
 26c:	05 24 75 05 19       	add    eax,0x19057524
 271:	ba 05 0e 74 05       	mov    edx,0x5740e05
 276:	0c 3c                	or     al,0x3c
 278:	05 12 83 05 10       	add    eax,0x10058312
 27d:	4a 05 13 83 05 11    	rex.WX add rax,0x11058313
 283:	4a 05 0d 83 05 0e    	rex.WX add rax,0xe05830d
 289:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 28a:	05 0c ae 05 01       	add    eax,0x105ae0c
 28f:	4b 05 1c 2f 05 08    	rex.WXB add rax,0x8052f1c
 295:	f3 05 12 75 05 05    	repz add eax,0x5057512
 29b:	74 83                	je     220 <__abi_tag-0x16c>
 29d:	05 14 d4 05 01       	add    eax,0x105d414
 2a2:	23 05 22 30 05 08    	and    eax,DWORD PTR [rip+0x8053022]        # 80532ca <_end+0x804f2b2>
 2a8:	f3 05 1b 00 02 04    	repz add eax,0x402001b
 2ae:	01 74 06 58          	add    DWORD PTR [rsi+rax*1+0x58],esi
 2b2:	05 0b 06 5a 05       	add    eax,0x55a060b
 2b7:	1a 82 05 08 82 05    	sbb    al,BYTE PTR [rdx+0x5820805]
 2bd:	29 00                	sub    DWORD PTR [rax],eax
 2bf:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
 2c2:	58                   	pop    rax
 2c3:	05 25 00 02 04       	add    eax,0x4020025
 2c8:	01 74 05 38          	add    DWORD PTR [rbp+rax*1+0x38],esi
 2cc:	00 02                	add    BYTE PTR [rdx],al
 2ce:	04 02                	add    al,0x2
 2d0:	4a 06                	rex.WX (bad)
 2d2:	58                   	pop    rax
 2d3:	05 13 06 30 05       	add    eax,0x5300613
 2d8:	1f                   	(bad)
 2d9:	bc 05 0a 82 05       	mov    esp,0x5820a05
 2de:	1f                   	(bad)
 2df:	83 05 08 82 05 0d 67 	add    DWORD PTR [rip+0xd058208],0x67        # d0584ee <_end+0xd0544d6>
 2e6:	05 11 ae 05 08       	add    eax,0x805ae11
 2eb:	82                   	(bad)
 2ec:	05 11 67 ae 05       	add    eax,0x5ae6711
 2f1:	0e                   	(bad)
 2f2:	bb 05 0c ae 05       	mov    ebx,0x5ae0c05
 2f7:	01 59 05             	add    DWORD PTR [rcx+0x5],ebx
 2fa:	21 30                	and    DWORD PTR [rax],esi
 2fc:	05 07 f3 05 10       	add    eax,0x1005f307
 301:	75 05                	jne    308 <__abi_tag-0x84>
 303:	08 a0 05 1b 00 02    	or     BYTE PTR [rax+0x2001b05],ah
 309:	04 01                	add    al,0x1
 30b:	74 06                	je     313 <__abi_tag-0x79>
 30d:	58                   	pop    rax
 30e:	05 0b 06 5a 05       	add    eax,0x55a060b
 313:	19 82 05 08 82 05    	sbb    DWORD PTR [rdx+0x5820805],eax
 319:	2b 00                	sub    eax,DWORD PTR [rax]
 31b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
 31e:	58                   	pop    rax
 31f:	05 25 00 02 04       	add    eax,0x4020025
 324:	01 74 05 0b          	add    DWORD PTR [rbp+rax*1+0xb],esi
 328:	4b 05 12 83 05 10    	rex.WXB add rax,0x10058312
 32e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 32f:	05 07 77 05 1f       	add    eax,0x1f057707
 334:	bd 05 0a 82 05       	mov    ebp,0x5820a05
 339:	1f                   	(bad)
 33a:	83 05 08 82 05 0d 67 	add    DWORD PTR [rip+0xd058208],0x67        # d058549 <_end+0xd054531>
 341:	05 11 ae 05 08       	add    eax,0x805ae11
 346:	82                   	(bad)
 347:	05 11 67 05 10       	add    eax,0x10056711
 34c:	ae                   	scas   al,BYTE PTR es:[rdi]
 34d:	05 0c bc 05 01       	add    eax,0x105bc0c
 352:	59                   	pop    rcx
 353:	02 02                	add    al,BYTE PTR [rdx]
 355:	00 01                	add    BYTE PTR [rcx],al
 357:	01 1b                	add    DWORD PTR [rbx],ebx
 359:	01 00                	add    DWORD PTR [rax],eax
 35b:	00 05 00 08 00 45    	add    BYTE PTR [rip+0x45000800],al        # 45000b61 <_end+0x44ffcb49>
 361:	00 00                	add    BYTE PTR [rax],al
 363:	00 01                	add    BYTE PTR [rcx],al
 365:	01 01                	add    DWORD PTR [rcx],eax
 367:	fb                   	sti
 368:	0e                   	(bad)
 369:	0d 00 01 01 01       	or     eax,0x1010100
 36e:	01 00                	add    DWORD PTR [rax],eax
 370:	00 00                	add    BYTE PTR [rax],al
 372:	01 00                	add    DWORD PTR [rax],eax
 374:	00 01                	add    BYTE PTR [rcx],al
 376:	01 01                	add    DWORD PTR [rcx],eax
 378:	1f                   	(bad)
 379:	04 0c                	add    al,0xc
 37b:	00 00                	add    BYTE PTR [rax],al
 37d:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 380:	00 00                	add    BYTE PTR [rax],al
 382:	63 00                	movsxd eax,DWORD PTR [rax]
 384:	00 00                	add    BYTE PTR [rax],al
 386:	b8 01 00 00 02       	mov    eax,0x2000001
 38b:	01 1f                	add    DWORD PTR [rdi],ebx
 38d:	02 0f                	add    cl,BYTE PTR [rdi]
 38f:	05 c8 01 00 00       	add    eax,0x1c8
 394:	01 c8                	add    eax,ecx
 396:	01 00                	add    DWORD PTR [rax],eax
 398:	00 01                	add    BYTE PTR [rcx],al
 39a:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
 39e:	02 bc 01 00 00 03 e4 	add    bh,BYTE PTR [rcx+rax*1-0x1bfd0000]
 3a5:	01 00                	add    DWORD PTR [rax],eax
 3a7:	00 03                	add    BYTE PTR [rbx],al
 3a9:	05 2a 00 09 02       	add    eax,0x209002a
 3ae:	96                   	xchg   esi,eax
 3af:	1a 00                	sbb    al,BYTE PTR [rax]
 3b1:	00 00                	add    BYTE PTR [rax],al
 3b3:	00 00                	add    BYTE PTR [rax],al
 3b5:	00 14 f2             	add    BYTE PTR [rdx+rsi*8],dl
 3b8:	05 0f 08 4c 05       	add    eax,0x54c080f
 3bd:	1e                   	(bad)
 3be:	9f                   	lahf
 3bf:	05 0f 90 05 0d       	add    eax,0xd05900f
 3c4:	02 93 01 13 05 05    	add    dl,BYTE PTR [rbx+0x5051301]
 3ca:	74 05                	je     3d1 <__abi_tag+0x45>
 3cc:	23 00                	and    eax,DWORD PTR [rax]
 3ce:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
 3d1:	2e 05 1c 00 02 04    	cs add eax,0x402001c
 3d7:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
 3da:	16                   	(bad)
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	04 01                	add    al,0x1
 3df:	66 05 01 86          	add    ax,0x8601
 3e3:	05 32 08 68 05       	add    eax,0x5680832
 3e8:	0e                   	(bad)
 3e9:	bb 05 05 74 05       	mov    ebx,0x5740505
 3ee:	11 2f                	adc    DWORD PTR [rdi],ebp
 3f0:	05 1e 82 05 0c       	add    eax,0xc05821e
 3f5:	e4 05                	in     al,0x5
 3f7:	14 4b                	adc    al,0x4b
 3f9:	05 24 00 02 04       	add    eax,0x4020024
 3fe:	02 56 05             	add    dl,BYTE PTR [rsi+0x5]
 401:	1d 00 02 04 01       	sbb    eax,0x1040200
 406:	4a 05 17 00 02 04    	rex.WX add rax,0x4020017
 40c:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
 40f:	0c 5d                	or     al,0x5d
 411:	05 01 59 05 4c       	add    eax,0x4c055901
 416:	30 05 0e 08 3d 05    	xor    BYTE PTR [rip+0x53d080e],al        # 53d0c2a <_end+0x53ccc12>
 41c:	05 74 05 11 2f       	add    eax,0x2f110574
 421:	05 1e 82 05 0c       	add    eax,0xc05821e
 426:	e4 05                	in     al,0x5
 428:	11 4b 05             	adc    DWORD PTR [rbx+0x5],ecx
 42b:	1e                   	(bad)
 42c:	82                   	(bad)
 42d:	05 22 c8 05 24       	add    eax,0x2405c822
 432:	00 02                	add    BYTE PTR [rdx],al
 434:	04 02                	add    al,0x2
 436:	64 05 1d 00 02 04    	fs add eax,0x402001d
 43c:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
 43f:	17                   	(bad)
 440:	00 02                	add    BYTE PTR [rdx],al
 442:	04 01                	add    al,0x1
 444:	66 05 01 5f          	add    ax,0x5f01
 448:	05 35 4c 05 0b       	add    eax,0xb054c35
 44d:	08 3e                	or     BYTE PTR [rsi],bh
 44f:	05 08 74 05 0d       	add    eax,0xd057408
 454:	4b 05 1a 75 05 0c    	rex.WXB add rax,0xc05751a
 45a:	00 02                	add    BYTE PTR [rdx],al
 45c:	04 01                	add    al,0x1
 45e:	e4 05                	in     al,0x5
 460:	12 68 83             	adc    ch,BYTE PTR [rax-0x7d]
 463:	05 10 00 02 04       	add    eax,0x4020010
 468:	01 08                	add    DWORD PTR [rax],ecx
 46a:	2e 05 11 4b 05 01    	cs add eax,0x1054b11
 470:	08 6c 02 03          	or     BYTE PTR [rdx+rax*1+0x3],ch
 474:	00 01                	add    BYTE PTR [rcx],al
 476:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	5f                   	pop    rdi
   1:	5f                   	pop    rdi
   2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   3:	66 66 5f             	data16 pop di
   6:	74 00                	je     8 <__abi_tag-0x384>
   8:	65 70 6f             	gs jo  7a <__abi_tag-0x312>
   b:	6c                   	ins    BYTE PTR es:[rdi],dx
   c:	6c                   	ins    BYTE PTR es:[rdi],dx
   d:	5f                   	pop    rdi
   e:	64 61                	fs (bad)
  10:	74 61                	je     73 <__abi_tag-0x319>
  12:	5f                   	pop    rdi
  13:	74 00                	je     15 <__abi_tag-0x377>
  15:	45 50                	rex.RB push r8
  17:	4f                   	rex.WRXB
  18:	4c                   	rex.WR
  19:	4c                   	rex.WR
  1a:	49                   	rex.WB
  1b:	4e 00 5f 49          	rex.WRX add BYTE PTR [rdi+0x49],r11b
  1f:	4f 5f                	rex.WRXB pop r15
  21:	72 65                	jb     88 <__abi_tag-0x304>
  23:	61                   	(bad)
  24:	64 5f                	fs pop rdi
  26:	70 74                	jo     9c <__abi_tag-0x2f0>
  28:	72 00                	jb     2a <__abi_tag-0x362>
  2a:	5f                   	pop    rdi
  2b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  2e:	69 6e 00 73 65 72 76 	imul   ebp,DWORD PTR [rsi+0x0],0x76726573
  35:	69 63 65 00 65 70 6f 	imul   esp,DWORD PTR [rbx+0x65],0x6f706500
  3c:	6c                   	ins    BYTE PTR es:[rdi],dx
  3d:	6c                   	ins    BYTE PTR es:[rdi],dx
  3e:	5f                   	pop    rdi
  3f:	63 74 6c 00          	movsxd esi,DWORD PTR [rsp+rbp*2+0x0]
  43:	73 6f                	jae    b4 <__abi_tag-0x2d8>
  45:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  48:	74 00                	je     4a <__abi_tag-0x342>
  4a:	5f                   	pop    rdi
  4b:	73 68                	jae    b5 <__abi_tag-0x2d7>
  4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4e:	72 74                	jb     c4 <__abi_tag-0x2c8>
  50:	62 75 66 00 63       	(bad)
  55:	6c                   	ins    BYTE PTR es:[rdi],dx
  56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  57:	73 65                	jae    be <__abi_tag-0x2ce>
  59:	00 45 50             	add    BYTE PTR [rbp+0x50],al
  5c:	4f                   	rex.WRXB
  5d:	4c                   	rex.WR
  5e:	4c 50                	rex.WR push rax
  60:	52                   	push   rdx
  61:	49 00 45 50          	rex.WB add BYTE PTR [r13+0x50],al
  65:	4f                   	rex.WRXB
  66:	4c                   	rex.WR
  67:	4c                   	rex.WR
  68:	45 52                	rex.RB push r10
  6a:	52                   	push   rdx
  6b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
  6e:	4f 5f                	rex.WRXB pop r15
  70:	62 75 66 5f 62       	(bad)
  75:	61                   	(bad)
  76:	73 65                	jae    dd <__abi_tag-0x2af>
  78:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
  7b:	55                   	push   rbp
  7c:	20 43 31             	and    BYTE PTR [rbx+0x31],al
  7f:	37                   	(bad)
  80:	20 31                	and    BYTE PTR [rcx],dh
  82:	33 2e                	xor    ebp,DWORD PTR [rsi]
  84:	33 2e                	xor    ebp,DWORD PTR [rsi]
  86:	30 20                	xor    BYTE PTR [rax],ah
  88:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  8d:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  93:	72 69                	jb     fe <__abi_tag-0x28e>
  95:	63 20                	movsxd esp,DWORD PTR [rax]
  97:	2d 6d 61 72 63       	sub    eax,0x6372616d
  9c:	68 3d 78 38 36       	push   0x3638783d
  a1:	2d 36 34 20 2d       	sub    eax,0x2d203436
  a6:	67 20 2d 4f 30 20 2d 	and    BYTE PTR [eip+0x2d20304f],ch        # 2d2030fc <_end+0x2d1ff0e4>
  ad:	66 70 69             	data16 jo 119 <__abi_tag-0x273>
  b0:	63 20                	movsxd esp,DWORD PTR [rax]
  b2:	2d 66 61 73 79       	sub    eax,0x79736166
  b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  b8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
  bb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  be:	75 73                	jne    133 <__abi_tag-0x259>
  c0:	2d 75 6e 77 69       	sub    eax,0x69776e75
  c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  c6:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
  cc:	65 73 20             	gs jae ef <__abi_tag-0x29d>
  cf:	2d 66 73 74 61       	sub    eax,0x61747366
  d4:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  d7:	70 72                	jo     14b <__abi_tag-0x241>
  d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  da:	74 65                	je     141 <__abi_tag-0x24b>
  dc:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  e0:	2d 73 74 72 6f       	sub    eax,0x6f727473
  e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  e6:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 61747453 <_end+0x6174343b>
  ed:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  f0:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  f4:	68 2d 70 72 6f       	push   0x6f72702d
  f9:	74 65                	je     160 <__abi_tag-0x22c>
  fb:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 100:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d66646c <_end+0x2d662454>
 106:	70 72                	jo     17a <__abi_tag-0x212>
 108:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 109:	74 65                	je     170 <__abi_tag-0x21c>
 10b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 10f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 110:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 113:	43                   	rex.XB
 114:	4b 5f                	rex.WXB pop r15
 116:	4e                   	rex.WRX
 117:	4f                   	rex.WRXB
 118:	4e                   	rex.WRX
 119:	42                   	rex.X
 11a:	4c                   	rex.WR
 11b:	4f                   	rex.WRXB
 11c:	43                   	rex.XB
 11d:	4b 00 6c 6f 6e       	rex.WXB add BYTE PTR [r15+r13*2+0x6e],bpl
 122:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
 127:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
 12b:	73 69                	jae    196 <__abi_tag-0x1f6>
 12d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 12f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 134:	74 00                	je     136 <__abi_tag-0x256>
 136:	69 6e 5f 61 64 64 72 	imul   ebp,DWORD PTR [rsi+0x5f],0x72646461
 13d:	5f                   	pop    rdi
 13e:	74 00                	je     140 <__abi_tag-0x24c>
 140:	6c                   	ins    BYTE PTR es:[rdi],dx
 141:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 142:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 143:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
 148:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
 14c:	74 00                	je     14e <__abi_tag-0x23e>
 14e:	5f                   	pop    rdi
 14f:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
 156:	5f                   	pop    rdi
 157:	49                   	rex.WB
 158:	4f 5f                	rex.WRXB pop r15
 15a:	72 65                	jb     1c1 <__abi_tag-0x1cb>
 15c:	61                   	(bad)
 15d:	64 5f                	fs pop rdi
 15f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 161:	64 00 5f 66          	add    BYTE PTR fs:[rdi+0x66],bl
 165:	6c                   	ins    BYTE PTR es:[rdi],dx
 166:	61                   	(bad)
 167:	67 73 00             	addr32 jae 16a <__abi_tag-0x222>
 16a:	5f                   	pop    rdi
 16b:	5f                   	pop    rdi
 16c:	73 73                	jae    1e1 <__abi_tag-0x1ab>
 16e:	69 7a 65 5f 74 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f00745f
 175:	49                   	rex.WB
 176:	4f 5f                	rex.WRXB pop r15
 178:	62 75 66 5f 65       	(bad)
 17d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 17e:	64 00 5f 63          	add    BYTE PTR fs:[rdi+0x63],bl
 182:	75 72                	jne    1f6 <__abi_tag-0x196>
 184:	5f                   	pop    rdi
 185:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
 188:	75 6d                	jne    1f7 <__abi_tag-0x195>
 18a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 18b:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 18e:	43                   	rex.XB
 18f:	4b 5f                	rex.WXB pop r15
 191:	53                   	push   rbx
 192:	54                   	push   rsp
 193:	52                   	push   rdx
 194:	45                   	rex.RB
 195:	41                   	rex.B
 196:	4d 00 5f 49          	rex.WRB add BYTE PTR [r15+0x49],r11b
 19a:	4f 5f                	rex.WRXB pop r15
 19c:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 19f:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
 1a3:	00 5f 6f             	add    BYTE PTR [rdi+0x6f],bl
 1a6:	6c                   	ins    BYTE PTR es:[rdi],dx
 1a7:	64 5f                	fs pop rdi
 1a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1aa:	66 66 73 65          	data16 data16 jae 213 <__abi_tag-0x179>
 1ae:	74 00                	je     1b0 <__abi_tag-0x1dc>
 1b0:	5f                   	pop    rdi
 1b1:	5f                   	pop    rdi
 1b2:	75 69                	jne    21d <__abi_tag-0x16f>
 1b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1b5:	74 33                	je     1ea <__abi_tag-0x1a2>
 1b7:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
 1ba:	00 45 50             	add    BYTE PTR [rbp+0x50],al
 1bd:	4f                   	rex.WRXB
 1be:	4c                   	rex.WR
 1bf:	4c                   	rex.WR
 1c0:	4f                   	rex.WRXB
 1c1:	4e                   	rex.WRX
 1c2:	45 53                	rex.RB push r11
 1c4:	48                   	rex.W
 1c5:	4f 54                	rex.WRXB push r12
 1c7:	00 73 6f             	add    BYTE PTR [rbx+0x6f],dh
 1ca:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
 1cd:	73 69                	jae    238 <__abi_tag-0x154>
 1cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1d0:	5f                   	pop    rdi
 1d1:	7a 65                	jp     238 <__abi_tag-0x154>
 1d3:	72 6f                	jb     244 <__abi_tag-0x148>
 1d5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 1d8:	4f 5f                	rex.WRXB pop r15
 1da:	6d                   	ins    DWORD PTR es:[rdi],dx
 1db:	61                   	(bad)
 1dc:	72 6b                	jb     249 <__abi_tag-0x143>
 1de:	65 72 00             	gs jb  1e1 <__abi_tag-0x1ab>
 1e1:	53                   	push   rbx
 1e2:	4f                   	rex.WRXB
 1e3:	43                   	rex.XB
 1e4:	4b 5f                	rex.WXB pop r15
 1e6:	52                   	push   rdx
 1e7:	44                   	rex.R
 1e8:	4d 00 73 5f          	rex.WRB add BYTE PTR [r11+0x5f],r14b
 1ec:	61                   	(bad)
 1ed:	64 64 72 00          	fs fs jb 1f1 <__abi_tag-0x19b>
 1f1:	5f                   	pop    rdi
 1f2:	66 72 65             	data16 jb 25a <__abi_tag-0x132>
 1f5:	65 72 65             	gs jb  25d <__abi_tag-0x12f>
 1f8:	73 5f                	jae    259 <__abi_tag-0x133>
 1fa:	62 75 66 00 63       	(bad)
 1ff:	72 65                	jb     266 <__abi_tag-0x126>
 201:	61                   	(bad)
 202:	74 65                	je     269 <__abi_tag-0x123>
 204:	5f                   	pop    rdi
 205:	6c                   	ins    BYTE PTR es:[rdi],dx
 206:	69 73 74 6e 65 72 00 	imul   esi,DWORD PTR [rbx+0x74],0x72656e
 20d:	74 69                	je     278 <__abi_tag-0x114>
 20f:	6d                   	ins    DWORD PTR es:[rdi],dx
 210:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
 212:	75 74                	jne    288 <__abi_tag-0x104>
 214:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 217:	4f 5f                	rex.WRXB pop r15
 219:	77 72                	ja     28d <__abi_tag-0xff>
 21b:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
 222:	00 
 223:	62 69 6e 64 00       	(bad)
 228:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 22b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 22c:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
 231:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 232:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
 235:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 236:	5f                   	pop    rdi
 237:	61                   	(bad)
 238:	64 64 72 00          	fs fs jb 23c <__abi_tag-0x150>
 23c:	53                   	push   rbx
 23d:	4f                   	rex.WRXB
 23e:	43                   	rex.XB
 23f:	4b 5f                	rex.WXB pop r15
 241:	43                   	rex.XB
 242:	4c                   	rex.WR
 243:	4f                   	rex.WRXB
 244:	45 58                	rex.RB pop r8
 246:	45                   	rex.RB
 247:	43 00 6c 69 73       	add    BYTE PTR [r9+r13*2+0x73],bpl
 24c:	74 65                	je     2b3 <__abi_tag-0xd9>
 24e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 24f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 252:	4f 5f                	rex.WRXB pop r15
 254:	73 61                	jae    2b7 <__abi_tag-0xd5>
 256:	76 65                	jbe    2bd <__abi_tag-0xcf>
 258:	5f                   	pop    rdi
 259:	62 61 73 65 00       	(bad)
 25e:	65 70 6f             	gs jo  2d0 <__abi_tag-0xbc>
 261:	6c                   	ins    BYTE PTR es:[rdi],dx
 262:	6c                   	ins    BYTE PTR es:[rdi],dx
 263:	5f                   	pop    rdi
 264:	65 76 65             	gs jbe 2cc <__abi_tag-0xc0>
 267:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 268:	74 00                	je     26a <__abi_tag-0x122>
 26a:	5f                   	pop    rdi
 26b:	6c                   	ins    BYTE PTR es:[rdi],dx
 26c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 26d:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
 270:	5f                   	pop    rdi
 271:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
 273:	61                   	(bad)
 274:	67 73 32             	addr32 jae 2a9 <__abi_tag-0xe3>
 277:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
 27a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 27b:	64 65 00 5f 5f       	fs add BYTE PTR gs:[rdi+0x5f],bl
 280:	43                   	rex.XB
 281:	4f                   	rex.WRXB
 282:	4e 53                	rex.WRX push rbx
 284:	54                   	push   rsp
 285:	5f                   	pop    rdi
 286:	53                   	push   rbx
 287:	4f                   	rex.WRXB
 288:	43                   	rex.XB
 289:	4b                   	rex.WXB
 28a:	41                   	rex.B
 28b:	44                   	rex.R
 28c:	44 52                	rex.R push rdx
 28e:	5f                   	pop    rdi
 28f:	41 52                	push   r10
 291:	47 00 77 72          	rex.RXB add BYTE PTR [r15+0x72],r14b
 295:	69 74 65 00 73 69 6e 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5f6e6973
 29c:	5f 
 29d:	66 61                	data16 (bad)
 29f:	6d                   	ins    DWORD PTR es:[rdi],dx
 2a0:	69 6c 79 00 65 70 6f 	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x6c6f7065
 2a7:	6c 
 2a8:	6c                   	ins    BYTE PTR es:[rdi],dx
 2a9:	5f                   	pop    rdi
 2aa:	77 61                	ja     30d <__abi_tag-0x7f>
 2ac:	69 74 00 5f 49 4f 5f 	imul   esi,DWORD PTR [rax+rax*1+0x5f],0x775f4f49
 2b3:	77 
 2b4:	72 69                	jb     31f <__abi_tag-0x6d>
 2b6:	74 65                	je     31d <__abi_tag-0x6f>
 2b8:	5f                   	pop    rdi
 2b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 2bb:	64 00 45 50          	add    BYTE PTR fs:[rbp+0x50],al
 2bf:	4f                   	rex.WRXB
 2c0:	4c                   	rex.WR
 2c1:	4c 52                	rex.WR push rdx
 2c3:	44                   	rex.R
 2c4:	4e                   	rex.WRX
 2c5:	4f 52                	rex.WRXB push r10
 2c7:	4d 00 45 50          	rex.WRB add BYTE PTR [r13+0x50],r8b
 2cb:	4f                   	rex.WRXB
 2cc:	4c                   	rex.WR
 2cd:	4c 57                	rex.WR push rdi
 2cf:	41                   	rex.B
 2d0:	4b                   	rex.WXB
 2d1:	45 55                	rex.RB push r13
 2d3:	50                   	push   rax
 2d4:	00 45 50             	add    BYTE PTR [rbp+0x50],al
 2d7:	4f                   	rex.WRXB
 2d8:	4c                   	rex.WR
 2d9:	4c 57                	rex.WR push rdi
 2db:	52                   	push   rdx
 2dc:	4e                   	rex.WRX
 2dd:	4f 52                	rex.WRXB push r10
 2df:	4d 00 5f 49          	rex.WRB add BYTE PTR [r15+0x49],r11b
 2e3:	4f 5f                	rex.WRXB pop r15
 2e5:	6c                   	ins    BYTE PTR es:[rdi],dx
 2e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2e7:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 2ea:	74 00                	je     2ec <__abi_tag-0xa0>
 2ec:	5f                   	pop    rdi
 2ed:	49                   	rex.WB
 2ee:	4f 5f                	rex.WRXB pop r15
 2f0:	46                   	rex.RX
 2f1:	49                   	rex.WB
 2f2:	4c                   	rex.WR
 2f3:	45 00 69 6e          	add    BYTE PTR [r9+0x6e],r13b
 2f7:	65 74 5f             	gs je  359 <__abi_tag-0x33>
 2fa:	70 74                	jo     370 <__abi_tag-0x1c>
 2fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2fe:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 301:	64 65 72 72          	fs gs jb 377 <__abi_tag-0x15>
 305:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 308:	75 69                	jne    373 <__abi_tag-0x19>
 30a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 30b:	74 36                	je     343 <__abi_tag-0x49>
 30d:	34 5f                	xor    al,0x5f
 30f:	74 00                	je     311 <__abi_tag-0x7b>
 311:	73 69                	jae    37c <__abi_tag-0x10>
 313:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 314:	5f                   	pop    rdi
 315:	70 6f                	jo     386 <__abi_tag-0x6>
 317:	72 74                	jb     38d <__abi_tag+0x1>
 319:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
 31c:	5f                   	pop    rdi
 31d:	66 61                	data16 (bad)
 31f:	6d                   	ins    DWORD PTR es:[rdi],dx
 320:	69 6c 79 00 5f 6d 61 	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x72616d5f
 327:	72 
 328:	6b 65 72 73          	imul   esp,DWORD PTR [rbp+0x72],0x73
 32c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 32f:	73 6f                	jae    3a0 <__abi_tag+0x14>
 331:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 334:	74 5f                	je     395 <__abi_tag+0x9>
 336:	74 79                	je     3b1 <__abi_tag+0x25>
 338:	70 65                	jo     39f <__abi_tag+0x13>
 33a:	00 45 50             	add    BYTE PTR [rbp+0x50],al
 33d:	4f                   	rex.WRXB
 33e:	4c                   	rex.WR
 33f:	4c 5f                	rex.WR pop rdi
 341:	43                   	rex.XB
 342:	4c                   	rex.WR
 343:	4f                   	rex.WRXB
 344:	45 58                	rex.RB pop r8
 346:	45                   	rex.RB
 347:	43 00 45 50          	rex.XB add BYTE PTR [r13+0x50],al
 34b:	4f                   	rex.WRXB
 34c:	4c                   	rex.WR
 34d:	4c                   	rex.WR
 34e:	45 54                	rex.RB push r12
 350:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 353:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 354:	69 00 75 6e 73 69    	imul   eax,DWORD PTR [rax],0x69736e75
 35a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 35c:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
 361:	61                   	(bad)
 362:	72 00                	jb     364 <__abi_tag-0x28>
 364:	45 50                	rex.RB push r8
 366:	4f                   	rex.WRXB
 367:	4c                   	rex.WR
 368:	4c                   	rex.WR
 369:	4f 55                	rex.WRXB push r13
 36b:	54                   	push   rsp
 36c:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
 36f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 370:	72 74                	jb     3e6 <__abi_tag+0x5a>
 372:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
 375:	74 00                	je     377 <__abi_tag-0x15>
 377:	68 74 6f 6e 73       	push   0x736e6f74
 37c:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
 37f:	74 61                	je     3e2 <__abi_tag+0x56>
 381:	62                   	(bad)
 382:	6c                   	ins    BYTE PTR es:[rdi],dx
 383:	65 5f                	gs pop rdi
 385:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 386:	66 66 73 65          	data16 data16 jae 3ef <__abi_tag+0x63>
 38a:	74 00                	je     38c <__abi_tag>
 38c:	53                   	push   rbx
 38d:	4f                   	rex.WRXB
 38e:	43                   	rex.XB
 38f:	4b 5f                	rex.WXB pop r15
 391:	50                   	push   rax
 392:	41                   	rex.B
 393:	43                   	rex.XB
 394:	4b                   	rex.WXB
 395:	45 54                	rex.RB push r12
 397:	00 45 50             	add    BYTE PTR [rbp+0x50],al
 39a:	4f                   	rex.WRXB
 39b:	4c                   	rex.WR
 39c:	4c                   	rex.WR
 39d:	4d 53                	rex.WRB push r11
 39f:	47 00 65 76          	rex.RXB add BYTE PTR [r13+0x76],r12b
 3a3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 3a5:	74 73                	je     41a <__abi_tag+0x8e>
 3a7:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 3aa:	72 69                	jb     415 <__abi_tag+0x89>
 3ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3ad:	74 66                	je     415 <__abi_tag+0x89>
 3af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 3b2:	73 6f                	jae    423 <__abi_tag+0x97>
 3b4:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
 3b7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 3b9:	5f                   	pop    rdi
 3ba:	74 00                	je     3bc <__abi_tag+0x30>
 3bc:	5f                   	pop    rdi
 3bd:	5f                   	pop    rdi
 3be:	75 69                	jne    429 <__abi_tag+0x9d>
 3c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c1:	74 31                	je     3f4 <__abi_tag+0x68>
 3c3:	36 5f                	ss pop rdi
 3c5:	74 00                	je     3c7 <__abi_tag+0x3b>
 3c7:	5f                   	pop    rdi
 3c8:	5f                   	pop    rdi
 3c9:	65 72 72             	gs jb  43e <__abi_tag+0xb2>
 3cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ce:	5f                   	pop    rdi
 3cf:	6c                   	ins    BYTE PTR es:[rdi],dx
 3d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3d1:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 3d4:	69 6f 6e 00 5f 5f 6f 	imul   ebp,DWORD PTR [rdi+0x6e],0x6f5f5f00
 3db:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
 3e0:	74 00                	je     3e2 <__abi_tag+0x56>
 3e2:	5f                   	pop    rdi
 3e3:	49                   	rex.WB
 3e4:	4f 5f                	rex.WRXB pop r15
 3e6:	72 65                	jb     44d <__abi_tag+0xc1>
 3e8:	61                   	(bad)
 3e9:	64 5f                	fs pop rdi
 3eb:	62 61 73 65 00       	(bad)
 3f0:	5f                   	pop    rdi
 3f1:	49                   	rex.WB
 3f2:	4f 5f                	rex.WRXB pop r15
 3f4:	73 61                	jae    457 <__abi_tag+0xcb>
 3f6:	76 65                	jbe    45d <__abi_tag+0xd1>
 3f8:	5f                   	pop    rdi
 3f9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 3fb:	64 00 73 68          	add    BYTE PTR fs:[rbx+0x68],dh
 3ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 400:	72 74                	jb     476 <__abi_tag+0xea>
 402:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
 405:	73 69                	jae    470 <__abi_tag+0xe4>
 407:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 409:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 40e:	74 00                	je     410 <__abi_tag+0x84>
 410:	45 50                	rex.RB push r8
 412:	4f                   	rex.WRXB
 413:	4c                   	rex.WR
 414:	4c 52                	rex.WR push rdx
 416:	44                   	rex.R
 417:	42                   	rex.X
 418:	41                   	rex.B
 419:	4e                   	rex.WRX
 41a:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
 41e:	70 61                	jo     481 <__abi_tag+0xf5>
 420:	64 35 00 73 61 5f    	fs xor eax,0x5f617300
 426:	66 61                	data16 (bad)
 428:	6d                   	ins    DWORD PTR es:[rdi],dx
 429:	69 6c 79 5f 74 00 5f 	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x755f0074
 430:	75 
 431:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 432:	75 73                	jne    4a7 <__abi_tag+0x11b>
 434:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
 438:	45 50                	rex.RB push r8
 43a:	4f                   	rex.WRXB
 43b:	4c                   	rex.WR
 43c:	4c 57                	rex.WR push rdi
 43e:	52                   	push   rdx
 43f:	42                   	rex.X
 440:	41                   	rex.B
 441:	4e                   	rex.WRX
 442:	44 00 61 72          	add    BYTE PTR [rcx+0x72],r12b
 446:	67 76 00             	addr32 jbe 449 <__abi_tag+0xbd>
 449:	45 50                	rex.RB push r8
 44b:	4f                   	rex.WRXB
 44c:	4c                   	rex.WR
 44d:	4c                   	rex.WR
 44e:	45 58                	rex.RB pop r8
 450:	43                   	rex.XB
 451:	4c 55                	rex.WR push rbp
 453:	53                   	push   rbx
 454:	49 56                	rex.WB push r14
 456:	45 00 45 50          	add    BYTE PTR [r13+0x50],r8b
 45a:	4f                   	rex.WRXB
 45b:	4c                   	rex.WR
 45c:	4c 52                	rex.WR push rdx
 45e:	44                   	rex.R
 45f:	48 55                	rex.W push rbp
 461:	50                   	push   rax
 462:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 465:	43                   	rex.XB
 466:	4b 5f                	rex.WXB pop r15
 468:	44                   	rex.R
 469:	47 52                	rex.RXB push r10
 46b:	41                   	rex.B
 46c:	4d 00 73 6f          	rex.WRB add BYTE PTR [r11+0x6f],r14b
 470:	63 6b 61             	movsxd ebp,DWORD PTR [rbx+0x61]
 473:	64 64 72 5f          	fs fs jb 4d6 <__abi_tag+0x14a>
 477:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f4f495f
 47e:	62 61 63 6b 75       	(bad)
 483:	70 5f                	jo     4e4 <__abi_tag+0x158>
 485:	62 61 73 65 00       	(bad)
 48a:	45 50                	rex.RB push r8
 48c:	4f                   	rex.WRXB
 48d:	4c                   	rex.WR
 48e:	4c                   	rex.WR
 48f:	48 55                	rex.W push rbp
 491:	50                   	push   rax
 492:	00 65 70             	add    BYTE PTR [rbp+0x70],ah
 495:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 496:	6c                   	ins    BYTE PTR es:[rdi],dx
 497:	6c                   	ins    BYTE PTR es:[rdi],dx
 498:	5f                   	pop    rdi
 499:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 49c:	61                   	(bad)
 49d:	74 65                	je     504 <__abi_tag+0x178>
 49f:	31 00                	xor    DWORD PTR [rax],eax
 4a1:	70 65                	jo     508 <__abi_tag+0x17c>
 4a3:	72 72                	jb     517 <__abi_tag+0x18b>
 4a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4a6:	72 00                	jb     4a8 <__abi_tag+0x11c>
 4a8:	45 50                	rex.RB push r8
 4aa:	4f                   	rex.WRXB
 4ab:	4c                   	rex.WR
 4ac:	4c 5f                	rex.WR pop rdi
 4ae:	45 56                	rex.RB push r14
 4b0:	45                   	rex.RB
 4b1:	4e 54                	rex.WRX push rsp
 4b3:	53                   	push   rbx
 4b4:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
 4b7:	67 63 00             	movsxd eax,DWORD PTR [eax]
 4ba:	73 61                	jae    51d <__abi_tag+0x191>
 4bc:	5f                   	pop    rdi
 4bd:	64 61                	fs (bad)
 4bf:	74 61                	je     522 <__abi_tag+0x196>
 4c1:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
 4c4:	72 65                	jb     52b <__abi_tag+0x19f>
 4c6:	65 72 65             	gs jb  52e <__abi_tag+0x1a2>
 4c9:	73 5f                	jae    52a <__abi_tag+0x19e>
 4cb:	6c                   	ins    BYTE PTR es:[rdi],dx
 4cc:	69 73 74 00 53 4f 43 	imul   esi,DWORD PTR [rbx+0x74],0x434f5300
 4d3:	4b 5f                	rex.WXB pop r15
 4d5:	52                   	push   rdx
 4d6:	41 57                	push   r15
 4d8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4db:	4f 5f                	rex.WRXB pop r15
 4dd:	77 69                	ja     548 <__abi_tag+0x1bc>
 4df:	64 65 5f             	fs gs pop rdi
 4e2:	64 61                	fs (bad)
 4e4:	74 61                	je     547 <__abi_tag+0x1bb>
 4e6:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 4e9:	43                   	rex.XB
 4ea:	4b 5f                	rex.WXB pop r15
 4ec:	44                   	rex.R
 4ed:	43                   	rex.XB
 4ee:	43 50                	rex.XB push r8
 4f0:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 4f3:	43                   	rex.XB
 4f4:	4b 5f                	rex.WXB pop r15
 4f6:	53                   	push   rbx
 4f7:	45 51                	rex.RB push r9
 4f9:	50                   	push   rax
 4fa:	41                   	rex.B
 4fb:	43                   	rex.XB
 4fc:	4b                   	rex.WXB
 4fd:	45 54                	rex.RB push r12
 4ff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 502:	53                   	push   rbx
 503:	4f                   	rex.WRXB
 504:	43                   	rex.XB
 505:	4b                   	rex.WXB
 506:	41                   	rex.B
 507:	44                   	rex.R
 508:	44 52                	rex.R push rdx
 50a:	5f                   	pop    rdi
 50b:	41 52                	push   r10
 50d:	47 00 6d 61          	rex.RXB add BYTE PTR [r13+0x61],r13b
 511:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f4f495f
 518:	77 72                	ja     58c <__abi_tag+0x200>
 51a:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
 521:	65 
 522:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 525:	5f                   	pop    rdi
 526:	70 6f                	jo     597 <__abi_tag+0x20b>
 528:	72 74                	jb     59e <__abi_tag+0x212>
 52a:	5f                   	pop    rdi
 52b:	74 00                	je     52d <__abi_tag+0x1a1>
 52d:	73 6f                	jae    59e <__abi_tag+0x212>
 52f:	63 6b 61             	movsxd ebp,DWORD PTR [rbx+0x61]
 532:	64 64 72 00          	fs fs jb 536 <__abi_tag+0x1aa>
 536:	65 70 6f             	gs jo  5a8 <__abi_tag+0x21c>
 539:	6c                   	ins    BYTE PTR es:[rdi],dx
 53a:	6c                   	ins    BYTE PTR es:[rdi],dx
 53b:	5f                   	pop    rdi
 53c:	64 61                	fs (bad)
 53e:	74 61                	je     5a1 <__abi_tag+0x215>
 540:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
 543:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 546:	74 34                	je     57c <__abi_tag+0x1f0>
 548:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 54b:	74 72                	je     5bf <__abi_tag+0x233>
 54d:	00 63 61             	add    BYTE PTR [rbx+0x61],ah
 550:	70 61                	jo     5b3 <__abi_tag+0x227>
 552:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
 555:	79 00                	jns    557 <__abi_tag+0x1cb>
 557:	73 74                	jae    5cd <__abi_tag+0x241>
 559:	61                   	(bad)
 55a:	72 74                	jb     5d0 <__abi_tag+0x244>
 55c:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
 55f:	65 75 65             	gs jne 5c7 <__abi_tag+0x23b>
 562:	5f                   	pop    rdi
 563:	70 75                	jo     5da <__abi_tag+0x24e>
 565:	73 68                	jae    5cf <__abi_tag+0x243>
 567:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
 56a:	77 51                	ja     5bd <__abi_tag+0x231>
 56c:	75 65                	jne    5d3 <__abi_tag+0x247>
 56e:	75 65                	jne    5d5 <__abi_tag+0x249>
 570:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
 573:	65 75 65             	gs jne 5db <__abi_tag+0x24f>
 576:	5f                   	pop    rdi
 577:	70 6f                	jo     5e8 <__abi_tag+0x25c>
 579:	70 00                	jo     57b <__abi_tag+0x1ef>
 57b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
 57e:	65 74 65             	gs je  5e6 <__abi_tag+0x25a>
 581:	51                   	push   rcx
 582:	75 65                	jne    5e9 <__abi_tag+0x25d>
 584:	75 65                	jne    5eb <__abi_tag+0x25f>
 586:	00 66 75             	add    BYTE PTR [rsi+0x75],ah
 589:	6c                   	ins    BYTE PTR es:[rdi],dx
 58a:	6c                   	ins    BYTE PTR es:[rdi],dx
 58b:	00 65 6d             	add    BYTE PTR [rbp+0x6d],ah
 58e:	70 74                	jo     604 <__abi_tag+0x278>
 590:	79 00                	jns    592 <__abi_tag+0x206>
 592:	66 72 65             	data16 jb 5fa <__abi_tag+0x26e>
 595:	65 00 77 72          	add    BYTE PTR gs:[rdi+0x72],dh
 599:	69 74 65 70 74 72 00 	imul   esi,DWORD PTR [rbp+riz*2+0x70],0x72007274
 5a0:	72 
 5a1:	65 61                	gs (bad)
 5a3:	64 70 74             	fs jo  61a <__abi_tag+0x28e>
 5a6:	72 00                	jb     5a8 <__abi_tag+0x21c>
 5a8:	6d                   	ins    DWORD PTR es:[rdi],dx
 5a9:	61                   	(bad)
 5aa:	6c                   	ins    BYTE PTR es:[rdi],dx
 5ab:	6c                   	ins    BYTE PTR es:[rdi],dx
 5ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5ad:	63 00                	movsxd eax,DWORD PTR [rax]
 5af:	74 68                	je     619 <__abi_tag+0x28d>
 5b1:	72 65                	jb     618 <__abi_tag+0x28c>
 5b3:	61                   	(bad)
 5b4:	64 73 41             	fs jae 5f8 <__abi_tag+0x26c>
 5b7:	72 72                	jb     62b <__abi_tag+0x29f>
 5b9:	00 54 48 52          	add    BYTE PTR [rax+rcx*2+0x52],dl
 5bd:	45                   	rex.RB
 5be:	41                   	rex.B
 5bf:	44 5f                	rex.R pop rdi
 5c1:	52                   	push   rdx
 5c2:	45                   	rex.RB
 5c3:	41                   	rex.B
 5c4:	44 59                	rex.R pop rcx
 5c6:	00 74 68 72          	add    BYTE PTR [rax+rbp*2+0x72],dh
 5ca:	65 61                	gs (bad)
 5cc:	64 73 5f             	fs jae 62e <__abi_tag+0x2a2>
 5cf:	61                   	(bad)
 5d0:	72 72                	jb     644 <__abi_tag+0x2b8>
 5d2:	00 74 68 72          	add    BYTE PTR [rax+rbp*2+0x72],dh
 5d6:	65 61                	gs (bad)
 5d8:	64 70 6f             	fs jo  64a <__abi_tag+0x2be>
 5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5dc:	6c                   	ins    BYTE PTR es:[rdi],dx
 5dd:	5f                   	pop    rdi
 5de:	61                   	(bad)
 5df:	64 64 5f             	fs fs pop rdi
 5e2:	74 61                	je     645 <__abi_tag+0x2b9>
 5e4:	73 6b                	jae    651 <__abi_tag+0x2c5>
 5e6:	00 54 68 72          	add    BYTE PTR [rax+rbp*2+0x72],dl
 5ea:	65 61                	gs (bad)
 5ec:	64 70 6f             	fs jo  65e <__abi_tag+0x2d2>
 5ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5f0:	6c                   	ins    BYTE PTR es:[rdi],dx
 5f1:	00 54 48 52          	add    BYTE PTR [rax+rcx*2+0x52],dl
 5f5:	45                   	rex.RB
 5f6:	41                   	rex.B
 5f7:	44 5f                	rex.R pop rdi
 5f9:	49                   	rex.WB
 5fa:	4e 5f                	rex.WRX pop rdi
 5fc:	57                   	push   rdi
 5fd:	4f 52                	rex.WRXB push r10
 5ff:	4b 00 74 68 72       	rex.WXB add BYTE PTR [r8+r13*2+0x72],sil
 604:	65 61                	gs (bad)
 606:	64 70 6f             	fs jo  678 <__abi_tag+0x2ec>
 609:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 60a:	6c                   	ins    BYTE PTR es:[rdi],dx
 60b:	5f                   	pop    rdi
 60c:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 60f:	61                   	(bad)
 610:	74 65                	je     677 <__abi_tag+0x2eb>
 612:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 615:	68 72 65 61 64       	push   0x64616572
 61a:	5f                   	pop    rdi
 61b:	74 00                	je     61d <__abi_tag+0x291>
 61d:	74 68                	je     687 <__abi_tag+0x2fb>
 61f:	72 65                	jb     686 <__abi_tag+0x2fa>
 621:	61                   	(bad)
 622:	64 70 6f             	fs jo  694 <__abi_tag+0x308>
 625:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 626:	6c                   	ins    BYTE PTR es:[rdi],dx
 627:	5f                   	pop    rdi
 628:	68 61 6e 64 6c       	push   0x6c646e61
 62d:	65 72 00             	gs jb  630 <__abi_tag+0x2a4>
 630:	74 68                	je     69a <__abi_tag+0x30e>
 632:	72 65                	jb     699 <__abi_tag+0x30d>
 634:	61                   	(bad)
 635:	64 4e 75 6d          	fs rex.WRX jne 6a6 <__abi_tag+0x31a>
 639:	00 74 68 72          	add    BYTE PTR [rax+rbp*2+0x72],dh
 63d:	65 61                	gs (bad)
 63f:	64 70 6f             	fs jo  6b1 <__abi_tag+0x325>
 642:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 643:	6c                   	ins    BYTE PTR es:[rdi],dx
 644:	5f                   	pop    rdi
 645:	67 65 74 5f          	addr32 gs je 6a8 <__abi_tag+0x31c>
 649:	66 72 65             	data16 jb 6b1 <__abi_tag+0x325>
 64c:	65 5f                	gs pop rdi
 64e:	74 68                	je     6b8 <__abi_tag+0x32c>
 650:	72 65                	jb     6b7 <__abi_tag+0x32b>
 652:	61                   	(bad)
 653:	64 00 54 48 52       	add    BYTE PTR fs:[rax+rcx*2+0x52],dl
 658:	45                   	rex.RB
 659:	41                   	rex.B
 65a:	44 5f                	rex.R pop rdi
 65c:	53                   	push   rbx
 65d:	54                   	push   rsp
 65e:	41 54                	push   r12
 660:	45 53                	rex.RB push r11
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	73 72                	jae    74 <__abi_tag-0x318>
   2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   4:	65 70 6f             	gs jo  76 <__abi_tag-0x316>
   7:	6c                   	ins    BYTE PTR es:[rdi],dx
   8:	6c                   	ins    BYTE PTR es:[rdi],dx
   9:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
   c:	2f                   	(bad)
   d:	68 6f 6d 65 2f       	push   0x2f656d6f
  12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  13:	70 61                	jo     76 <__abi_tag-0x316>
  15:	2f                   	(bad)
  16:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  18:	62 65 64 64 65       	(bad)
  1d:	64 2f                	fs (bad)
  1f:	64 65 73 6b          	fs gs jae 8e <__abi_tag-0x2fe>
  23:	74 6f                	je     94 <__abi_tag-0x2f8>
  25:	70 2f                	jo     56 <__abi_tag-0x336>
  27:	74 75                	je     9e <__abi_tag-0x2ee>
  29:	74 2f                	je     5a <__abi_tag-0x332>
  2b:	6c                   	ins    BYTE PTR es:[rdi],dx
  2c:	69 6e 75 78 2f 6c 69 	imul   ebp,DWORD PTR [rsi+0x75],0x696c2f78
  33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  34:	75 78                	jne    ae <__abi_tag-0x2de>
  36:	5f                   	pop    rdi
  37:	74 75                	je     ae <__abi_tag-0x2de>
  39:	74 2f                	je     6a <__abi_tag-0x322>
  3b:	74 75                	je     b2 <__abi_tag-0x2da>
  3d:	74 5f                	je     9e <__abi_tag-0x2ee>
  3f:	6c                   	ins    BYTE PTR es:[rdi],dx
  40:	69 6e 2f 6d 75 6c 74 	imul   ebp,DWORD PTR [rsi+0x2f],0x746c756d
  47:	69 70 6c 65 78 69 6e 	imul   esi,DWORD PTR [rax+0x6c],0x6e697865
  4e:	67 5f                	addr32 pop rdi
  50:	66 64 2f             	data16 fs (bad)
  53:	66 61                	data16 (bad)
  55:	73 74                	jae    cb <__abi_tag-0x2c1>
  57:	5f                   	pop    rdi
  58:	73 65                	jae    bf <__abi_tag-0x2cd>
  5a:	72 76                	jb     d2 <__abi_tag-0x2ba>
  5c:	65 72 00             	gs jb  5f <__abi_tag-0x32d>
  5f:	73 72                	jae    d3 <__abi_tag-0x2b9>
  61:	63 00                	movsxd eax,DWORD PTR [rax]
  63:	2f                   	(bad)
  64:	75 73                	jne    d9 <__abi_tag-0x2b3>
  66:	72 2f                	jb     97 <__abi_tag-0x2f5>
  68:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  6f:	2f                   	(bad)
  70:	78 38                	js     aa <__abi_tag-0x2e2>
  72:	36 5f                	ss pop rdi
  74:	36 34 2d             	ss xor al,0x2d
  77:	6c                   	ins    BYTE PTR es:[rdi],dx
  78:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  7f:	75 2f                	jne    b0 <__abi_tag-0x2dc>
  81:	62 69 74 73 00       	(bad)
  86:	2f                   	(bad)
  87:	75 73                	jne    fc <__abi_tag-0x290>
  89:	72 2f                	jb     ba <__abi_tag-0x2d2>
  8b:	6c                   	ins    BYTE PTR es:[rdi],dx
  8c:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  93:	78 38                	js     cd <__abi_tag-0x2bf>
  95:	36 5f                	ss pop rdi
  97:	36 34 2d             	ss xor al,0x2d
  9a:	6c                   	ins    BYTE PTR es:[rdi],dx
  9b:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  a2:	75 2f                	jne    d3 <__abi_tag-0x2b9>
  a4:	31 33                	xor    DWORD PTR [rbx],esi
  a6:	2f                   	(bad)
  a7:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  ae:	00 2f                	add    BYTE PTR [rdi],ch
  b0:	75 73                	jne    125 <__abi_tag-0x267>
  b2:	72 2f                	jb     e3 <__abi_tag-0x2a9>
  b4:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  bb:	2f                   	(bad)
  bc:	78 38                	js     f6 <__abi_tag-0x296>
  be:	36 5f                	ss pop rdi
  c0:	36 34 2d             	ss xor al,0x2d
  c3:	6c                   	ins    BYTE PTR es:[rdi],dx
  c4:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  cb:	75 2f                	jne    fc <__abi_tag-0x290>
  cd:	73 79                	jae    148 <__abi_tag-0x244>
  cf:	73 00                	jae    d1 <__abi_tag-0x2bb>
  d1:	2f                   	(bad)
  d2:	75 73                	jne    147 <__abi_tag-0x245>
  d4:	72 2f                	jb     105 <__abi_tag-0x287>
  d6:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dd:	2f                   	(bad)
  de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  df:	65 74 69             	gs je  14b <__abi_tag-0x241>
  e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  e3:	65 74 00             	gs je  e6 <__abi_tag-0x2a6>
  e6:	2f                   	(bad)
  e7:	75 73                	jne    15c <__abi_tag-0x230>
  e9:	72 2f                	jb     11a <__abi_tag-0x272>
  eb:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  f2:	2f                   	(bad)
  f3:	78 38                	js     12d <__abi_tag-0x25f>
  f5:	36 5f                	ss pop rdi
  f7:	36 34 2d             	ss xor al,0x2d
  fa:	6c                   	ins    BYTE PTR es:[rdi],dx
  fb:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 102:	75 2f                	jne    133 <__abi_tag-0x259>
 104:	62 69 74 73 2f       	(bad)
 109:	74 79                	je     184 <__abi_tag-0x208>
 10b:	70 65                	jo     172 <__abi_tag-0x21a>
 10d:	73 00                	jae    10f <__abi_tag-0x27d>
 10f:	2f                   	(bad)
 110:	75 73                	jne    185 <__abi_tag-0x207>
 112:	72 2f                	jb     143 <__abi_tag-0x249>
 114:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 11b:	00 2f                	add    BYTE PTR [rdi],ch
 11d:	75 73                	jne    192 <__abi_tag-0x1fa>
 11f:	72 2f                	jb     150 <__abi_tag-0x23c>
 121:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 128:	2f                   	(bad)
 129:	61                   	(bad)
 12a:	72 70                	jb     19c <__abi_tag-0x1f0>
 12c:	61                   	(bad)
 12d:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 130:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7300
 137:	73 
 138:	74 64                	je     19e <__abi_tag-0x1ee>
 13a:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 141:	74 6e                	je     1b1 <__abi_tag-0x1db>
 143:	2e 68 00 73 6f 63    	cs push 0x636f7300
 149:	6b 65 74 2e          	imul   esp,DWORD PTR [rbp+0x74],0x2e
 14d:	68 00 73 6f 63       	push   0x636f7300
 152:	6b 61 64 64          	imul   esp,DWORD PTR [rcx+0x64],0x64
 156:	72 2e                	jb     186 <__abi_tag-0x206>
 158:	68 00 69 6e 2e       	push   0x2e6e6900
 15d:	68 00 73 74 72       	push   0x72747300
 162:	75 63                	jne    1c7 <__abi_tag-0x1c5>
 164:	74 5f                	je     1c5 <__abi_tag-0x1c7>
 166:	46                   	rex.RX
 167:	49                   	rex.WB
 168:	4c                   	rex.WR
 169:	45                   	rex.RB
 16a:	2e 68 00 73 6f 63    	cs push 0x636f7300
 170:	6b 65 74 5f          	imul   esp,DWORD PTR [rbp+0x74],0x5f
 174:	74 79                	je     1ef <__abi_tag-0x19d>
 176:	70 65                	jo     1dd <__abi_tag-0x1af>
 178:	2e 68 00 65 70 6f    	cs push 0x6f706500
 17e:	6c                   	ins    BYTE PTR es:[rdi],dx
 17f:	6c                   	ins    BYTE PTR es:[rdi],dx
 180:	2e 68 00 75 6e 69    	cs push 0x696e7500
 186:	73 74                	jae    1fc <__abi_tag-0x190>
 188:	64 2e 68 00 73 74 64 	fs cs push 0x64747300
 18f:	69 6f 2e 68 00 69 6e 	imul   ebp,DWORD PTR [rdi+0x2e],0x6e690068
 196:	65 74 2e             	gs je  1c7 <__abi_tag-0x1c5>
 199:	68 00 73 74 64       	push   0x64747300
 19e:	6c                   	ins    BYTE PTR es:[rdi],dx
 19f:	69 62 2e 68 00 65 72 	imul   esp,DWORD PTR [rdx+0x2e],0x72650068
 1a6:	72 6e                	jb     216 <__abi_tag-0x176>
 1a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1a9:	2e 68 00 73 72 63    	cs push 0x63727300
 1af:	2f                   	(bad)
 1b0:	71 75                	jno    227 <__abi_tag-0x165>
 1b2:	65 75 65             	gs jne 21a <__abi_tag-0x172>
 1b5:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
 1b8:	69 6e 63 00 71 75 65 	imul   ebp,DWORD PTR [rsi+0x63],0x65757100
 1bf:	75 65                	jne    226 <__abi_tag-0x166>
 1c1:	2e 68 00 73 72 63    	cs push 0x63727300
 1c7:	2f                   	(bad)
 1c8:	74 68                	je     232 <__abi_tag-0x15a>
 1ca:	72 65                	jb     231 <__abi_tag-0x15b>
 1cc:	61                   	(bad)
 1cd:	64 70 6f             	fs jo  23f <__abi_tag-0x14d>
 1d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1d1:	6c                   	ins    BYTE PTR es:[rdi],dx
 1d2:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
 1d5:	70 74                	jo     24b <__abi_tag-0x141>
 1d7:	68 72 65 61 64       	push   0x64616572
 1dc:	74 79                	je     257 <__abi_tag-0x135>
 1de:	70 65                	jo     245 <__abi_tag-0x147>
 1e0:	73 2e                	jae    210 <__abi_tag-0x17c>
 1e2:	68 00 74 68 72       	push   0x72687400
 1e7:	65 61                	gs (bad)
 1e9:	64 70 6f             	fs jo  25b <__abi_tag-0x131>
 1ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1ed:	6c                   	ins    BYTE PTR es:[rdi],dx
 1ee:	2e                   	cs
 1ef:	68                   	.byte 0x68
	...
